!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIGN_MASK	src/misc/lv_mem.c	31;"	d	file:
ALIGN_MASK	src/misc/lv_mem.c	34;"	d	file:
ALIGN_SIZE	src/misc/lv_tlsf.c	/^	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),$/;"	e	enum:tlsf_private	file:
ALIGN_SIZE_LOG2	src/misc/lv_tlsf.c	/^	ALIGN_SIZE_LOG2 = 3,$/;"	e	enum:tlsf_private	file:
AOBJS	tests/Makefile	/^AOBJS = $(ASRCS:.S=$(OBJEXT))$/;"	m
BIN	tests/Makefile	/^BIN ?= demo$/;"	m
BORDER_WIDTH	src/extra/themes/default/lv_theme_default.c	33;"	d	file:
BORDER_W_DIS	src/extra/themes/mono/lv_theme_mono.c	25;"	d	file:
BORDER_W_EDIT	src/extra/themes/mono/lv_theme_mono.c	27;"	d	file:
BORDER_W_FOCUS	src/extra/themes/mono/lv_theme_mono.c	26;"	d	file:
BORDER_W_NORMAL	src/extra/themes/mono/lv_theme_mono.c	23;"	d	file:
BORDER_W_PR	src/extra/themes/mono/lv_theme_mono.c	24;"	d	file:
BTN_EXTRA_CLICK_AREA_MAX	src/widgets/lv_btnmatrix.c	25;"	d	file:
CACHE_255	src/core/lv_obj_style.c	/^    CACHE_255 = 3,$/;"	e	enum:__anon188	file:
CACHE_NEED_CHECK	src/core/lv_obj_style.c	/^    CACHE_NEED_CHECK = 4,$/;"	e	enum:__anon188	file:
CACHE_TRUE	src/core/lv_obj_style.c	/^    CACHE_TRUE = 1,$/;"	e	enum:__anon188	file:
CACHE_UNSET	src/core/lv_obj_style.c	/^    CACHE_UNSET = 2,$/;"	e	enum:__anon188	file:
CACHE_ZERO	src/core/lv_obj_style.c	/^    CACHE_ZERO = 0,$/;"	e	enum:__anon188	file:
CANVAS_HEIGHT	examples/widgets/canvas/lv_example_canvas_1.c	6;"	d	file:
CANVAS_HEIGHT	examples/widgets/canvas/lv_example_canvas_2.c	5;"	d	file:
CANVAS_WIDTH	examples/widgets/canvas/lv_example_canvas_1.c	5;"	d	file:
CANVAS_WIDTH	examples/widgets/canvas/lv_example_canvas_2.c	4;"	d	file:
CC	tests/Makefile	/^CC ?= gcc$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS ?= -I$(LVGL_DIR)\/ $(DEFINES) $(WARNINGS) $(OPTIMIZATION) -I$(LVGL_DIR) -I.$/;"	m
CF_BUILT_IN_FIRST	src/draw/lv_img_decoder.c	18;"	d	file:
CF_BUILT_IN_LAST	src/draw/lv_img_decoder.c	19;"	d	file:
CMD_STATE_IN	src/draw/lv_draw_label.c	/^    CMD_STATE_IN,$/;"	e	enum:__anon89	file:
CMD_STATE_PAR	src/draw/lv_draw_label.c	/^    CMD_STATE_PAR,$/;"	e	enum:__anon89	file:
CMD_STATE_WAIT	src/draw/lv_draw_label.c	/^    CMD_STATE_WAIT,$/;"	e	enum:__anon89	file:
COBJS	tests/Makefile	/^COBJS = $(CSRCS:.c=$(OBJEXT))$/;"	m
COLOR_BG	src/extra/themes/mono/lv_theme_mono.c	21;"	d	file:
COLOR_DARK	src/extra/themes/basic/lv_theme_basic.c	23;"	d	file:
COLOR_DIM	src/extra/themes/basic/lv_theme_basic.c	24;"	d	file:
COLOR_FG	src/extra/themes/mono/lv_theme_mono.c	20;"	d	file:
COLOR_LIGHT	src/extra/themes/basic/lv_theme_basic.c	21;"	d	file:
COLOR_MID	src/extra/themes/basic/lv_theme_basic.c	22;"	d	file:
COLOR_WHITE	src/extra/themes/basic/lv_theme_basic.c	20;"	d	file:
COMPONENT_ADD_INCLUDEDIRS	component.mk	/^COMPONENT_ADD_INCLUDEDIRS := $(COMPONENT_SRCDIRS) .$/;"	m
COMPONENT_SRCDIRS	component.mk	/^COMPONENT_SRCDIRS := . \\$/;"	m
CONFIG_LV_BIDI_BASE_DIR_DEF	src/lv_conf_kconfig.h	135;"	d
CONFIG_LV_BIDI_BASE_DIR_DEF	src/lv_conf_kconfig.h	137;"	d
CONFIG_LV_BIDI_BASE_DIR_DEF	src/lv_conf_kconfig.h	139;"	d
CONFIG_LV_COLOR_CHROMA_KEY	src/lv_conf_kconfig.h	41;"	d
CONFIG_LV_COLOR_CHROMA_KEY	src/lv_conf_kconfig.h	43;"	d
CONFIG_LV_MEM_SIZE	src/lv_conf_kconfig.h	31;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	100;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	102;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	104;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	106;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	108;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	110;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	112;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	114;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	62;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	64;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	66;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	68;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	70;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	72;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	74;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	76;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	78;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	80;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	82;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	84;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	86;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	88;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	90;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	92;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	94;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	96;"	d
CONFIG_LV_THEME_DEFAULT_FONT	src/lv_conf_kconfig.h	98;"	d
CONFIG_LV_TXT_ENC	src/lv_conf_kconfig.h	123;"	d
CONFIG_LV_TXT_ENC	src/lv_conf_kconfig.h	125;"	d
COPY32	src/misc/lv_mem.c	68;"	d	file:
COPY8	src/misc/lv_mem.c	69;"	d	file:
DARK_COLOR_CARD	src/extra/themes/default/lv_theme_default.c	28;"	d	file:
DARK_COLOR_GREY	src/extra/themes/default/lv_theme_default.c	30;"	d	file:
DARK_COLOR_SCR	src/extra/themes/default/lv_theme_default.c	27;"	d	file:
DARK_COLOR_TEXT	src/extra/themes/default/lv_theme_default.c	29;"	d	file:
DEF_PERIOD	src/misc/lv_timer.c	18;"	d	file:
DISP_LARGE	src/extra/themes/default/lv_theme_default.c	/^    DISP_LARGE = 1,$/;"	e	enum:__anon100	file:
DISP_MEDIUM	src/extra/themes/default/lv_theme_default.c	/^    DISP_MEDIUM = 2,$/;"	e	enum:__anon100	file:
DISP_SMALL	src/extra/themes/default/lv_theme_default.c	/^    DISP_SMALL = 3,$/;"	e	enum:__anon100	file:
ELASTIC_SLOWNESS_FACTOR	src/core/lv_indev_scroll.c	15;"	d	file:
EVENT_TRACE	src/core/lv_event.c	42;"	d	file:
EVENT_TRACE	src/core/lv_event.c	44;"	d	file:
FILL_NORMAL_MASK_PX	src/draw/lv_draw_blend.c	77;"	d	file:
FILL_NORMAL_MASK_PX_SCR_TRANSP	src/draw/lv_draw_blend.c	84;"	d	file:
FLAGS_ADAPT_EXP	src/misc/lv_printf.c	109;"	d	file:
FLAGS_CHAR	src/misc/lv_printf.c	104;"	d	file:
FLAGS_HASH	src/misc/lv_printf.c	102;"	d	file:
FLAGS_LEFT	src/misc/lv_printf.c	99;"	d	file:
FLAGS_LONG	src/misc/lv_printf.c	106;"	d	file:
FLAGS_LONG_LONG	src/misc/lv_printf.c	107;"	d	file:
FLAGS_PLUS	src/misc/lv_printf.c	100;"	d	file:
FLAGS_PRECISION	src/misc/lv_printf.c	108;"	d	file:
FLAGS_SHORT	src/misc/lv_printf.c	105;"	d	file:
FLAGS_SPACE	src/misc/lv_printf.c	101;"	d	file:
FLAGS_UPPERCASE	src/misc/lv_printf.c	103;"	d	file:
FLAGS_ZEROPAD	src/misc/lv_printf.c	98;"	d	file:
FL_INDEX_COUNT	src/misc/lv_tlsf.c	/^	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),$/;"	e	enum:tlsf_private	file:
FL_INDEX_MAX	src/misc/lv_tlsf.c	/^	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),$/;"	e	enum:tlsf_private	file:
FL_INDEX_SHIFT	src/misc/lv_tlsf.c	/^	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),$/;"	e	enum:tlsf_private	file:
FONT_1	tests/lv_test_fonts/font_1.c	10;"	d	file:
FONT_2	tests/lv_test_fonts/font_2.c	10;"	d	file:
FONT_3	tests/lv_test_fonts/font_3.c	10;"	d	file:
GET_FR	src/extra/layouts/grid/lv_grid.c	21;"	d	file:
GET_POS	src/misc/lv_bidi.c	22;"	d	file:
GPU_SIZE_LIMIT	src/draw/lv_draw_blend.c	26;"	d	file:
GRID_DEBUG	src/core/lv_obj.c	39;"	d	file:
HOR_RES	tests/lv_test_main.c	10;"	d	file:
HSV_PTR_SWAP	src/extra/widgets/colorwheel/lv_colorwheel.c	590;"	d	file:
IDLE_MEAS_PERIOD	src/misc/lv_timer.c	17;"	d	file:
INCLUDED_tlsf	src/misc/lv_tlsf.h	5;"	d
INDEV_TRACE	src/core/lv_indev.c	55;"	d	file:
INDEV_TRACE	src/core/lv_indev.c	57;"	d	file:
INDEV_TRACE	src/hal/lv_hal_indev.c	42;"	d	file:
INDEV_TRACE	src/hal/lv_hal_indev.c	44;"	d	file:
IS_CONTENT	src/extra/layouts/grid/lv_grid.c	20;"	d	file:
IS_FR	src/extra/layouts/grid/lv_grid.c	19;"	d	file:
IS_RTL_POS	src/misc/lv_bidi.c	23;"	d	file:
ITEM_CNT	examples/widgets/table/lv_example_table_2.c	4;"	d	file:
LABEL_RECOLOR_PAR_LENGTH	src/draw/lv_draw_label.c	19;"	d	file:
LDFLAGS	tests/Makefile	/^LDFLAGS ?=  -lpng$/;"	m
LIGHT_COLOR_CARD	src/extra/themes/default/lv_theme_default.c	24;"	d	file:
LIGHT_COLOR_GREY	src/extra/themes/default/lv_theme_default.c	26;"	d	file:
LIGHT_COLOR_SCR	src/extra/themes/default/lv_theme_default.c	23;"	d	file:
LIGHT_COLOR_TEXT	src/extra/themes/default/lv_theme_default.c	25;"	d	file:
LL_NEXT_P_OFFSET	src/misc/lv_ll.c	21;"	d	file:
LL_NODE_META_SIZE	src/misc/lv_ll.c	19;"	d	file:
LL_PREV_P_OFFSET	src/misc/lv_ll.c	20;"	d	file:
LVGL_DIR	tests/Makefile	/^LVGL_DIR ?= ${shell pwd}\/..\/..$/;"	m
LVGL_DIR_NAME	tests/Makefile	/^LVGL_DIR_NAME ?= lvgl$/;"	m
LVGL_H	lvgl.h	7;"	d
LVGL_SRC_H	src/lvgl.h	7;"	d
LVGL_VERSION_INFO	lvgl.h	19;"	d
LVGL_VERSION_MAJOR	lvgl.h	16;"	d
LVGL_VERSION_MINOR	lvgl.h	17;"	d
LVGL_VERSION_PATCH	lvgl.h	18;"	d
LV_ABS	src/misc/lv_math.h	131;"	d
LV_ALIGN_BOTTOM_LEFT	src/misc/lv_area.h	/^    LV_ALIGN_BOTTOM_LEFT,$/;"	e	enum:__anon43
LV_ALIGN_BOTTOM_MID	src/misc/lv_area.h	/^    LV_ALIGN_BOTTOM_MID,$/;"	e	enum:__anon43
LV_ALIGN_BOTTOM_RIGHT	src/misc/lv_area.h	/^    LV_ALIGN_BOTTOM_RIGHT,$/;"	e	enum:__anon43
LV_ALIGN_CENTER	src/misc/lv_area.h	/^    LV_ALIGN_CENTER,$/;"	e	enum:__anon43
LV_ALIGN_DEFAULT	src/misc/lv_area.h	/^    LV_ALIGN_DEFAULT = 0,$/;"	e	enum:__anon43
LV_ALIGN_LEFT_MID	src/misc/lv_area.h	/^    LV_ALIGN_LEFT_MID,$/;"	e	enum:__anon43
LV_ALIGN_OUT_BOTTOM_LEFT	src/misc/lv_area.h	/^    LV_ALIGN_OUT_BOTTOM_LEFT,$/;"	e	enum:__anon43
LV_ALIGN_OUT_BOTTOM_MID	src/misc/lv_area.h	/^    LV_ALIGN_OUT_BOTTOM_MID,$/;"	e	enum:__anon43
LV_ALIGN_OUT_BOTTOM_RIGHT	src/misc/lv_area.h	/^    LV_ALIGN_OUT_BOTTOM_RIGHT,$/;"	e	enum:__anon43
LV_ALIGN_OUT_LEFT_BOTTOM	src/misc/lv_area.h	/^    LV_ALIGN_OUT_LEFT_BOTTOM,$/;"	e	enum:__anon43
LV_ALIGN_OUT_LEFT_MID	src/misc/lv_area.h	/^    LV_ALIGN_OUT_LEFT_MID,$/;"	e	enum:__anon43
LV_ALIGN_OUT_LEFT_TOP	src/misc/lv_area.h	/^    LV_ALIGN_OUT_LEFT_TOP,$/;"	e	enum:__anon43
LV_ALIGN_OUT_RIGHT_BOTTOM	src/misc/lv_area.h	/^    LV_ALIGN_OUT_RIGHT_BOTTOM,$/;"	e	enum:__anon43
LV_ALIGN_OUT_RIGHT_MID	src/misc/lv_area.h	/^    LV_ALIGN_OUT_RIGHT_MID,$/;"	e	enum:__anon43
LV_ALIGN_OUT_RIGHT_TOP	src/misc/lv_area.h	/^    LV_ALIGN_OUT_RIGHT_TOP,$/;"	e	enum:__anon43
LV_ALIGN_OUT_TOP_LEFT	src/misc/lv_area.h	/^    LV_ALIGN_OUT_TOP_LEFT,$/;"	e	enum:__anon43
LV_ALIGN_OUT_TOP_MID	src/misc/lv_area.h	/^    LV_ALIGN_OUT_TOP_MID,$/;"	e	enum:__anon43
LV_ALIGN_OUT_TOP_RIGHT	src/misc/lv_area.h	/^    LV_ALIGN_OUT_TOP_RIGHT,$/;"	e	enum:__anon43
LV_ALIGN_RIGHT_MID	src/misc/lv_area.h	/^    LV_ALIGN_RIGHT_MID,$/;"	e	enum:__anon43
LV_ALIGN_TOP_LEFT	src/misc/lv_area.h	/^    LV_ALIGN_TOP_LEFT,$/;"	e	enum:__anon43
LV_ALIGN_TOP_MID	src/misc/lv_area.h	/^    LV_ALIGN_TOP_MID,$/;"	e	enum:__anon43
LV_ALIGN_TOP_RIGHT	src/misc/lv_area.h	/^    LV_ALIGN_TOP_RIGHT,$/;"	e	enum:__anon43
LV_ANIM_H	src/misc/lv_anim.h	7;"	d
LV_ANIM_IMG_H	src/extra/widgets/animimg/lv_animimg.h	7;"	d
LV_ANIM_IMG_PART_MAIN	src/extra/widgets/animimg/lv_animimg.h	/^    LV_ANIM_IMG_PART_MAIN,$/;"	e	enum:__anon119
LV_ANIM_OFF	src/misc/lv_anim.h	/^    LV_ANIM_OFF,$/;"	e	enum:__anon22
LV_ANIM_ON	src/misc/lv_anim.h	/^    LV_ANIM_ON,$/;"	e	enum:__anon22
LV_ANIM_REPEAT_INFINITE	src/misc/lv_anim.h	/^LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);$/;"	v
LV_ANIM_REPEAT_INFINITE	src/misc/lv_anim.h	36;"	d
LV_ANIM_RESOLUTION	src/misc/lv_anim.c	23;"	d	file:
LV_ANIM_RES_SHIFT	src/misc/lv_anim.c	24;"	d	file:
LV_API_MAP_H	src/lv_api_map.h	7;"	d
LV_AP_ALPHABET_BASE_CODE	src/misc/lv_txt_ap.h	27;"	d
LV_AP_END_CHARS_LIST	src/misc/lv_txt_ap.h	28;"	d
LV_ARCH_64	src/misc/lv_types.h	27;"	d
LV_ARCH_64	src/misc/lv_types.h	30;"	d
LV_ARCH_64	src/misc/lv_types.h	34;"	d
LV_ARC_H	src/widgets/lv_arc.h	7;"	d
LV_ARC_MODE_NORMAL	src/widgets/lv_arc.h	/^    LV_ARC_MODE_NORMAL,$/;"	e	enum:__anon165
LV_ARC_MODE_REVERSE	src/widgets/lv_arc.h	/^    LV_ARC_MODE_REVERSE$/;"	e	enum:__anon165
LV_ARC_MODE_SYMMETRICAL	src/widgets/lv_arc.h	/^    LV_ARC_MODE_SYMMETRICAL,$/;"	e	enum:__anon165
LV_AREA_H	src/misc/lv_area.h	7;"	d
LV_ASSERT	src/misc/lv_assert.h	36;"	d
LV_ASSERT_H	src/misc/lv_assert.h	7;"	d
LV_ASSERT_HANDLER	src/lv_conf_internal.h	483;"	d
LV_ASSERT_HANDLER	src/lv_conf_internal.h	485;"	d
LV_ASSERT_HANDLER_INCLUDE	src/lv_conf_internal.h	476;"	d
LV_ASSERT_HANDLER_INCLUDE	src/lv_conf_internal.h	478;"	d
LV_ASSERT_MALLOC	src/misc/lv_assert.h	63;"	d
LV_ASSERT_MALLOC	src/misc/lv_assert.h	65;"	d
LV_ASSERT_MEM_INTEGRITY	src/misc/lv_assert.h	69;"	d
LV_ASSERT_MEM_INTEGRITY	src/misc/lv_assert.h	71;"	d
LV_ASSERT_MSG	src/misc/lv_assert.h	44;"	d
LV_ASSERT_NULL	src/misc/lv_assert.h	57;"	d
LV_ASSERT_NULL	src/misc/lv_assert.h	59;"	d
LV_ASSERT_OBJ	src/core/lv_obj.h	367;"	d
LV_ASSERT_OBJ	src/core/lv_obj.h	373;"	d
LV_ASSERT_STYLE	src/misc/lv_style.h	462;"	d
LV_ASSERT_STYLE	src/misc/lv_style.h	465;"	d
LV_ASYNC_H	src/misc/lv_async.h	7;"	d
LV_ATTRIBUTE_DMA	src/lv_conf_internal.h	677;"	d
LV_ATTRIBUTE_DMA	src/lv_conf_internal.h	679;"	d
LV_ATTRIBUTE_FAST_MEM	src/lv_conf_internal.h	668;"	d
LV_ATTRIBUTE_FAST_MEM	src/lv_conf_internal.h	670;"	d
LV_ATTRIBUTE_FLUSH_READY	src/hal/lv_hal_disp.h	34;"	d
LV_ATTRIBUTE_FLUSH_READY	src/lv_conf_internal.h	622;"	d
LV_ATTRIBUTE_FLUSH_READY	src/lv_conf_internal.h	624;"	d
LV_ATTRIBUTE_IMG_ANIMIMG001	examples/assets/animimg001.c	13;"	d	file:
LV_ATTRIBUTE_IMG_ANIMIMG002	examples/assets/animimg002.c	13;"	d	file:
LV_ATTRIBUTE_IMG_ANIMIMG003	examples/assets/animimg003.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMGBTN_LEFT	examples/assets/imgbtn_left.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMGBTN_MID	examples/assets/imgbtn_mid.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMGBTN_RIGHT	examples/assets/imgbtn_right.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMG_CARET_DOWN	examples/assets/img_caret_down.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ALPHA16	examples/assets/img_cogwheel_alpha16.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGB	examples/assets/img_cogwheel_argb.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYED	examples/assets/img_cogwheel_chroma_keyed.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED16	examples/assets/img_cogwheel_indexed16.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGB	examples/assets/img_cogwheel_rgb.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_HAND	examples/assets/img_hand.c	8;"	d	file:
LV_ATTRIBUTE_IMG_IMG_SKEW_STRIP	examples/assets/img_skew_strip.c	13;"	d	file:
LV_ATTRIBUTE_IMG_IMG_STAR	examples/assets/img_star.c	13;"	d	file:
LV_ATTRIBUTE_LARGE_CONST	src/lv_conf_internal.h	650;"	d
LV_ATTRIBUTE_LARGE_CONST	src/lv_conf_internal.h	652;"	d
LV_ATTRIBUTE_LARGE_RAM_ARRAY	src/lv_conf_internal.h	659;"	d
LV_ATTRIBUTE_LARGE_RAM_ARRAY	src/lv_conf_internal.h	661;"	d
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/animimg001.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/animimg002.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/animimg003.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_caret_down.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_cogwheel_alpha16.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_cogwheel_argb.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_cogwheel_chroma_keyed.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_cogwheel_indexed16.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_cogwheel_rgb.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_hand.c	4;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_skew_strip.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/img_star.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/imgbtn_left.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/imgbtn_mid.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	examples/assets/imgbtn_right.c	9;"	d	file:
LV_ATTRIBUTE_MEM_ALIGN	src/lv_conf_internal.h	641;"	d
LV_ATTRIBUTE_MEM_ALIGN	src/lv_conf_internal.h	643;"	d
LV_ATTRIBUTE_MEM_ALIGN_SIZE	src/lv_conf_internal.h	631;"	d
LV_ATTRIBUTE_MEM_ALIGN_SIZE	src/lv_conf_internal.h	633;"	d
LV_ATTRIBUTE_TICK_INC	src/hal/lv_hal_tick.h	25;"	d
LV_ATTRIBUTE_TICK_INC	src/lv_conf_internal.h	604;"	d
LV_ATTRIBUTE_TICK_INC	src/lv_conf_internal.h	606;"	d
LV_ATTRIBUTE_TIMER_HANDLER	src/lv_conf_internal.h	613;"	d
LV_ATTRIBUTE_TIMER_HANDLER	src/lv_conf_internal.h	615;"	d
LV_ATTRIBUTE_TIMER_HANDLER	src/misc/lv_timer.h	26;"	d
LV_BAR_ANIM_STATE_END	src/widgets/lv_bar.c	32;"	d	file:
LV_BAR_ANIM_STATE_INV	src/widgets/lv_bar.c	35;"	d	file:
LV_BAR_ANIM_STATE_NORM	src/widgets/lv_bar.c	38;"	d	file:
LV_BAR_ANIM_STATE_START	src/widgets/lv_bar.c	29;"	d	file:
LV_BAR_GET_ANIM_VALUE	src/widgets/lv_bar.c	26;"	d	file:
LV_BAR_H	src/widgets/lv_bar.h	7;"	d
LV_BAR_IS_ANIMATING	src/widgets/lv_bar.c	25;"	d	file:
LV_BAR_MODE_NORMAL	src/widgets/lv_bar.h	/^    LV_BAR_MODE_NORMAL,$/;"	e	enum:__anon174
LV_BAR_MODE_RANGE	src/widgets/lv_bar.h	/^    LV_BAR_MODE_RANGE$/;"	e	enum:__anon174
LV_BAR_MODE_SYMMETRICAL	src/widgets/lv_bar.h	/^    LV_BAR_MODE_SYMMETRICAL,$/;"	e	enum:__anon174
LV_BAR_SIZE_MIN	src/widgets/lv_bar.c	23;"	d	file:
LV_BASE_DIR_AUTO	src/misc/lv_bidi.h	/^    LV_BASE_DIR_AUTO     = 0x02,$/;"	e	enum:__anon25
LV_BASE_DIR_LTR	src/misc/lv_bidi.h	/^    LV_BASE_DIR_LTR      = 0x00,$/;"	e	enum:__anon25
LV_BASE_DIR_NEUTRAL	src/misc/lv_bidi.h	/^    LV_BASE_DIR_NEUTRAL  = 0x20,$/;"	e	enum:__anon25
LV_BASE_DIR_RTL	src/misc/lv_bidi.h	/^    LV_BASE_DIR_RTL      = 0x01,$/;"	e	enum:__anon25
LV_BASE_DIR_WEAK	src/misc/lv_bidi.h	/^    LV_BASE_DIR_WEAK     = 0x21,$/;"	e	enum:__anon25
LV_BEZIER_VAL_MAX	src/misc/lv_math.h	25;"	d
LV_BEZIER_VAL_SHIFT	src/misc/lv_math.h	26;"	d
LV_BIDI_BASE_DIR_DEF	src/lv_conf_internal.h	1044;"	d
LV_BIDI_BASE_DIR_DEF	src/lv_conf_internal.h	1046;"	d
LV_BIDI_BRACKLET_DEPTH	src/misc/lv_bidi.c	19;"	d	file:
LV_BIDI_H	src/misc/lv_bidi.h	7;"	d
LV_BIDI_LRO	src/misc/lv_bidi.h	26;"	d
LV_BIDI_RLO	src/misc/lv_bidi.h	27;"	d
LV_BIG_ENDIAN_SYSTEM	src/lv_conf_internal.h	595;"	d
LV_BIG_ENDIAN_SYSTEM	src/lv_conf_internal.h	597;"	d
LV_BLEND_MODE_ADDITIVE	src/misc/lv_style.h	/^    LV_BLEND_MODE_ADDITIVE,   \/**< Add the respective color channels*\/$/;"	e	enum:__anon12
LV_BLEND_MODE_NORMAL	src/misc/lv_style.h	/^    LV_BLEND_MODE_NORMAL,     \/**< Simply mix according to the opacity value*\/$/;"	e	enum:__anon12
LV_BLEND_MODE_SUBTRACTIVE	src/misc/lv_style.h	/^    LV_BLEND_MODE_SUBTRACTIVE,\/**< Subtract the foreground from the background*\/$/;"	e	enum:__anon12
LV_BORDER_SIDE_BOTTOM	src/misc/lv_style.h	/^    LV_BORDER_SIDE_BOTTOM   = 0x01,$/;"	e	enum:__anon14
LV_BORDER_SIDE_FULL	src/misc/lv_style.h	/^    LV_BORDER_SIDE_FULL     = 0x0F,$/;"	e	enum:__anon14
LV_BORDER_SIDE_INTERNAL	src/misc/lv_style.h	/^    LV_BORDER_SIDE_INTERNAL = 0x10, \/**< FOR matrix-like objects (e.g. Button matrix)*\/$/;"	e	enum:__anon14
LV_BORDER_SIDE_LEFT	src/misc/lv_style.h	/^    LV_BORDER_SIDE_LEFT     = 0x04,$/;"	e	enum:__anon14
LV_BORDER_SIDE_NONE	src/misc/lv_style.h	/^    LV_BORDER_SIDE_NONE     = 0x00,$/;"	e	enum:__anon14
LV_BORDER_SIDE_RIGHT	src/misc/lv_style.h	/^    LV_BORDER_SIDE_RIGHT    = 0x08,$/;"	e	enum:__anon14
LV_BORDER_SIDE_TOP	src/misc/lv_style.h	/^    LV_BORDER_SIDE_TOP      = 0x02,$/;"	e	enum:__anon14
LV_BTNMATRIX_BTN_NONE	src/widgets/lv_btnmatrix.h	/^LV_EXPORT_CONST_INT(LV_BTNMATRIX_BTN_NONE);$/;"	v
LV_BTNMATRIX_BTN_NONE	src/widgets/lv_btnmatrix.h	25;"	d
LV_BTNMATRIX_CTRL_CHECKABLE	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_CHECKABLE  = 0x0040, \/**< The button can be toggled.*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_CHECKED	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_CHECKED    = 0x0080, \/**< Button is currently toggled (e.g. checked).*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_CLICK_TRIG	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_CLICK_TRIG = 0x0100, \/**< 1: Send LV_EVENT_VALUE_CHANGE on CLICK, 0: Send LV_EVENT_VALUE_CHANGE on PRESS*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_CUSTOM_1	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_CUSTOM_1   = 0x4000, \/**< Custom free to use flag*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_CUSTOM_2	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_CUSTOM_2   = 0x8000, \/**< Custom free to use flag*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_DISABLED	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_DISABLED   = 0x0020, \/**< Disable this button.*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_HIDDEN	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_HIDDEN     = 0x0008, \/**< Button hidden*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_NO_REPEAT	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_NO_REPEAT  = 0x0010, \/**< Do not repeat press this button.*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_CTRL_RECOLOR	src/widgets/lv_btnmatrix.h	/^    LV_BTNMATRIX_CTRL_RECOLOR    = 0x1000, \/**< Enable text recoloring with `#color`*\/$/;"	e	enum:__anon155
LV_BTNMATRIX_H	src/widgets/lv_btnmatrix.h	7;"	d
LV_BTNMATRIX_WIDTH_MASK	src/widgets/lv_btnmatrix.c	26;"	d	file:
LV_BTN_H	src/widgets/lv_btn.h	7;"	d
LV_BUILD_EXAMPLES	src/lv_conf_internal.h	1503;"	d
LV_BUILD_EXAMPLES	src/lv_conf_internal.h	1505;"	d
LV_CALENDAR_CTRL_HIGHLIGHT	src/extra/widgets/calendar/lv_calendar.c	17;"	d	file:
LV_CALENDAR_CTRL_TODAY	src/extra/widgets/calendar/lv_calendar.c	16;"	d	file:
LV_CALENDAR_DEFAULT_DAY_NAMES	src/lv_conf_internal.h	1255;"	d
LV_CALENDAR_DEFAULT_DAY_NAMES	src/lv_conf_internal.h	1257;"	d
LV_CALENDAR_DEFAULT_DAY_NAMES	src/lv_conf_internal.h	1263;"	d
LV_CALENDAR_DEFAULT_DAY_NAMES	src/lv_conf_internal.h	1265;"	d
LV_CALENDAR_DEFAULT_MONTH_NAMES	src/lv_conf_internal.h	1272;"	d
LV_CALENDAR_DEFAULT_MONTH_NAMES	src/lv_conf_internal.h	1274;"	d
LV_CALENDAR_H	src/extra/widgets/calendar/lv_calendar.h	7;"	d
LV_CALENDAR_HEADER_ARROW_H	src/extra/widgets/calendar/lv_calendar_header_arrow.h	7;"	d
LV_CALENDAR_HEADER_DROPDOWN_H	src/extra/widgets/calendar/lv_calendar_header_dropdown.h	7;"	d
LV_CALENDAR_WEEK_STARTS_MONDAY	src/lv_conf_internal.h	1247;"	d
LV_CALENDAR_WEEK_STARTS_MONDAY	src/lv_conf_internal.h	1249;"	d
LV_CANVAS_BUF_SIZE_ALPHA_1BIT	src/widgets/lv_canvas.h	243;"	d
LV_CANVAS_BUF_SIZE_ALPHA_2BIT	src/widgets/lv_canvas.h	244;"	d
LV_CANVAS_BUF_SIZE_ALPHA_4BIT	src/widgets/lv_canvas.h	245;"	d
LV_CANVAS_BUF_SIZE_ALPHA_8BIT	src/widgets/lv_canvas.h	246;"	d
LV_CANVAS_BUF_SIZE_INDEXED_1BIT	src/widgets/lv_canvas.h	249;"	d
LV_CANVAS_BUF_SIZE_INDEXED_2BIT	src/widgets/lv_canvas.h	250;"	d
LV_CANVAS_BUF_SIZE_INDEXED_4BIT	src/widgets/lv_canvas.h	251;"	d
LV_CANVAS_BUF_SIZE_INDEXED_8BIT	src/widgets/lv_canvas.h	252;"	d
LV_CANVAS_BUF_SIZE_TRUE_COLOR	src/widgets/lv_canvas.h	238;"	d
LV_CANVAS_BUF_SIZE_TRUE_COLOR_ALPHA	src/widgets/lv_canvas.h	240;"	d
LV_CANVAS_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED	src/widgets/lv_canvas.h	239;"	d
LV_CANVAS_H	src/widgets/lv_canvas.h	7;"	d
LV_CHART_AXIS_PRIMARY_X	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_AXIS_PRIMARY_X     = 0x02,$/;"	e	enum:__anon106
LV_CHART_AXIS_PRIMARY_Y	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_AXIS_PRIMARY_Y     = 0x00,$/;"	e	enum:__anon106
LV_CHART_AXIS_SECONDARY_X	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_AXIS_SECONDARY_X   = 0x04,$/;"	e	enum:__anon106
LV_CHART_AXIS_SECONDARY_Y	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_AXIS_SECONDARY_Y   = 0x01,$/;"	e	enum:__anon106
LV_CHART_H	src/extra/widgets/chart/lv_chart.h	7;"	d
LV_CHART_HDIV_DEF	src/extra/widgets/chart/lv_chart.c	17;"	d	file:
LV_CHART_POINT_CNT_DEF	src/extra/widgets/chart/lv_chart.c	19;"	d	file:
LV_CHART_POINT_NONE	src/extra/widgets/chart/lv_chart.h	/^LV_EXPORT_CONST_INT(LV_CHART_POINT_NONE);$/;"	v
LV_CHART_POINT_NONE	src/extra/widgets/chart/lv_chart.h	25;"	d
LV_CHART_TYPE_BAR	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_TYPE_BAR,      \/**< Draw columns*\/$/;"	e	enum:__anon104
LV_CHART_TYPE_LINE	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_TYPE_LINE,     \/**< Connect the points with lines*\/$/;"	e	enum:__anon104
LV_CHART_TYPE_NONE	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_TYPE_NONE,     \/**< Don't draw the series*\/$/;"	e	enum:__anon104
LV_CHART_TYPE_SCATTER	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_TYPE_SCATTER,  \/**< Draw points and lines in 2D (x,y coordinates)*\/$/;"	e	enum:__anon104
LV_CHART_UPDATE_MODE_CIRCULAR	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_UPDATE_MODE_CIRCULAR,  \/**< Add the new data in a circular way*\/$/;"	e	enum:__anon105
LV_CHART_UPDATE_MODE_SHIFT	src/extra/widgets/chart/lv_chart.h	/^    LV_CHART_UPDATE_MODE_SHIFT,     \/**< Shift old data to the left and add the new one the right*\/$/;"	e	enum:__anon105
LV_CHART_VDIV_DEF	src/extra/widgets/chart/lv_chart.c	18;"	d	file:
LV_CHECKBOX_H	src/widgets/lv_checkbox.h	7;"	d
LV_CLAMP	src/misc/lv_math.h	129;"	d
LV_CLEAR_ROOT	src/misc/lv_gc.c	43;"	d	file:
LV_COLORWHEEL_H	src/extra/widgets/colorwheel/lv_colorwheel.h	7;"	d
LV_COLORWHEEL_MODE_HUE	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    LV_COLORWHEEL_MODE_HUE,$/;"	e	enum:__anon111
LV_COLORWHEEL_MODE_SATURATION	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    LV_COLORWHEEL_MODE_SATURATION,$/;"	e	enum:__anon111
LV_COLORWHEEL_MODE_VALUE	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    LV_COLORWHEEL_MODE_VALUE$/;"	e	enum:__anon111
LV_COLOR_16_SWAP	src/lv_conf_internal.h	70;"	d
LV_COLOR_16_SWAP	src/lv_conf_internal.h	72;"	d
LV_COLOR_CHROMA_KEY	src/lv_conf_internal.h	90;"	d
LV_COLOR_CHROMA_KEY	src/lv_conf_internal.h	92;"	d
LV_COLOR_DEPTH	src/lv_conf_internal.h	61;"	d
LV_COLOR_DEPTH	src/lv_conf_internal.h	63;"	d
LV_COLOR_GET_A	src/misc/lv_color.h	199;"	d
LV_COLOR_GET_A1	src/misc/lv_color.h	130;"	d
LV_COLOR_GET_A16	src/misc/lv_color.h	164;"	d
LV_COLOR_GET_A32	src/misc/lv_color.h	182;"	d
LV_COLOR_GET_A8	src/misc/lv_color.h	143;"	d
LV_COLOR_GET_B	src/misc/lv_color.h	198;"	d
LV_COLOR_GET_B1	src/misc/lv_color.h	129;"	d
LV_COLOR_GET_B16	src/misc/lv_color.h	163;"	d
LV_COLOR_GET_B32	src/misc/lv_color.h	181;"	d
LV_COLOR_GET_B8	src/misc/lv_color.h	142;"	d
LV_COLOR_GET_G	src/misc/lv_color.h	197;"	d
LV_COLOR_GET_G1	src/misc/lv_color.h	128;"	d
LV_COLOR_GET_G16	src/misc/lv_color.h	159;"	d
LV_COLOR_GET_G16	src/misc/lv_color.h	161;"	d
LV_COLOR_GET_G32	src/misc/lv_color.h	180;"	d
LV_COLOR_GET_G8	src/misc/lv_color.h	141;"	d
LV_COLOR_GET_R	src/misc/lv_color.h	196;"	d
LV_COLOR_GET_R1	src/misc/lv_color.h	127;"	d
LV_COLOR_GET_R16	src/misc/lv_color.h	157;"	d
LV_COLOR_GET_R32	src/misc/lv_color.h	179;"	d
LV_COLOR_GET_R8	src/misc/lv_color.h	140;"	d
LV_COLOR_H	src/misc/lv_color.h	7;"	d
LV_COLOR_MAKE	src/misc/lv_color.h	202;"	d
LV_COLOR_MAKE1	src/misc/lv_color.h	133;"	d
LV_COLOR_MAKE16	src/misc/lv_color.h	168;"	d
LV_COLOR_MAKE16	src/misc/lv_color.h	171;"	d
LV_COLOR_MAKE32	src/misc/lv_color.h	185;"	d
LV_COLOR_MAKE8	src/misc/lv_color.h	146;"	d
LV_COLOR_MIX_ROUND_OFS	src/misc/lv_color.h	84;"	d
LV_COLOR_MIX_ROUND_OFS	src/misc/lv_color.h	86;"	d
LV_COLOR_SCREEN_TRANSP	src/lv_conf_internal.h	81;"	d
LV_COLOR_SCREEN_TRANSP	src/lv_conf_internal.h	83;"	d
LV_COLOR_SET_A	src/misc/lv_color.h	194;"	d
LV_COLOR_SET_A1	src/misc/lv_color.h	125;"	d
LV_COLOR_SET_A16	src/misc/lv_color.h	155;"	d
LV_COLOR_SET_A32	src/misc/lv_color.h	177;"	d
LV_COLOR_SET_A8	src/misc/lv_color.h	138;"	d
LV_COLOR_SET_B	src/misc/lv_color.h	193;"	d
LV_COLOR_SET_B1	src/misc/lv_color.h	124;"	d
LV_COLOR_SET_B16	src/misc/lv_color.h	154;"	d
LV_COLOR_SET_B32	src/misc/lv_color.h	176;"	d
LV_COLOR_SET_B8	src/misc/lv_color.h	137;"	d
LV_COLOR_SET_G	src/misc/lv_color.h	192;"	d
LV_COLOR_SET_G1	src/misc/lv_color.h	123;"	d
LV_COLOR_SET_G16	src/misc/lv_color.h	150;"	d
LV_COLOR_SET_G16	src/misc/lv_color.h	152;"	d
LV_COLOR_SET_G32	src/misc/lv_color.h	175;"	d
LV_COLOR_SET_G8	src/misc/lv_color.h	136;"	d
LV_COLOR_SET_R	src/misc/lv_color.h	191;"	d
LV_COLOR_SET_R1	src/misc/lv_color.h	122;"	d
LV_COLOR_SET_R16	src/misc/lv_color.h	148;"	d
LV_COLOR_SET_R32	src/misc/lv_color.h	174;"	d
LV_COLOR_SET_R8	src/misc/lv_color.h	135;"	d
LV_COLOR_SIZE	src/misc/lv_color.h	62;"	d
LV_COLOR_SIZE	src/misc/lv_color.h	64;"	d
LV_COLOR_SIZE	src/misc/lv_color.h	66;"	d
LV_COLOR_SIZE	src/misc/lv_color.h	68;"	d
LV_CONCAT	src/misc/lv_types.h	78;"	d
LV_CONCAT3	src/misc/lv_types.h	81;"	d
LV_CONF_INCLUDE_SIMPLE	src/lv_conf_internal.h	25;"	d
LV_CONF_INTERNAL_H	src/lv_conf_internal.h	8;"	d
LV_CONF_KCONFIG_H	src/lv_conf_kconfig.h	4;"	d
LV_CONF_SKIP	src/lv_conf_internal.h	17;"	d
LV_COORD_GET_PCT	src/misc/lv_area.h	252;"	d
LV_COORD_IS_PCT	src/misc/lv_area.h	251;"	d
LV_COORD_IS_PX	src/misc/lv_area.h	244;"	d
LV_COORD_IS_SPEC	src/misc/lv_area.h	245;"	d
LV_COORD_MAX	src/misc/lv_area.h	/^LV_EXPORT_CONST_INT(LV_COORD_MAX);$/;"	v
LV_COORD_MAX	src/misc/lv_area.h	34;"	d
LV_COORD_MIN	src/misc/lv_area.h	/^LV_EXPORT_CONST_INT(LV_COORD_MIN);$/;"	v
LV_COORD_MIN	src/misc/lv_area.h	35;"	d
LV_COORD_SET_SPEC	src/misc/lv_area.h	247;"	d
LV_COVER_RES_COVER	src/core/lv_obj_draw.h	/^    LV_COVER_RES_COVER      = 0,$/;"	e	enum:__anon198
LV_COVER_RES_MASKED	src/core/lv_obj_draw.h	/^    LV_COVER_RES_MASKED     = 2,$/;"	e	enum:__anon198
LV_COVER_RES_NOT_COVER	src/core/lv_obj_draw.h	/^    LV_COVER_RES_NOT_COVER  = 1,$/;"	e	enum:__anon198
LV_CPICKER_DEF_QF	src/extra/widgets/colorwheel/lv_colorwheel.c	18;"	d	file:
LV_DEFINE_ROOT	src/misc/lv_gc.h	60;"	d
LV_DIR_ALL	src/misc/lv_area.h	/^    LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,$/;"	e	enum:__anon44
LV_DIR_BOTTOM	src/misc/lv_area.h	/^    LV_DIR_BOTTOM   = (1 << 3),$/;"	e	enum:__anon44
LV_DIR_HOR	src/misc/lv_area.h	/^    LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,$/;"	e	enum:__anon44
LV_DIR_LEFT	src/misc/lv_area.h	/^    LV_DIR_LEFT     = (1 << 0),$/;"	e	enum:__anon44
LV_DIR_NONE	src/misc/lv_area.h	/^    LV_DIR_NONE     = 0x00,$/;"	e	enum:__anon44
LV_DIR_RIGHT	src/misc/lv_area.h	/^    LV_DIR_RIGHT    = (1 << 1),$/;"	e	enum:__anon44
LV_DIR_TOP	src/misc/lv_area.h	/^    LV_DIR_TOP      = (1 << 2),$/;"	e	enum:__anon44
LV_DIR_VER	src/misc/lv_area.h	/^    LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,$/;"	e	enum:__anon44
LV_DISPATCH	src/misc/lv_gc.h	34;"	d
LV_DISPATCH00	src/misc/lv_gc.h	37;"	d
LV_DISPATCH01	src/misc/lv_gc.h	38;"	d
LV_DISPATCH10	src/misc/lv_gc.h	39;"	d
LV_DISPATCH11	src/misc/lv_gc.h	40;"	d
LV_DISPATCH_COND	src/misc/lv_gc.h	35;"	d
LV_DISP_DEF_REFR_PERIOD	src/lv_conf_internal.h	173;"	d
LV_DISP_DEF_REFR_PERIOD	src/lv_conf_internal.h	175;"	d
LV_DISP_H	src/core/lv_disp.h	7;"	d
LV_DISP_ROT_180	src/hal/lv_hal_disp.h	/^    LV_DISP_ROT_180,$/;"	e	enum:__anon96
LV_DISP_ROT_270	src/hal/lv_hal_disp.h	/^    LV_DISP_ROT_270$/;"	e	enum:__anon96
LV_DISP_ROT_90	src/hal/lv_hal_disp.h	/^    LV_DISP_ROT_90,$/;"	e	enum:__anon96
LV_DISP_ROT_MAX_BUF	src/lv_conf_internal.h	271;"	d
LV_DISP_ROT_MAX_BUF	src/lv_conf_internal.h	273;"	d
LV_DISP_ROT_NONE	src/hal/lv_hal_disp.h	/^    LV_DISP_ROT_NONE = 0,$/;"	e	enum:__anon96
LV_DMA2D_ARGB1555	src/gpu/lv_gpu_stm32_dma2d.h	27;"	d
LV_DMA2D_ARGB4444	src/gpu/lv_gpu_stm32_dma2d.h	28;"	d
LV_DMA2D_ARGB8888	src/gpu/lv_gpu_stm32_dma2d.h	24;"	d
LV_DMA2D_COLOR_FORMAT	src/gpu/lv_gpu_stm32_dma2d.c	31;"	d	file:
LV_DMA2D_COLOR_FORMAT	src/gpu/lv_gpu_stm32_dma2d.c	33;"	d	file:
LV_DMA2D_RGB565	src/gpu/lv_gpu_stm32_dma2d.h	26;"	d
LV_DMA2D_RGB888	src/gpu/lv_gpu_stm32_dma2d.h	25;"	d
LV_DPI_DEF	src/lv_conf_internal.h	/^LV_EXPORT_CONST_INT(LV_DPI_DEF);$/;"	v
LV_DPI_DEF	src/lv_conf_internal.h	218;"	d
LV_DPI_DEF	src/lv_conf_internal.h	220;"	d
LV_DPX	src/hal/lv_hal.h	30;"	d
LV_DRAW_ARC_H	src/draw/lv_draw_arc.h	7;"	d
LV_DRAW_BLEND_H	src/draw/lv_draw_blend.h	7;"	d
LV_DRAW_COMPLEX	src/lv_conf_internal.h	236;"	d
LV_DRAW_COMPLEX	src/lv_conf_internal.h	238;"	d
LV_DRAW_H	src/draw/lv_draw.h	7;"	d
LV_DRAW_IMG_H	src/draw/lv_draw_img.h	7;"	d
LV_DRAW_LABEL_H	src/draw/lv_draw_label.h	7;"	d
LV_DRAW_LABEL_NO_TXT_SEL	src/draw/lv_draw_label.h	24;"	d
LV_DRAW_LINE_H	src/draw/lv_draw_line.h	7;"	d
LV_DRAW_MASK_H	src/draw/lv_draw_mask.h	7;"	d
LV_DRAW_MASK_LINE_SIDE_BOTTOM	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_LINE_SIDE_BOTTOM,$/;"	e	enum:__anon75
LV_DRAW_MASK_LINE_SIDE_LEFT	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_LINE_SIDE_LEFT = 0,$/;"	e	enum:__anon75
LV_DRAW_MASK_LINE_SIDE_RIGHT	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_LINE_SIDE_RIGHT,$/;"	e	enum:__anon75
LV_DRAW_MASK_LINE_SIDE_TOP	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_LINE_SIDE_TOP,$/;"	e	enum:__anon75
LV_DRAW_MASK_RES_CHANGED	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_RES_CHANGED,$/;"	e	enum:__anon72
LV_DRAW_MASK_RES_FULL_COVER	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_RES_FULL_COVER,$/;"	e	enum:__anon72
LV_DRAW_MASK_RES_TRANSP	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_RES_TRANSP,$/;"	e	enum:__anon72
LV_DRAW_MASK_RES_UNKNOWN	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_RES_UNKNOWN$/;"	e	enum:__anon72
LV_DRAW_MASK_TYPE_ANGLE	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_TYPE_ANGLE,$/;"	e	enum:__anon74
LV_DRAW_MASK_TYPE_FADE	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_TYPE_FADE,$/;"	e	enum:__anon74
LV_DRAW_MASK_TYPE_LINE	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_TYPE_LINE,$/;"	e	enum:__anon74
LV_DRAW_MASK_TYPE_MAP	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_TYPE_MAP,$/;"	e	enum:__anon74
LV_DRAW_MASK_TYPE_RADIUS	src/draw/lv_draw_mask.h	/^    LV_DRAW_MASK_TYPE_RADIUS,$/;"	e	enum:__anon74
LV_DRAW_RECT_H	src/draw/lv_draw_rect.h	7;"	d
LV_DRAW_TRIANGLE_H	src/draw/lv_draw_triangle.h	7;"	d
LV_DROPDOWN_H	src/widgets/lv_dropdown.h	7;"	d
LV_DROPDOWN_POS_LAST	src/widgets/lv_dropdown.h	/^LV_EXPORT_CONST_INT(LV_DROPDOWN_POS_LAST);$/;"	v
LV_DROPDOWN_POS_LAST	src/widgets/lv_dropdown.h	31;"	d
LV_DROPDOWN_PR_NONE	src/widgets/lv_dropdown.c	30;"	d	file:
LV_ENABLE_GC	src/lv_conf_internal.h	573;"	d
LV_ENABLE_GC	src/lv_conf_internal.h	575;"	d
LV_EVENT_ALL	src/core/lv_event.h	/^    LV_EVENT_ALL = 0,$/;"	e	enum:__anon191
LV_EVENT_CANCEL	src/core/lv_event.h	/^    LV_EVENT_CANCEL,              \/**< A process has been cancelled *\/$/;"	e	enum:__anon191
LV_EVENT_CHILD_CHANGED	src/core/lv_event.h	/^    LV_EVENT_CHILD_CHANGED,       \/**< Child was removed\/added*\/$/;"	e	enum:__anon191
LV_EVENT_CLICKED	src/core/lv_event.h	/^    LV_EVENT_CLICKED,             \/**< Called on release if not scrolled (regardless to long press)*\/$/;"	e	enum:__anon191
LV_EVENT_COVER_CHECK	src/core/lv_event.h	/^    LV_EVENT_COVER_CHECK,        \/**< Check if the object fully covers an area. The event parameter is `lv_cover_check_info_t *`.*\/$/;"	e	enum:__anon191
LV_EVENT_DEFOCUSED	src/core/lv_event.h	/^    LV_EVENT_DEFOCUSED,           \/**< The object is defocused*\/$/;"	e	enum:__anon191
LV_EVENT_DELETE	src/core/lv_event.h	/^    LV_EVENT_DELETE,              \/**< Object is being deleted*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_MAIN	src/core/lv_event.h	/^    LV_EVENT_DRAW_MAIN,          \/**< Perform the main drawing*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_MAIN_BEGIN	src/core/lv_event.h	/^    LV_EVENT_DRAW_MAIN_BEGIN,    \/**< Starting the main drawing phase*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_MAIN_END	src/core/lv_event.h	/^    LV_EVENT_DRAW_MAIN_END,      \/**< Finishing the main drawing phase*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_PART_BEGIN	src/core/lv_event.h	/^    LV_EVENT_DRAW_PART_BEGIN,    \/**< Starting to draw a part. The event parameter is `lv_obj_draw_dsc_t *`. *\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_PART_END	src/core/lv_event.h	/^    LV_EVENT_DRAW_PART_END,      \/**< Finishing to draw a part. The event parameter is `lv_obj_draw_dsc_t *`. *\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_POST	src/core/lv_event.h	/^    LV_EVENT_DRAW_POST,          \/**< Perform the post draw phase (when all children are drawn)*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_POST_BEGIN	src/core/lv_event.h	/^    LV_EVENT_DRAW_POST_BEGIN,    \/**< Starting the post draw phase (when all children are drawn)*\/$/;"	e	enum:__anon191
LV_EVENT_DRAW_POST_END	src/core/lv_event.h	/^    LV_EVENT_DRAW_POST_END,      \/**< Finishing the post draw phase (when all children are drawn)*\/$/;"	e	enum:__anon191
LV_EVENT_FOCUSED	src/core/lv_event.h	/^    LV_EVENT_FOCUSED,             \/**< The object is focused*\/$/;"	e	enum:__anon191
LV_EVENT_GESTURE	src/core/lv_event.h	/^    LV_EVENT_GESTURE,             \/**< A gesture is detected. Get the gesture with `lv_indev_get_gesture_dir(lv_indev_get_act());` *\/$/;"	e	enum:__anon191
LV_EVENT_GET_SELF_SIZE	src/core/lv_event.h	/^    LV_EVENT_GET_SELF_SIZE,       \/**< Get the internal size of a widget*\/$/;"	e	enum:__anon191
LV_EVENT_H	src/core/lv_event.h	7;"	d
LV_EVENT_HIT_TEST	src/core/lv_event.h	/^    LV_EVENT_HIT_TEST,            \/**< Perform advanced hit-testing*\/$/;"	e	enum:__anon191
LV_EVENT_INSERT	src/core/lv_event.h	/^    LV_EVENT_INSERT,              \/**< A text is inserted to the object. The event data is `char *` being inserted.*\/$/;"	e	enum:__anon191
LV_EVENT_KEY	src/core/lv_event.h	/^    LV_EVENT_KEY,                 \/**< A key is sent to the object. Get the key with `lv_indev_get_key(lv_indev_get_act());`*\/$/;"	e	enum:__anon191
LV_EVENT_LAYOUT_CHANGED	src/core/lv_event.h	/^    LV_EVENT_LAYOUT_CHANGED,      \/**< The children position has changed due to a layout recalculation*\/$/;"	e	enum:__anon191
LV_EVENT_LEAVE	src/core/lv_event.h	/^    LV_EVENT_LEAVE,               \/**< The object is defocused but still selected*\/$/;"	e	enum:__anon191
LV_EVENT_LONG_PRESSED	src/core/lv_event.h	/^    LV_EVENT_LONG_PRESSED,        \/**< Object has been pressed for at least `long_press_time`.  Not called if scrolled.*\/$/;"	e	enum:__anon191
LV_EVENT_LONG_PRESSED_REPEAT	src/core/lv_event.h	/^    LV_EVENT_LONG_PRESSED_REPEAT, \/**< Called after `long_press_time` in every `long_press_repeat_time` ms.  Not called if scrolled.*\/$/;"	e	enum:__anon191
LV_EVENT_PRESSED	src/core/lv_event.h	/^    LV_EVENT_PRESSED,             \/**< The object has been pressed*\/$/;"	e	enum:__anon191
LV_EVENT_PRESSING	src/core/lv_event.h	/^    LV_EVENT_PRESSING,            \/**< The object is being pressed (called continuously while pressing)*\/$/;"	e	enum:__anon191
LV_EVENT_PRESS_LOST	src/core/lv_event.h	/^    LV_EVENT_PRESS_LOST,          \/**< The object is still being pressed but slid cursor\/finger off of the object *\/$/;"	e	enum:__anon191
LV_EVENT_READY	src/core/lv_event.h	/^    LV_EVENT_READY,               \/**< A process has finished*\/$/;"	e	enum:__anon191
LV_EVENT_REFRESH	src/core/lv_event.h	/^    LV_EVENT_REFRESH,             \/**< Notify the object to refresh something on it (for the user)*\/$/;"	e	enum:__anon191
LV_EVENT_REFR_EXT_DRAW_SIZE	src/core/lv_event.h	/^    LV_EVENT_REFR_EXT_DRAW_SIZE, \/**< Get the required extra draw area around the object (e.g. for shadow). The event parameter is `lv_coord_t *` to store the size.*\/$/;"	e	enum:__anon191
LV_EVENT_RELEASED	src/core/lv_event.h	/^    LV_EVENT_RELEASED,            \/**< Called in every cases when the object has been released*\/$/;"	e	enum:__anon191
LV_EVENT_SCROLL	src/core/lv_event.h	/^    LV_EVENT_SCROLL,              \/**< Scrolling*\/$/;"	e	enum:__anon191
LV_EVENT_SCROLL_BEGIN	src/core/lv_event.h	/^    LV_EVENT_SCROLL_BEGIN,        \/**< Scrolling begins*\/$/;"	e	enum:__anon191
LV_EVENT_SCROLL_END	src/core/lv_event.h	/^    LV_EVENT_SCROLL_END,          \/**< Scrolling ends*\/$/;"	e	enum:__anon191
LV_EVENT_SHORT_CLICKED	src/core/lv_event.h	/^    LV_EVENT_SHORT_CLICKED,       \/**< The object was pressed for a short period of time, then released it. Not called if scrolled.*\/$/;"	e	enum:__anon191
LV_EVENT_SIZE_CHANGED	src/core/lv_event.h	/^    LV_EVENT_SIZE_CHANGED,        \/**< Object coordinates\/size have changed*\/$/;"	e	enum:__anon191
LV_EVENT_STYLE_CHANGED	src/core/lv_event.h	/^    LV_EVENT_STYLE_CHANGED,       \/**< Object's style has changed*\/$/;"	e	enum:__anon191
LV_EVENT_VALUE_CHANGED	src/core/lv_event.h	/^    LV_EVENT_VALUE_CHANGED,       \/**< The object's value has changed (i.e. slider moved)*\/$/;"	e	enum:__anon191
LV_EXAMPLES_H	examples/lv_examples.h	7;"	d
LV_EXAMPLE_ANIM_H	examples/anim/lv_example_anim.h	7;"	d
LV_EXAMPLE_EVENT_H	examples/event/lv_example_event.h	7;"	d
LV_EXAMPLE_FLEX_H	examples/layouts/flex/lv_example_flex.h	7;"	d
LV_EXAMPLE_GRID_H	examples/layouts/grid/lv_example_grid.h	7;"	d
LV_EXAMPLE_LAYOUT_H	examples/layouts/lv_example_layout.h	7;"	d
LV_EXAMPLE_SCROLL_H	examples/scroll/lv_example_scroll.h	7;"	d
LV_EXAMPLE_STYLE_H	examples/styles/lv_example_style.h	7;"	d
LV_EXAMPLE_WIDGETS_H	examples/widgets/lv_example_widgets.h	7;"	d
LV_EXPORT_CONST_INT	src/lv_conf_internal.h	687;"	d
LV_EXPORT_CONST_INT	src/lv_conf_internal.h	689;"	d
LV_EXTERN_ROOT	src/misc/lv_gc.h	70;"	d
LV_EXTRA_H	src/extra/lv_extra.h	7;"	d
LV_EX_GET_STARTED_H	examples/get_started/lv_example_get_started.h	7;"	d
LV_FLEX_ALIGN_CENTER	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_CENTER,$/;"	e	enum:__anon143
LV_FLEX_ALIGN_END	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_END,$/;"	e	enum:__anon143
LV_FLEX_ALIGN_SPACE_AROUND	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_SPACE_AROUND,$/;"	e	enum:__anon143
LV_FLEX_ALIGN_SPACE_BETWEEN	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_SPACE_BETWEEN,$/;"	e	enum:__anon143
LV_FLEX_ALIGN_SPACE_EVENLY	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_SPACE_EVENLY,$/;"	e	enum:__anon143
LV_FLEX_ALIGN_START	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_ALIGN_START,$/;"	e	enum:__anon143
LV_FLEX_FLOW_COLUMN	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_COLUMN              = _LV_FLEX_COLUMN,$/;"	e	enum:__anon144
LV_FLEX_FLOW_COLUMN_REVERSE	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_COLUMN_REVERSE      = LV_FLEX_FLOW_COLUMN | _LV_FLEX_REVERSE,$/;"	e	enum:__anon144
LV_FLEX_FLOW_COLUMN_WRAP	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_COLUMN_WRAP         = LV_FLEX_FLOW_COLUMN | _LV_FLEX_WRAP,$/;"	e	enum:__anon144
LV_FLEX_FLOW_COLUMN_WRAP_REVERSE	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_COLUMN_WRAP_REVERSE = LV_FLEX_FLOW_COLUMN | _LV_FLEX_WRAP | _LV_FLEX_REVERSE,$/;"	e	enum:__anon144
LV_FLEX_FLOW_ROW	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_ROW                 = 0x00,$/;"	e	enum:__anon144
LV_FLEX_FLOW_ROW_REVERSE	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_ROW_REVERSE         = LV_FLEX_FLOW_ROW | _LV_FLEX_REVERSE,$/;"	e	enum:__anon144
LV_FLEX_FLOW_ROW_WRAP	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_ROW_WRAP            = LV_FLEX_FLOW_ROW | _LV_FLEX_WRAP,$/;"	e	enum:__anon144
LV_FLEX_FLOW_ROW_WRAP_REVERSE	src/extra/layouts/flex/lv_flex.h	/^    LV_FLEX_FLOW_ROW_WRAP_REVERSE    = LV_FLEX_FLOW_ROW | _LV_FLEX_WRAP | _LV_FLEX_REVERSE,$/;"	e	enum:__anon144
LV_FLEX_H	src/extra/layouts/flex/lv_flex.h	7;"	d
LV_FONT_CUSTOM_DECLARE	src/lv_conf_internal.h	907;"	d
LV_FONT_CUSTOM_DECLARE	src/lv_conf_internal.h	909;"	d
LV_FONT_DECLARE	src/font/lv_font.h	127;"	d
LV_FONT_DEFAULT	src/lv_conf_internal.h	916;"	d
LV_FONT_DEFAULT	src/lv_conf_internal.h	918;"	d
LV_FONT_DEJAVU_16_PERSIAN_HEBREW	src/font/lv_font_dejavu_16_persian_hebrew.c	14;"	d	file:
LV_FONT_DEJAVU_16_PERSIAN_HEBREW	src/lv_conf_internal.h	873;"	d
LV_FONT_DEJAVU_16_PERSIAN_HEBREW	src/lv_conf_internal.h	875;"	d
LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL,$/;"	e	enum:__anon47
LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY,$/;"	e	enum:__anon47
LV_FONT_FMT_TXT_CMAP_SPARSE_FULL	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_CMAP_SPARSE_FULL,$/;"	e	enum:__anon47
LV_FONT_FMT_TXT_CMAP_SPARSE_TINY	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_CMAP_SPARSE_TINY,$/;"	e	enum:__anon47
LV_FONT_FMT_TXT_COMPRESSED	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_COMPRESSED = 1,$/;"	e	enum:__anon51
LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER = 1,$/;"	e	enum:__anon51
LV_FONT_FMT_TXT_H	src/font/lv_font_fmt_txt.h	7;"	d
LV_FONT_FMT_TXT_LARGE	src/lv_conf_internal.h	927;"	d
LV_FONT_FMT_TXT_LARGE	src/lv_conf_internal.h	929;"	d
LV_FONT_FMT_TXT_PLAIN	src/font/lv_font_fmt_txt.h	/^    LV_FONT_FMT_TXT_PLAIN      = 0,$/;"	e	enum:__anon51
LV_FONT_H	src/font/lv_font.h	7;"	d
LV_FONT_LOADER_H	src/font/lv_font_loader.h	7;"	d
LV_FONT_MONTSERRAT_10	src/font/lv_font_montserrat_10.c	14;"	d	file:
LV_FONT_MONTSERRAT_10	src/lv_conf_internal.h	717;"	d
LV_FONT_MONTSERRAT_10	src/lv_conf_internal.h	719;"	d
LV_FONT_MONTSERRAT_12	src/font/lv_font_montserrat_12.c	14;"	d	file:
LV_FONT_MONTSERRAT_12	src/lv_conf_internal.h	724;"	d
LV_FONT_MONTSERRAT_12	src/lv_conf_internal.h	726;"	d
LV_FONT_MONTSERRAT_12_SUBPX	src/font/lv_font_montserrat_12_subpx.c	14;"	d	file:
LV_FONT_MONTSERRAT_12_SUBPX	src/lv_conf_internal.h	859;"	d
LV_FONT_MONTSERRAT_12_SUBPX	src/lv_conf_internal.h	861;"	d
LV_FONT_MONTSERRAT_14	src/font/lv_font_montserrat_14.c	14;"	d	file:
LV_FONT_MONTSERRAT_14	src/lv_conf_internal.h	731;"	d
LV_FONT_MONTSERRAT_14	src/lv_conf_internal.h	733;"	d
LV_FONT_MONTSERRAT_16	src/font/lv_font_montserrat_16.c	14;"	d	file:
LV_FONT_MONTSERRAT_16	src/lv_conf_internal.h	738;"	d
LV_FONT_MONTSERRAT_16	src/lv_conf_internal.h	740;"	d
LV_FONT_MONTSERRAT_18	src/font/lv_font_montserrat_18.c	14;"	d	file:
LV_FONT_MONTSERRAT_18	src/lv_conf_internal.h	745;"	d
LV_FONT_MONTSERRAT_18	src/lv_conf_internal.h	747;"	d
LV_FONT_MONTSERRAT_20	src/font/lv_font_montserrat_20.c	14;"	d	file:
LV_FONT_MONTSERRAT_20	src/lv_conf_internal.h	752;"	d
LV_FONT_MONTSERRAT_20	src/lv_conf_internal.h	754;"	d
LV_FONT_MONTSERRAT_22	src/font/lv_font_montserrat_22.c	14;"	d	file:
LV_FONT_MONTSERRAT_22	src/lv_conf_internal.h	759;"	d
LV_FONT_MONTSERRAT_22	src/lv_conf_internal.h	761;"	d
LV_FONT_MONTSERRAT_24	src/font/lv_font_montserrat_24.c	14;"	d	file:
LV_FONT_MONTSERRAT_24	src/lv_conf_internal.h	766;"	d
LV_FONT_MONTSERRAT_24	src/lv_conf_internal.h	768;"	d
LV_FONT_MONTSERRAT_26	src/font/lv_font_montserrat_26.c	14;"	d	file:
LV_FONT_MONTSERRAT_26	src/lv_conf_internal.h	773;"	d
LV_FONT_MONTSERRAT_26	src/lv_conf_internal.h	775;"	d
LV_FONT_MONTSERRAT_28	src/font/lv_font_montserrat_28.c	14;"	d	file:
LV_FONT_MONTSERRAT_28	src/lv_conf_internal.h	780;"	d
LV_FONT_MONTSERRAT_28	src/lv_conf_internal.h	782;"	d
LV_FONT_MONTSERRAT_28_COMPRESSED	src/font/lv_font_montserrat_28_compressed.c	14;"	d	file:
LV_FONT_MONTSERRAT_28_COMPRESSED	src/lv_conf_internal.h	866;"	d
LV_FONT_MONTSERRAT_28_COMPRESSED	src/lv_conf_internal.h	868;"	d
LV_FONT_MONTSERRAT_30	src/font/lv_font_montserrat_30.c	14;"	d	file:
LV_FONT_MONTSERRAT_30	src/lv_conf_internal.h	787;"	d
LV_FONT_MONTSERRAT_30	src/lv_conf_internal.h	789;"	d
LV_FONT_MONTSERRAT_32	src/font/lv_font_montserrat_32.c	14;"	d	file:
LV_FONT_MONTSERRAT_32	src/lv_conf_internal.h	794;"	d
LV_FONT_MONTSERRAT_32	src/lv_conf_internal.h	796;"	d
LV_FONT_MONTSERRAT_34	src/font/lv_font_montserrat_34.c	14;"	d	file:
LV_FONT_MONTSERRAT_34	src/lv_conf_internal.h	801;"	d
LV_FONT_MONTSERRAT_34	src/lv_conf_internal.h	803;"	d
LV_FONT_MONTSERRAT_36	src/font/lv_font_montserrat_36.c	14;"	d	file:
LV_FONT_MONTSERRAT_36	src/lv_conf_internal.h	808;"	d
LV_FONT_MONTSERRAT_36	src/lv_conf_internal.h	810;"	d
LV_FONT_MONTSERRAT_38	src/font/lv_font_montserrat_38.c	14;"	d	file:
LV_FONT_MONTSERRAT_38	src/lv_conf_internal.h	815;"	d
LV_FONT_MONTSERRAT_38	src/lv_conf_internal.h	817;"	d
LV_FONT_MONTSERRAT_40	src/font/lv_font_montserrat_40.c	14;"	d	file:
LV_FONT_MONTSERRAT_40	src/lv_conf_internal.h	822;"	d
LV_FONT_MONTSERRAT_40	src/lv_conf_internal.h	824;"	d
LV_FONT_MONTSERRAT_42	src/font/lv_font_montserrat_42.c	14;"	d	file:
LV_FONT_MONTSERRAT_42	src/lv_conf_internal.h	829;"	d
LV_FONT_MONTSERRAT_42	src/lv_conf_internal.h	831;"	d
LV_FONT_MONTSERRAT_44	src/font/lv_font_montserrat_44.c	14;"	d	file:
LV_FONT_MONTSERRAT_44	src/lv_conf_internal.h	836;"	d
LV_FONT_MONTSERRAT_44	src/lv_conf_internal.h	838;"	d
LV_FONT_MONTSERRAT_46	src/font/lv_font_montserrat_46.c	14;"	d	file:
LV_FONT_MONTSERRAT_46	src/lv_conf_internal.h	843;"	d
LV_FONT_MONTSERRAT_46	src/lv_conf_internal.h	845;"	d
LV_FONT_MONTSERRAT_48	src/font/lv_font_montserrat_48.c	14;"	d	file:
LV_FONT_MONTSERRAT_48	src/lv_conf_internal.h	850;"	d
LV_FONT_MONTSERRAT_48	src/lv_conf_internal.h	852;"	d
LV_FONT_MONTSERRAT_8	src/font/lv_font_montserrat_8.c	14;"	d	file:
LV_FONT_MONTSERRAT_8	src/lv_conf_internal.h	710;"	d
LV_FONT_MONTSERRAT_8	src/lv_conf_internal.h	712;"	d
LV_FONT_SIMSUN_16_CJK	src/font/lv_font_simsun_16_cjk.c	14;"	d	file:
LV_FONT_SIMSUN_16_CJK	src/lv_conf_internal.h	880;"	d
LV_FONT_SIMSUN_16_CJK	src/lv_conf_internal.h	882;"	d
LV_FONT_SUBPX_BGR	src/lv_conf_internal.h	954;"	d
LV_FONT_SUBPX_BGR	src/lv_conf_internal.h	956;"	d
LV_FONT_SUBPX_BOTH	src/font/lv_font.h	/^    LV_FONT_SUBPX_BOTH,$/;"	e	enum:__anon57
LV_FONT_SUBPX_HOR	src/font/lv_font.h	/^    LV_FONT_SUBPX_HOR,$/;"	e	enum:__anon57
LV_FONT_SUBPX_NONE	src/font/lv_font.h	/^    LV_FONT_SUBPX_NONE,$/;"	e	enum:__anon57
LV_FONT_SUBPX_VER	src/font/lv_font.h	/^    LV_FONT_SUBPX_VER,$/;"	e	enum:__anon57
LV_FONT_UNSCII_16	src/font/lv_font_unscii_16.c	14;"	d	file:
LV_FONT_UNSCII_16	src/lv_conf_internal.h	896;"	d
LV_FONT_UNSCII_16	src/lv_conf_internal.h	898;"	d
LV_FONT_UNSCII_8	src/font/lv_font_unscii_8.c	14;"	d	file:
LV_FONT_UNSCII_8	src/lv_conf_internal.h	889;"	d
LV_FONT_UNSCII_8	src/lv_conf_internal.h	891;"	d
LV_FS_H	src/misc/lv_fs.h	7;"	d
LV_FS_MAX_FN_LENGTH	src/misc/lv_fs.h	24;"	d
LV_FS_MAX_PATH_LENGTH	src/misc/lv_fs.h	25;"	d
LV_FS_MODE_RD	src/misc/lv_fs.h	/^    LV_FS_MODE_RD = 0x02,$/;"	e	enum:__anon6
LV_FS_MODE_WR	src/misc/lv_fs.h	/^    LV_FS_MODE_WR = 0x01,$/;"	e	enum:__anon6
LV_FS_RES_BUSY	src/misc/lv_fs.h	/^    LV_FS_RES_BUSY,       \/*The file system now can't handle it, try later*\/$/;"	e	enum:__anon5
LV_FS_RES_DENIED	src/misc/lv_fs.h	/^    LV_FS_RES_DENIED,     \/*Access denied. Check 'fs_open' modes and write protect*\/$/;"	e	enum:__anon5
LV_FS_RES_FS_ERR	src/misc/lv_fs.h	/^    LV_FS_RES_FS_ERR,     \/*Error in the file system structure*\/$/;"	e	enum:__anon5
LV_FS_RES_FULL	src/misc/lv_fs.h	/^    LV_FS_RES_FULL,       \/*Disk full*\/$/;"	e	enum:__anon5
LV_FS_RES_HW_ERR	src/misc/lv_fs.h	/^    LV_FS_RES_HW_ERR,     \/*Low level hardware error*\/$/;"	e	enum:__anon5
LV_FS_RES_INV_PARAM	src/misc/lv_fs.h	/^    LV_FS_RES_INV_PARAM,  \/*Invalid parameter among arguments*\/$/;"	e	enum:__anon5
LV_FS_RES_LOCKED	src/misc/lv_fs.h	/^    LV_FS_RES_LOCKED,     \/*The file is already opened*\/$/;"	e	enum:__anon5
LV_FS_RES_NOT_EX	src/misc/lv_fs.h	/^    LV_FS_RES_NOT_EX,     \/*Driver, file or directory is not exists*\/$/;"	e	enum:__anon5
LV_FS_RES_NOT_IMP	src/misc/lv_fs.h	/^    LV_FS_RES_NOT_IMP,    \/*Requested function is not implemented*\/$/;"	e	enum:__anon5
LV_FS_RES_OK	src/misc/lv_fs.h	/^    LV_FS_RES_OK = 0,$/;"	e	enum:__anon5
LV_FS_RES_OUT_OF_MEM	src/misc/lv_fs.h	/^    LV_FS_RES_OUT_OF_MEM, \/*Not enough memory for an internal operation*\/$/;"	e	enum:__anon5
LV_FS_RES_TOUT	src/misc/lv_fs.h	/^    LV_FS_RES_TOUT,       \/*Process time outed*\/$/;"	e	enum:__anon5
LV_FS_RES_UNKNOWN	src/misc/lv_fs.h	/^    LV_FS_RES_UNKNOWN,    \/*Other unknown error*\/$/;"	e	enum:__anon5
LV_FS_SEEK_CUR	src/misc/lv_fs.h	/^    LV_FS_SEEK_CUR = 0x01,      \/**< Set the position from the current position*\/$/;"	e	enum:__anon7
LV_FS_SEEK_END	src/misc/lv_fs.h	/^    LV_FS_SEEK_END = 0x02,      \/**< Set the position from the end of the file*\/$/;"	e	enum:__anon7
LV_FS_SEEK_SET	src/misc/lv_fs.h	/^    LV_FS_SEEK_SET = 0x00,      \/**< Set the position from absolutely (from the start of file)*\/$/;"	e	enum:__anon7
LV_GC_H	src/misc/lv_gc.h	7;"	d
LV_GC_INCLUDE	src/lv_conf_internal.h	581;"	d
LV_GC_INCLUDE	src/lv_conf_internal.h	583;"	d
LV_GC_ROOT	src/misc/lv_gc.h	69;"	d
LV_GPU_DMA2D_CMSIS_INCLUDE	src/lv_conf_internal.h	293;"	d
LV_GPU_DMA2D_CMSIS_INCLUDE	src/lv_conf_internal.h	295;"	d
LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT	src/gpu/lv_gpu_nxp_pxp.h	61;"	d
LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT	src/gpu/lv_gpu_nxp_pxp.h	56;"	d
LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT	src/gpu/lv_gpu_nxp_pxp.h	71;"	d
LV_GPU_NXP_PXP_FILL_SIZE_LIMIT	src/gpu/lv_gpu_nxp_pxp.h	66;"	d
LV_GPU_NXP_PXP_ID	src/gpu/lv_gpu_nxp_pxp.h	49;"	d
LV_GPU_NXP_PXP_IRQ_ID	src/gpu/lv_gpu_nxp_pxp.h	52;"	d
LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT	src/gpu/lv_gpu_nxp_vglite.h	66;"	d
LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT	src/gpu/lv_gpu_nxp_vglite.h	61;"	d
LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT	src/gpu/lv_gpu_nxp_vglite.h	56;"	d
LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT	src/gpu/lv_gpu_nxp_vglite.h	51;"	d
LV_GPU_NXP_VG_LITE_LOG_ERRORS	src/gpu/lv_gpu_nxp_vglite.h	71;"	d
LV_GPU_NXP_VG_LITE_STRIDE_ALIGN_PX	src/gpu/lv_gpu_nxp_vglite.h	47;"	d
LV_GPU_STM32_DMA2D_H	src/gpu/lv_gpu_stm32_dma2d.h	7;"	d
LV_GRAD_DIR_HOR	src/misc/lv_style.h	/^    LV_GRAD_DIR_HOR,  \/**< Horizontal (left to right) gradient*\/$/;"	e	enum:__anon15
LV_GRAD_DIR_NONE	src/misc/lv_style.h	/^    LV_GRAD_DIR_NONE, \/**< No gradient (the `grad_color` property is ignored)*\/$/;"	e	enum:__anon15
LV_GRAD_DIR_VER	src/misc/lv_style.h	/^    LV_GRAD_DIR_VER,  \/**< Vertical (top to bottom) gradient*\/$/;"	e	enum:__anon15
LV_GRID_ALIGN_CENTER	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_CENTER,$/;"	e	enum:__anon147
LV_GRID_ALIGN_END	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_END,$/;"	e	enum:__anon147
LV_GRID_ALIGN_SPACE_AROUND	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_SPACE_AROUND,$/;"	e	enum:__anon147
LV_GRID_ALIGN_SPACE_BETWEEN	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_SPACE_BETWEEN,$/;"	e	enum:__anon147
LV_GRID_ALIGN_SPACE_EVENLY	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_SPACE_EVENLY,$/;"	e	enum:__anon147
LV_GRID_ALIGN_START	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_START,$/;"	e	enum:__anon147
LV_GRID_ALIGN_STRETCH	src/extra/layouts/grid/lv_grid.h	/^    LV_GRID_ALIGN_STRETCH,$/;"	e	enum:__anon147
LV_GRID_CONTENT	src/extra/layouts/grid/lv_grid.h	/^LV_EXPORT_CONST_INT(LV_GRID_CONTENT);$/;"	v
LV_GRID_CONTENT	src/extra/layouts/grid/lv_grid.h	29;"	d
LV_GRID_FR	src/extra/layouts/grid/lv_grid.h	27;"	d
LV_GRID_H	src/extra/layouts/grid/lv_grid.h	7;"	d
LV_GRID_TEMPLATE_LAST	src/extra/layouts/grid/lv_grid.h	/^LV_EXPORT_CONST_INT(LV_GRID_TEMPLATE_LAST);$/;"	v
LV_GRID_TEMPLATE_LAST	src/extra/layouts/grid/lv_grid.h	32;"	d
LV_GROUP_H	src/core/lv_group.h	7;"	d
LV_GROUP_REFOCUS_POLICY_NEXT	src/core/lv_group.h	/^    LV_GROUP_REFOCUS_POLICY_NEXT = 0,$/;"	e	enum:__anon190
LV_GROUP_REFOCUS_POLICY_PREV	src/core/lv_group.h	/^    LV_GROUP_REFOCUS_POLICY_PREV = 1$/;"	e	enum:__anon190
LV_HAL_DISP_H	src/hal/lv_hal_disp.h	9;"	d
LV_HAL_H	src/hal/lv_hal.h	7;"	d
LV_HAL_INDEV_H	src/hal/lv_hal_indev.h	9;"	d
LV_HAL_TICK_H	src/hal/lv_hal_tick.h	7;"	d
LV_HOR_RES	src/core/lv_disp.h	204;"	d
LV_IMGBTN_H	src/extra/widgets/imgbtn/lv_imgbtn.h	7;"	d
LV_IMGBTN_STATE_CHECKED_DISABLED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_CHECKED_DISABLED,$/;"	e	enum:__anon102
LV_IMGBTN_STATE_CHECKED_PRESSED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_CHECKED_PRESSED,$/;"	e	enum:__anon102
LV_IMGBTN_STATE_CHECKED_RELEASED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_CHECKED_RELEASED,$/;"	e	enum:__anon102
LV_IMGBTN_STATE_DISABLED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_DISABLED,$/;"	e	enum:__anon102
LV_IMGBTN_STATE_PRESSED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_PRESSED,$/;"	e	enum:__anon102
LV_IMGBTN_STATE_RELEASED	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    LV_IMGBTN_STATE_RELEASED,$/;"	e	enum:__anon102
LV_IMG_BUF_H	src/draw/lv_img_buf.h	7;"	d
LV_IMG_BUF_SIZE_ALPHA_1BIT	src/draw/lv_img_buf.h	37;"	d
LV_IMG_BUF_SIZE_ALPHA_2BIT	src/draw/lv_img_buf.h	38;"	d
LV_IMG_BUF_SIZE_ALPHA_4BIT	src/draw/lv_img_buf.h	39;"	d
LV_IMG_BUF_SIZE_ALPHA_8BIT	src/draw/lv_img_buf.h	40;"	d
LV_IMG_BUF_SIZE_INDEXED_1BIT	src/draw/lv_img_buf.h	43;"	d
LV_IMG_BUF_SIZE_INDEXED_2BIT	src/draw/lv_img_buf.h	44;"	d
LV_IMG_BUF_SIZE_INDEXED_4BIT	src/draw/lv_img_buf.h	45;"	d
LV_IMG_BUF_SIZE_INDEXED_8BIT	src/draw/lv_img_buf.h	46;"	d
LV_IMG_BUF_SIZE_TRUE_COLOR	src/draw/lv_img_buf.h	32;"	d
LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA	src/draw/lv_img_buf.h	34;"	d
LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED	src/draw/lv_img_buf.h	33;"	d
LV_IMG_CACHE_AGING	src/draw/lv_img_cache.c	20;"	d	file:
LV_IMG_CACHE_DEF	src/misc/lv_gc.h	29;"	d
LV_IMG_CACHE_DEF	src/misc/lv_gc.h	31;"	d
LV_IMG_CACHE_DEF_SIZE	src/lv_conf_internal.h	262;"	d
LV_IMG_CACHE_DEF_SIZE	src/lv_conf_internal.h	264;"	d
LV_IMG_CACHE_H	src/draw/lv_img_cache.h	7;"	d
LV_IMG_CACHE_LIFE_GAIN	src/draw/lv_img_cache.c	23;"	d	file:
LV_IMG_CACHE_LIFE_LIMIT	src/draw/lv_img_cache.c	27;"	d	file:
LV_IMG_CF_ALPHA_1BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_ALPHA_1BIT, \/**< Can have one color and it can be drawn or not*\/$/;"	e	enum:__anon62
LV_IMG_CF_ALPHA_2BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_ALPHA_2BIT, \/**< Can have one color but 4 different alpha value*\/$/;"	e	enum:__anon62
LV_IMG_CF_ALPHA_4BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_ALPHA_4BIT, \/**< Can have one color but 16 different alpha value*\/$/;"	e	enum:__anon62
LV_IMG_CF_ALPHA_8BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_ALPHA_8BIT, \/**< Can have one color but 256 different alpha value*\/$/;"	e	enum:__anon62
LV_IMG_CF_INDEXED_1BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_INDEXED_1BIT, \/**< Can have 2 different colors in a palette (always chroma keyed)*\/$/;"	e	enum:__anon62
LV_IMG_CF_INDEXED_2BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_INDEXED_2BIT, \/**< Can have 4 different colors in a palette (always chroma keyed)*\/$/;"	e	enum:__anon62
LV_IMG_CF_INDEXED_4BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_INDEXED_4BIT, \/**< Can have 16 different colors in a palette (always chroma keyed)*\/$/;"	e	enum:__anon62
LV_IMG_CF_INDEXED_8BIT	src/draw/lv_img_buf.h	/^    LV_IMG_CF_INDEXED_8BIT, \/**< Can have 256 different colors in a palette (always chroma keyed)*\/$/;"	e	enum:__anon62
LV_IMG_CF_RAW	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RAW,              \/**< Contains the file as it is. Needs custom decoder function*\/$/;"	e	enum:__anon62
LV_IMG_CF_RAW_ALPHA	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RAW_ALPHA,        \/**< Contains the file as it is. The image has alpha. Needs custom decoder$/;"	e	enum:__anon62
LV_IMG_CF_RAW_CHROMA_KEYED	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RAW_CHROMA_KEYED, \/**< Contains the file as it is. The image is chroma keyed. Needs$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_15	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_15,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_16	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_16,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_17	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_17,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_18	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_18,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_19	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_19,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_20	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_20,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_21	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_21,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_22	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_22,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_RESERVED_23	src/draw/lv_img_buf.h	/^    LV_IMG_CF_RESERVED_23,              \/**< Reserved for further use.*\/$/;"	e	enum:__anon62
LV_IMG_CF_TRUE_COLOR	src/draw/lv_img_buf.h	/^    LV_IMG_CF_TRUE_COLOR,              \/**< Color format and depth should match with LV_COLOR settings*\/$/;"	e	enum:__anon62
LV_IMG_CF_TRUE_COLOR_ALPHA	src/draw/lv_img_buf.h	/^    LV_IMG_CF_TRUE_COLOR_ALPHA,        \/**< Same as `LV_IMG_CF_TRUE_COLOR` but every pixel has an alpha byte*\/$/;"	e	enum:__anon62
LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED	src/draw/lv_img_buf.h	/^    LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED, \/**< Same as `LV_IMG_CF_TRUE_COLOR` but LV_COLOR_TRANSP pixels$/;"	e	enum:__anon62
LV_IMG_CF_UNKNOWN	src/draw/lv_img_buf.h	/^    LV_IMG_CF_UNKNOWN = 0,$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_0	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_0,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_1	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_1,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_2	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_2,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_3	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_3,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_4	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_4,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_5	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_5,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_6	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_6,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_CF_USER_ENCODED_7	src/draw/lv_img_buf.h	/^    LV_IMG_CF_USER_ENCODED_7,          \/**< User holder encoding format.*\/$/;"	e	enum:__anon62
LV_IMG_DECLARE	src/widgets/lv_img.h	184;"	d
LV_IMG_DECODER_H	src/draw/lv_img_decoder.h	7;"	d
LV_IMG_H	src/widgets/lv_img.h	7;"	d
LV_IMG_PX_SIZE_ALPHA_BYTE	src/draw/lv_img_buf.h	25;"	d
LV_IMG_PX_SIZE_ALPHA_BYTE	src/draw/lv_img_buf.h	27;"	d
LV_IMG_PX_SIZE_ALPHA_BYTE	src/draw/lv_img_buf.h	29;"	d
LV_IMG_SRC_FILE	src/draw/lv_img_decoder.h	/^    LV_IMG_SRC_FILE, \/** File in filesystem*\/$/;"	e	enum:__anon59
LV_IMG_SRC_SYMBOL	src/draw/lv_img_decoder.h	/^    LV_IMG_SRC_SYMBOL, \/** Symbol (@ref lv_symbol_def.h)*\/$/;"	e	enum:__anon59
LV_IMG_SRC_UNKNOWN	src/draw/lv_img_decoder.h	/^    LV_IMG_SRC_UNKNOWN, \/** Unknown source*\/$/;"	e	enum:__anon59
LV_IMG_SRC_VARIABLE	src/draw/lv_img_decoder.h	/^    LV_IMG_SRC_VARIABLE, \/** Binary\/C variable*\/$/;"	e	enum:__anon59
LV_IMG_ZOOM_NONE	src/misc/lv_style.h	/^LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);$/;"	v
LV_IMG_ZOOM_NONE	src/misc/lv_style.h	44;"	d
LV_INDEV_DEF_GESTURE_LIMIT	src/hal/lv_hal_indev.h	45;"	d
LV_INDEV_DEF_GESTURE_MIN_VELOCITY	src/hal/lv_hal_indev.h	48;"	d
LV_INDEV_DEF_LONG_PRESS_REP_TIME	src/hal/lv_hal_indev.h	41;"	d
LV_INDEV_DEF_LONG_PRESS_TIME	src/hal/lv_hal_indev.h	37;"	d
LV_INDEV_DEF_READ_PERIOD	src/lv_conf_internal.h	182;"	d
LV_INDEV_DEF_READ_PERIOD	src/lv_conf_internal.h	184;"	d
LV_INDEV_DEF_SCROLL_LIMIT	src/hal/lv_hal_indev.h	30;"	d
LV_INDEV_DEF_SCROLL_THROW	src/hal/lv_hal_indev.h	33;"	d
LV_INDEV_H	src/core/lv_indev.h	7;"	d
LV_INDEV_SCROLL_H	src/core/lv_indev_scroll.h	7;"	d
LV_INDEV_STATE_PR	src/lv_api_map.h	24;"	d
LV_INDEV_STATE_PRESSED	src/hal/lv_hal_indev.h	/^    LV_INDEV_STATE_PRESSED$/;"	e	enum:__anon91
LV_INDEV_STATE_REL	src/lv_api_map.h	23;"	d
LV_INDEV_STATE_RELEASED	src/hal/lv_hal_indev.h	/^    LV_INDEV_STATE_RELEASED = 0,$/;"	e	enum:__anon91
LV_INDEV_TYPE_BUTTON	src/hal/lv_hal_indev.h	/^    LV_INDEV_TYPE_BUTTON,  \/**< External (hardware button) which is assigned to a specific point of the screen*\/$/;"	e	enum:__anon90
LV_INDEV_TYPE_ENCODER	src/hal/lv_hal_indev.h	/^    LV_INDEV_TYPE_ENCODER, \/**< Encoder with only Left, Right turn and a Button*\/$/;"	e	enum:__anon90
LV_INDEV_TYPE_KEYPAD	src/hal/lv_hal_indev.h	/^    LV_INDEV_TYPE_KEYPAD,  \/**< Keypad or keyboard*\/$/;"	e	enum:__anon90
LV_INDEV_TYPE_NONE	src/hal/lv_hal_indev.h	/^    LV_INDEV_TYPE_NONE,    \/**< Uninitialized state*\/$/;"	e	enum:__anon90
LV_INDEV_TYPE_POINTER	src/hal/lv_hal_indev.h	/^    LV_INDEV_TYPE_POINTER, \/**< Touch pad, mouse, external button*\/$/;"	e	enum:__anon90
LV_INV_BUF_SIZE	src/hal/lv_hal_disp.h	30;"	d
LV_IS_SIGNED	src/misc/lv_math.h	133;"	d
LV_ITERATE_ROOTS	src/misc/lv_gc.h	42;"	d
LV_KEYBOARD_CTRL_BTN_FLAGS	src/extra/widgets/keyboard/lv_keyboard.h	32;"	d
LV_KEYBOARD_H	src/extra/widgets/keyboard/lv_keyboard.h	7;"	d
LV_KEYBOARD_MODE_NUMBER	src/extra/widgets/keyboard/lv_keyboard.h	/^    LV_KEYBOARD_MODE_NUMBER,$/;"	e	enum:__anon137
LV_KEYBOARD_MODE_SPECIAL	src/extra/widgets/keyboard/lv_keyboard.h	/^    LV_KEYBOARD_MODE_SPECIAL,$/;"	e	enum:__anon137
LV_KEYBOARD_MODE_TEXT_LOWER	src/extra/widgets/keyboard/lv_keyboard.h	/^    LV_KEYBOARD_MODE_TEXT_LOWER,$/;"	e	enum:__anon137
LV_KEYBOARD_MODE_TEXT_UPPER	src/extra/widgets/keyboard/lv_keyboard.h	/^    LV_KEYBOARD_MODE_TEXT_UPPER,$/;"	e	enum:__anon137
LV_KEY_BACKSPACE	src/core/lv_group.h	/^    LV_KEY_BACKSPACE = 8,   \/*0x08*\/$/;"	e	enum:__anon189
LV_KEY_DEL	src/core/lv_group.h	/^    LV_KEY_DEL       = 127, \/*0x7F*\/$/;"	e	enum:__anon189
LV_KEY_DOWN	src/core/lv_group.h	/^    LV_KEY_DOWN      = 18,  \/*0x12*\/$/;"	e	enum:__anon189
LV_KEY_END	src/core/lv_group.h	/^    LV_KEY_END       = 3,   \/*0x03, ETX*\/$/;"	e	enum:__anon189
LV_KEY_ENTER	src/core/lv_group.h	/^    LV_KEY_ENTER     = 10,  \/*0x0A, '\\n'*\/$/;"	e	enum:__anon189
LV_KEY_ESC	src/core/lv_group.h	/^    LV_KEY_ESC       = 27,  \/*0x1B*\/$/;"	e	enum:__anon189
LV_KEY_HOME	src/core/lv_group.h	/^    LV_KEY_HOME      = 2,   \/*0x02, STX*\/$/;"	e	enum:__anon189
LV_KEY_LEFT	src/core/lv_group.h	/^    LV_KEY_LEFT      = 20,  \/*0x14*\/$/;"	e	enum:__anon189
LV_KEY_NEXT	src/core/lv_group.h	/^    LV_KEY_NEXT      = 9,   \/*0x09, '\\t'*\/$/;"	e	enum:__anon189
LV_KEY_PREV	src/core/lv_group.h	/^    LV_KEY_PREV      = 11,  \/*0x0B, '*\/$/;"	e	enum:__anon189
LV_KEY_RIGHT	src/core/lv_group.h	/^    LV_KEY_RIGHT     = 19,  \/*0x13*\/$/;"	e	enum:__anon189
LV_KEY_UP	src/core/lv_group.h	/^    LV_KEY_UP        = 17,  \/*0x11*\/$/;"	e	enum:__anon189
LV_LABEL_DEF_SCROLL_SPEED	src/widgets/lv_label.c	26;"	d	file:
LV_LABEL_DOT_END_INV	src/widgets/lv_label.c	28;"	d	file:
LV_LABEL_DOT_NUM	src/widgets/lv_label.h	/^LV_EXPORT_CONST_INT(LV_LABEL_DOT_NUM);$/;"	v
LV_LABEL_DOT_NUM	src/widgets/lv_label.h	31;"	d
LV_LABEL_H	src/widgets/lv_label.h	7;"	d
LV_LABEL_HINT_HEIGHT_LIMIT	src/widgets/lv_label.c	29;"	d	file:
LV_LABEL_HINT_UPDATE_TH	src/draw/lv_draw_label.c	20;"	d	file:
LV_LABEL_LONG_CLIP	src/widgets/lv_label.h	/^    LV_LABEL_LONG_CLIP,             \/**< Keep the size and clip the text out of it*\/$/;"	e	enum:__anon167
LV_LABEL_LONG_DOT	src/widgets/lv_label.h	/^    LV_LABEL_LONG_DOT,              \/**< Keep the size and write dots at the end if the text is too long*\/$/;"	e	enum:__anon167
LV_LABEL_LONG_SCROLL	src/widgets/lv_label.h	/^    LV_LABEL_LONG_SCROLL,           \/**< Keep the size and roll the text back and forth*\/$/;"	e	enum:__anon167
LV_LABEL_LONG_SCROLL_CIRCULAR	src/widgets/lv_label.h	/^    LV_LABEL_LONG_SCROLL_CIRCULAR,  \/**< Keep the size and roll the text circularly*\/$/;"	e	enum:__anon167
LV_LABEL_LONG_TXT_HINT	src/lv_conf_internal.h	1157;"	d
LV_LABEL_LONG_TXT_HINT	src/lv_conf_internal.h	1159;"	d
LV_LABEL_LONG_WRAP	src/widgets/lv_label.h	/^    LV_LABEL_LONG_WRAP,             \/**< Keep the object width, wrap the too long lines and expand the object height*\/$/;"	e	enum:__anon167
LV_LABEL_POS_LAST	src/widgets/lv_label.h	/^LV_EXPORT_CONST_INT(LV_LABEL_POS_LAST);$/;"	v
LV_LABEL_POS_LAST	src/widgets/lv_label.h	32;"	d
LV_LABEL_SCROLL_DELAY	src/widgets/lv_label.c	27;"	d	file:
LV_LABEL_TEXT_SELECTION	src/lv_conf_internal.h	1150;"	d
LV_LABEL_TEXT_SELECTION	src/lv_conf_internal.h	1152;"	d
LV_LABEL_TEXT_SELECTION_OFF	src/widgets/lv_label.h	/^LV_EXPORT_CONST_INT(LV_LABEL_TEXT_SELECTION_OFF);$/;"	v
LV_LABEL_TEXT_SELECTION_OFF	src/widgets/lv_label.h	33;"	d
LV_LABEL_WAIT_CHAR_COUNT	src/widgets/lv_label.h	30;"	d
LV_LAYOUTS_H	src/extra/layouts/lv_layouts.h	7;"	d
LV_LAYOUT_FLEX	src/extra/layouts/flex/lv_flex.c	/^uint32_t LV_LAYOUT_FLEX;$/;"	v
LV_LAYOUT_GRID	src/extra/layouts/grid/lv_grid.c	/^uint32_t LV_LAYOUT_GRID;$/;"	v
LV_LED_BRIGHT_MAX	src/extra/widgets/led/lv_led.c	22;"	d	file:
LV_LED_BRIGHT_MIN	src/extra/widgets/led/lv_led.c	18;"	d	file:
LV_LED_H	src/extra/widgets/led/lv_led.h	7;"	d
LV_LINE_H	src/widgets/lv_line.h	7;"	d
LV_LIST_H	src/extra/widgets/list/lv_list.h	7;"	d
LV_LL_H	src/misc/lv_ll.h	7;"	d
LV_LOG_ERROR	src/misc/lv_log.h	105;"	d
LV_LOG_ERROR	src/misc/lv_log.h	107;"	d
LV_LOG_ERROR	src/misc/lv_log.h	123;"	d
LV_LOG_H	src/misc/lv_log.h	7;"	d
LV_LOG_INFO	src/misc/lv_log.h	121;"	d
LV_LOG_INFO	src/misc/lv_log.h	93;"	d
LV_LOG_INFO	src/misc/lv_log.h	95;"	d
LV_LOG_LEVEL	src/lv_conf_internal.h	355;"	d
LV_LOG_LEVEL	src/lv_conf_internal.h	357;"	d
LV_LOG_LEVEL_ERROR	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_ERROR);$/;"	v
LV_LOG_LEVEL_ERROR	src/misc/lv_log.h	28;"	d
LV_LOG_LEVEL_INFO	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_INFO);$/;"	v
LV_LOG_LEVEL_INFO	src/misc/lv_log.h	26;"	d
LV_LOG_LEVEL_NONE	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_NONE);$/;"	v
LV_LOG_LEVEL_NONE	src/misc/lv_log.h	30;"	d
LV_LOG_LEVEL_TRACE	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_TRACE);$/;"	v
LV_LOG_LEVEL_TRACE	src/misc/lv_log.h	25;"	d
LV_LOG_LEVEL_USER	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_USER);$/;"	v
LV_LOG_LEVEL_USER	src/misc/lv_log.h	29;"	d
LV_LOG_LEVEL_WARN	src/misc/lv_log.h	/^LV_EXPORT_CONST_INT(LV_LOG_LEVEL_WARN);$/;"	v
LV_LOG_LEVEL_WARN	src/misc/lv_log.h	27;"	d
LV_LOG_PRINTF	src/lv_conf_internal.h	365;"	d
LV_LOG_PRINTF	src/lv_conf_internal.h	367;"	d
LV_LOG_TRACE	src/misc/lv_log.h	120;"	d
LV_LOG_TRACE	src/misc/lv_log.h	87;"	d
LV_LOG_TRACE	src/misc/lv_log.h	89;"	d
LV_LOG_TRACE_ANIM	src/lv_conf_internal.h	423;"	d
LV_LOG_TRACE_ANIM	src/lv_conf_internal.h	425;"	d
LV_LOG_TRACE_DISP_REFR	src/lv_conf_internal.h	395;"	d
LV_LOG_TRACE_DISP_REFR	src/lv_conf_internal.h	397;"	d
LV_LOG_TRACE_EVENT	src/lv_conf_internal.h	402;"	d
LV_LOG_TRACE_EVENT	src/lv_conf_internal.h	404;"	d
LV_LOG_TRACE_INDEV	src/lv_conf_internal.h	388;"	d
LV_LOG_TRACE_INDEV	src/lv_conf_internal.h	390;"	d
LV_LOG_TRACE_LAYOUT	src/lv_conf_internal.h	416;"	d
LV_LOG_TRACE_LAYOUT	src/lv_conf_internal.h	418;"	d
LV_LOG_TRACE_MEM	src/lv_conf_internal.h	374;"	d
LV_LOG_TRACE_MEM	src/lv_conf_internal.h	376;"	d
LV_LOG_TRACE_OBJ_CREATE	src/lv_conf_internal.h	409;"	d
LV_LOG_TRACE_OBJ_CREATE	src/lv_conf_internal.h	411;"	d
LV_LOG_TRACE_TIMER	src/lv_conf_internal.h	381;"	d
LV_LOG_TRACE_TIMER	src/lv_conf_internal.h	383;"	d
LV_LOG_USER	src/misc/lv_log.h	111;"	d
LV_LOG_USER	src/misc/lv_log.h	113;"	d
LV_LOG_USER	src/misc/lv_log.h	124;"	d
LV_LOG_WARN	src/misc/lv_log.h	101;"	d
LV_LOG_WARN	src/misc/lv_log.h	122;"	d
LV_LOG_WARN	src/misc/lv_log.h	99;"	d
LV_MASK_ID_INV	src/draw/lv_draw_mask.h	25;"	d
LV_MATH_H	src/misc/lv_math.h	7;"	d
LV_MAX	src/misc/lv_math.h	125;"	d
LV_MAX3	src/misc/lv_math.h	126;"	d
LV_MAX4	src/misc/lv_math.h	127;"	d
LV_MAX_OF	src/misc/lv_math.h	136;"	d
LV_MEMCPY_MEMSET_STD	src/lv_conf_internal.h	160;"	d
LV_MEMCPY_MEMSET_STD	src/lv_conf_internal.h	162;"	d
LV_MEM_ADD_JUNK	src/misc/lv_mem.c	26;"	d	file:
LV_MEM_ADR	src/lv_conf_internal.h	121;"	d
LV_MEM_ADR	src/lv_conf_internal.h	123;"	d
LV_MEM_BUF_MAX_NUM	src/misc/lv_mem.h	32;"	d
LV_MEM_CUSTOM	src/lv_conf_internal.h	103;"	d
LV_MEM_CUSTOM	src/lv_conf_internal.h	105;"	d
LV_MEM_CUSTOM_ALLOC	src/lv_conf_internal.h	136;"	d
LV_MEM_CUSTOM_ALLOC	src/lv_conf_internal.h	138;"	d
LV_MEM_CUSTOM_FREE	src/lv_conf_internal.h	143;"	d
LV_MEM_CUSTOM_FREE	src/lv_conf_internal.h	145;"	d
LV_MEM_CUSTOM_INCLUDE	src/lv_conf_internal.h	129;"	d
LV_MEM_CUSTOM_INCLUDE	src/lv_conf_internal.h	131;"	d
LV_MEM_CUSTOM_REALLOC	src/lv_conf_internal.h	150;"	d
LV_MEM_CUSTOM_REALLOC	src/lv_conf_internal.h	152;"	d
LV_MEM_H	src/misc/lv_mem.h	7;"	d
LV_MEM_SIZE	src/lv_conf_internal.h	112;"	d
LV_MEM_SIZE	src/lv_conf_internal.h	114;"	d
LV_METER_H	src/extra/widgets/meter/lv_meter.h	7;"	d
LV_METER_INDICATOR_TYPE_ARC	src/extra/widgets/meter/lv_meter.h	/^    LV_METER_INDICATOR_TYPE_ARC,$/;"	e	enum:__anon124
LV_METER_INDICATOR_TYPE_NEEDLE_IMG	src/extra/widgets/meter/lv_meter.h	/^    LV_METER_INDICATOR_TYPE_NEEDLE_IMG,$/;"	e	enum:__anon124
LV_METER_INDICATOR_TYPE_NEEDLE_LINE	src/extra/widgets/meter/lv_meter.h	/^    LV_METER_INDICATOR_TYPE_NEEDLE_LINE,$/;"	e	enum:__anon124
LV_METER_INDICATOR_TYPE_SCALE_LINES	src/extra/widgets/meter/lv_meter.h	/^    LV_METER_INDICATOR_TYPE_SCALE_LINES,$/;"	e	enum:__anon124
LV_MIN	src/misc/lv_math.h	121;"	d
LV_MIN3	src/misc/lv_math.h	122;"	d
LV_MIN4	src/misc/lv_math.h	123;"	d
LV_MSGBOX_FLAG_AUTO_PARENT	src/extra/widgets/msgbox/lv_msgbox.c	16;"	d	file:
LV_MSGBOX_H	src/extra/widgets/msgbox/lv_msgbox.h	7;"	d
LV_NO_TASK_READY	src/lv_api_map.h	22;"	d
LV_NO_TIMER_READY	src/misc/lv_timer.h	29;"	d
LV_OBJX_NAME	src/extra/widgets/animimg/lv_animimg.c	28;"	d	file:
LV_OBJ_CLASS_EDITABLE_FALSE	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_EDITABLE_FALSE,$/;"	e	enum:__anon181
LV_OBJ_CLASS_EDITABLE_INHERIT	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_EDITABLE_INHERIT,      \/**< Check the base class. Must have 0 value to let zero initialized class inherit*\/$/;"	e	enum:__anon181
LV_OBJ_CLASS_EDITABLE_TRUE	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_EDITABLE_TRUE,$/;"	e	enum:__anon181
LV_OBJ_CLASS_GROUP_DEF_FALSE	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_GROUP_DEF_FALSE,$/;"	e	enum:__anon182
LV_OBJ_CLASS_GROUP_DEF_INHERIT	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_GROUP_DEF_INHERIT,      \/**< Check the base class. Must have 0 value to let zero initialized class inherit*\/$/;"	e	enum:__anon182
LV_OBJ_CLASS_GROUP_DEF_TRUE	src/core/lv_obj_class.h	/^    LV_OBJ_CLASS_GROUP_DEF_TRUE,$/;"	e	enum:__anon182
LV_OBJ_CLASS_H	src/core/lv_obj_class.h	7;"	d
LV_OBJ_DEF_HEIGHT	src/core/lv_obj.c	38;"	d	file:
LV_OBJ_DEF_WIDTH	src/core/lv_obj.c	37;"	d	file:
LV_OBJ_DRAW_H	src/core/lv_obj_draw.h	7;"	d
LV_OBJ_FLAG_ADV_HITTEST	src/core/lv_obj.h	/^    LV_OBJ_FLAG_ADV_HITTEST     = (1 << 14), \/**< Allow performing more accurate hit (click) test. E.g. consider rounded corners.*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_CHECKABLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_CHECKABLE       = (1 << 3),  \/**< Toggle checked state when the object is clicked*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_CLICKABLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_CLICKABLE       = (1 << 1),  \/**< Make the object clickable by the input devices*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_CLICK_FOCUSABLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_CLICK_FOCUSABLE = (1 << 2),  \/**< Add focused state to the object when clicked*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_EVENT_BUBBLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_EVENT_BUBBLE    = (1 << 12), \/**< Propagate the events to the parent too*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_FLEX_IN_NEW_TRACK	src/extra/layouts/flex/lv_flex.h	/^LV_EXPORT_CONST_INT(LV_OBJ_FLAG_FLEX_IN_NEW_TRACK);$/;"	v
LV_OBJ_FLAG_FLEX_IN_NEW_TRACK	src/extra/layouts/flex/lv_flex.h	23;"	d
LV_OBJ_FLAG_FLOATING	src/core/lv_obj.h	/^    LV_OBJ_FLAG_FLOATING        = (1 << 16), \/**< Do not scroll the object when the parent scrolls and ignore layout*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_GESTURE_BUBBLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_GESTURE_BUBBLE  = (1 << 13), \/**< Propagate the gestures to the parent*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_HIDDEN	src/core/lv_obj.h	/^    LV_OBJ_FLAG_HIDDEN          = (1 << 0),  \/**< Make the object hidden. (Like it wasn't there at all)*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_IGNORE_LAYOUT	src/core/lv_obj.h	/^    LV_OBJ_FLAG_IGNORE_LAYOUT   = (1 << 15), \/**< Make the object position-able by the layouts*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_LAYOUT_1	src/core/lv_obj.h	/^    LV_OBJ_FLAG_LAYOUT_1        = (1 << 23), \/** Custom flag, free to use by layouts*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_LAYOUT_2	src/core/lv_obj.h	/^    LV_OBJ_FLAG_LAYOUT_2        = (1 << 24), \/** Custom flag, free to use by layouts*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_PRESS_LOCK	src/core/lv_obj.h	/^    LV_OBJ_FLAG_PRESS_LOCK      = (1 << 11), \/**< Keep the object pressed even if the press slid from the object*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLLABLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLLABLE      = (1 << 4),  \/**< Make the object scrollable*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLL_CHAIN	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLL_CHAIN    = (1 << 8),  \/**< Allow propagating the scroll to a parent*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLL_ELASTIC	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLL_ELASTIC  = (1 << 5),  \/**< Allow scrolling inside but with slower speed*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLL_MOMENTUM	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLL_MOMENTUM = (1 << 6),  \/**< Make the object scroll further when "thrown"*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLL_ONE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLL_ONE      = (1 << 7),   \/**< Allow scrolling only one snapable children*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SCROLL_ON_FOCUS	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SCROLL_ON_FOCUS = (1 << 9),  \/**< Automatically scroll object to make it visible when focused*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_SNAPABLE	src/core/lv_obj.h	/^    LV_OBJ_FLAG_SNAPABLE        = (1 << 10), \/**< If scroll snap is enabled on the parent it can snap to this object*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_USER_1	src/core/lv_obj.h	/^    LV_OBJ_FLAG_USER_1          = (1 << 27), \/** Custom flag, free to use by user*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_USER_2	src/core/lv_obj.h	/^    LV_OBJ_FLAG_USER_2          = (1 << 28), \/** Custom flag, free to use by user*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_USER_3	src/core/lv_obj.h	/^    LV_OBJ_FLAG_USER_3          = (1 << 29), \/** Custom flag, free to use by user*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_USER_4	src/core/lv_obj.h	/^    LV_OBJ_FLAG_USER_4          = (1 << 30), \/** Custom flag, free to use by user*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_WIDGET_1	src/core/lv_obj.h	/^    LV_OBJ_FLAG_WIDGET_1        = (1 << 25), \/** Custom flag, free to use by widget*\/$/;"	e	enum:__anon185
LV_OBJ_FLAG_WIDGET_2	src/core/lv_obj.h	/^    LV_OBJ_FLAG_WIDGET_2        = (1 << 26), \/** Custom flag, free to use by widget*\/$/;"	e	enum:__anon185
LV_OBJ_H	src/core/lv_obj.h	7;"	d
LV_OBJ_POS_H	src/core/lv_obj_pos.h	7;"	d
LV_OBJ_SCROLL_H	src/core/lv_obj_scroll.h	7;"	d
LV_OBJ_STYLE_H	src/core/lv_obj_style.h	7;"	d
LV_OBJ_TREE_H	src/core/lv_obj_tree.h	7;"	d
LV_OBJ_TREE_WALK_END	src/core/lv_obj_tree.h	/^    LV_OBJ_TREE_WALK_END,$/;"	e	enum:__anon194
LV_OBJ_TREE_WALK_NEXT	src/core/lv_obj_tree.h	/^    LV_OBJ_TREE_WALK_NEXT,$/;"	e	enum:__anon194
LV_OBJ_TREE_WALK_SKIP_CHILDREN	src/core/lv_obj_tree.h	/^    LV_OBJ_TREE_WALK_SKIP_CHILDREN,$/;"	e	enum:__anon194
LV_OPA_0	src/misc/lv_color.h	/^    LV_OPA_0      = 0,$/;"	e	enum:__anon30
LV_OPA_10	src/misc/lv_color.h	/^    LV_OPA_10     = 25,$/;"	e	enum:__anon30
LV_OPA_100	src/misc/lv_color.h	/^    LV_OPA_100    = 255,$/;"	e	enum:__anon30
LV_OPA_20	src/misc/lv_color.h	/^    LV_OPA_20     = 51,$/;"	e	enum:__anon30
LV_OPA_30	src/misc/lv_color.h	/^    LV_OPA_30     = 76,$/;"	e	enum:__anon30
LV_OPA_40	src/misc/lv_color.h	/^    LV_OPA_40     = 102,$/;"	e	enum:__anon30
LV_OPA_50	src/misc/lv_color.h	/^    LV_OPA_50     = 127,$/;"	e	enum:__anon30
LV_OPA_60	src/misc/lv_color.h	/^    LV_OPA_60     = 153,$/;"	e	enum:__anon30
LV_OPA_70	src/misc/lv_color.h	/^    LV_OPA_70     = 178,$/;"	e	enum:__anon30
LV_OPA_80	src/misc/lv_color.h	/^    LV_OPA_80     = 204,$/;"	e	enum:__anon30
LV_OPA_90	src/misc/lv_color.h	/^    LV_OPA_90     = 229,$/;"	e	enum:__anon30
LV_OPA_COVER	src/misc/lv_color.h	/^    LV_OPA_COVER  = 255,$/;"	e	enum:__anon30
LV_OPA_MAX	src/misc/lv_color.h	59;"	d
LV_OPA_MIN	src/misc/lv_color.h	58;"	d
LV_OPA_TRANSP	src/misc/lv_color.h	/^    LV_OPA_TRANSP = 0,$/;"	e	enum:__anon30
LV_PALETTE_AMBER	src/misc/lv_color.h	/^    LV_PALETTE_AMBER,$/;"	e	enum:__anon40
LV_PALETTE_BLUE	src/misc/lv_color.h	/^    LV_PALETTE_BLUE,$/;"	e	enum:__anon40
LV_PALETTE_BLUE_GREY	src/misc/lv_color.h	/^    LV_PALETTE_BLUE_GREY,$/;"	e	enum:__anon40
LV_PALETTE_BROWN	src/misc/lv_color.h	/^    LV_PALETTE_BROWN,$/;"	e	enum:__anon40
LV_PALETTE_CYAN	src/misc/lv_color.h	/^    LV_PALETTE_CYAN,$/;"	e	enum:__anon40
LV_PALETTE_DEEP_ORANGE	src/misc/lv_color.h	/^    LV_PALETTE_DEEP_ORANGE,$/;"	e	enum:__anon40
LV_PALETTE_DEEP_PURPLE	src/misc/lv_color.h	/^    LV_PALETTE_DEEP_PURPLE,$/;"	e	enum:__anon40
LV_PALETTE_GREEN	src/misc/lv_color.h	/^    LV_PALETTE_GREEN,$/;"	e	enum:__anon40
LV_PALETTE_GREY	src/misc/lv_color.h	/^    LV_PALETTE_GREY,$/;"	e	enum:__anon40
LV_PALETTE_INDIGO	src/misc/lv_color.h	/^    LV_PALETTE_INDIGO,$/;"	e	enum:__anon40
LV_PALETTE_LIGHT_BLUE	src/misc/lv_color.h	/^    LV_PALETTE_LIGHT_BLUE,$/;"	e	enum:__anon40
LV_PALETTE_LIGHT_GREEN	src/misc/lv_color.h	/^    LV_PALETTE_LIGHT_GREEN,$/;"	e	enum:__anon40
LV_PALETTE_LIME	src/misc/lv_color.h	/^    LV_PALETTE_LIME,$/;"	e	enum:__anon40
LV_PALETTE_NONE	src/misc/lv_color.h	/^    LV_PALETTE_NONE = 0xff,$/;"	e	enum:__anon40
LV_PALETTE_ORANGE	src/misc/lv_color.h	/^    LV_PALETTE_ORANGE,$/;"	e	enum:__anon40
LV_PALETTE_PINK	src/misc/lv_color.h	/^    LV_PALETTE_PINK,$/;"	e	enum:__anon40
LV_PALETTE_PURPLE	src/misc/lv_color.h	/^    LV_PALETTE_PURPLE,$/;"	e	enum:__anon40
LV_PALETTE_RED	src/misc/lv_color.h	/^    LV_PALETTE_RED,$/;"	e	enum:__anon40
LV_PALETTE_TEAL	src/misc/lv_color.h	/^    LV_PALETTE_TEAL,$/;"	e	enum:__anon40
LV_PALETTE_YELLOW	src/misc/lv_color.h	/^    LV_PALETTE_YELLOW,$/;"	e	enum:__anon40
LV_PART_ANY	src/core/lv_obj.h	/^    LV_PART_ANY          = 0x0F0000,    \/**< Special value can be used in some functions to target all parts*\/$/;"	e	enum:__anon184
LV_PART_CURSOR	src/core/lv_obj.h	/^    LV_PART_CURSOR       = 0x070000,   \/**< Mark a specific place e.g. for text area's cursor or on a chart*\/$/;"	e	enum:__anon184
LV_PART_CUSTOM_FIRST	src/core/lv_obj.h	/^    LV_PART_CUSTOM_FIRST = 0x080000,    \/**< Extension point for custom widgets*\/$/;"	e	enum:__anon184
LV_PART_INDICATOR	src/core/lv_obj.h	/^    LV_PART_INDICATOR    = 0x020000,   \/**< Indicator, e.g. for slider, bar, switch, or the tick box of the checkbox*\/$/;"	e	enum:__anon184
LV_PART_ITEMS	src/core/lv_obj.h	/^    LV_PART_ITEMS        = 0x050000,   \/**< Used if the widget has multiple similar elements (e.g. tabel cells)*\/$/;"	e	enum:__anon184
LV_PART_KNOB	src/core/lv_obj.h	/^    LV_PART_KNOB         = 0x030000,   \/**< Like handle to grab to adjust the value*\/$/;"	e	enum:__anon184
LV_PART_MAIN	src/core/lv_obj.h	/^    LV_PART_MAIN         = 0x000000,   \/**< A background like rectangle*\/$/;"	e	enum:__anon184
LV_PART_SCROLLBAR	src/core/lv_obj.h	/^    LV_PART_SCROLLBAR    = 0x010000,   \/**< The scrollbar(s)*\/$/;"	e	enum:__anon184
LV_PART_SELECTED	src/core/lv_obj.h	/^    LV_PART_SELECTED     = 0x040000,   \/**< Indicate the currently selected option or section*\/$/;"	e	enum:__anon184
LV_PART_TEXTAREA_PLACEHOLDER	src/widgets/lv_textarea.h	/^    LV_PART_TEXTAREA_PLACEHOLDER = LV_PART_CUSTOM_FIRST,$/;"	e	enum:__anon162
LV_PART_TICKS	src/core/lv_obj.h	/^    LV_PART_TICKS        = 0x060000,   \/**< Ticks on scale e.g. for a chart or meter*\/$/;"	e	enum:__anon184
LV_PCT	src/misc/lv_area.h	250;"	d
LV_RADIUS_CIRCLE	src/draw/lv_draw_rect.h	/^LV_EXPORT_CONST_INT(LV_RADIUS_CIRCLE);$/;"	v
LV_RADIUS_CIRCLE	src/draw/lv_draw_rect.h	22;"	d
LV_REFR_H	src/core/lv_refr.h	7;"	d
LV_REFR_TASK_PRIO	src/core/lv_refr.h	23;"	d
LV_RES_INV	src/misc/lv_types.h	/^    LV_RES_INV = 0, \/*Typically indicates that the object is deleted (become invalid) in the action$/;"	e	enum:__anon29
LV_RES_OK	src/misc/lv_types.h	/^    LV_RES_OK,      \/*The object is valid (no deleted) after the action*\/$/;"	e	enum:__anon29
LV_ROLLER_H	src/widgets/lv_roller.h	7;"	d
LV_ROLLER_INF_PAGES	src/lv_conf_internal.h	1182;"	d
LV_ROLLER_INF_PAGES	src/lv_conf_internal.h	1184;"	d
LV_ROLLER_MODE_INFINITE	src/widgets/lv_roller.h	/^    LV_ROLLER_MODE_INFINITE, \/**< Infinite mode (roller can be scrolled forever).*\/$/;"	e	enum:__anon153
LV_ROLLER_MODE_NORMAL	src/widgets/lv_roller.h	/^    LV_ROLLER_MODE_NORMAL, \/**< Normal mode (roller ends at the end of the options).*\/$/;"	e	enum:__anon153
LV_ROOTS	src/misc/lv_gc.h	61;"	d
LV_SCROLLBAR_MODE_ACTIVE	src/core/lv_obj_scroll.h	/^    LV_SCROLLBAR_MODE_ACTIVE,   \/**< Show scroll bars when object is being scrolled*\/$/;"	e	enum:__anon178
LV_SCROLLBAR_MODE_AUTO	src/core/lv_obj_scroll.h	/^    LV_SCROLLBAR_MODE_AUTO,     \/**< Show scroll bars when the content is large enough to be scrolled*\/$/;"	e	enum:__anon178
LV_SCROLLBAR_MODE_OFF	src/core/lv_obj_scroll.h	/^    LV_SCROLLBAR_MODE_OFF,      \/**< Never show scrollbars*\/$/;"	e	enum:__anon178
LV_SCROLLBAR_MODE_ON	src/core/lv_obj_scroll.h	/^    LV_SCROLLBAR_MODE_ON,       \/**< Always show scrollbars*\/$/;"	e	enum:__anon178
LV_SCROLL_SNAP_CENTER	src/core/lv_obj_scroll.h	/^    LV_SCROLL_SNAP_CENTER   \/**< Align to to the center*\/$/;"	e	enum:__anon179
LV_SCROLL_SNAP_END	src/core/lv_obj_scroll.h	/^    LV_SCROLL_SNAP_END,     \/**< Align to to the right\/bottom*\/$/;"	e	enum:__anon179
LV_SCROLL_SNAP_NONE	src/core/lv_obj_scroll.h	/^    LV_SCROLL_SNAP_NONE,    \/**< Do not align, leave where it is*\/$/;"	e	enum:__anon179
LV_SCROLL_SNAP_START	src/core/lv_obj_scroll.h	/^    LV_SCROLL_SNAP_START,   \/**< Align to to the left\/top*\/$/;"	e	enum:__anon179
LV_SCR_LOAD_ANIM_FADE_ON	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_FADE_ON,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_MOVE_BOTTOM	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_MOVE_BOTTOM,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_MOVE_LEFT	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_MOVE_LEFT,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_MOVE_RIGHT	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_MOVE_RIGHT,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_MOVE_TOP	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_MOVE_TOP,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_NONE	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_NONE,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_OVER_BOTTOM	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_OVER_BOTTOM,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_OVER_LEFT	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_OVER_LEFT,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_OVER_RIGHT	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_OVER_RIGHT,$/;"	e	enum:__anon180
LV_SCR_LOAD_ANIM_OVER_TOP	src/core/lv_disp.h	/^    LV_SCR_LOAD_ANIM_OVER_TOP,$/;"	e	enum:__anon180
LV_SHADOW_CACHE_SIZE	src/lv_conf_internal.h	248;"	d
LV_SHADOW_CACHE_SIZE	src/lv_conf_internal.h	250;"	d
LV_SIZE_CONTENT	src/misc/lv_area.h	/^LV_EXPORT_CONST_INT(LV_SIZE_CONTENT);$/;"	v
LV_SIZE_CONTENT	src/misc/lv_area.h	253;"	d
LV_SLIDER_H	src/widgets/lv_slider.h	7;"	d
LV_SLIDER_KNOB_COORD	src/widgets/lv_slider.c	25;"	d	file:
LV_SLIDER_MODE_NORMAL	src/widgets/lv_slider.h	/^    LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,$/;"	e	enum:__anon157
LV_SLIDER_MODE_RANGE	src/widgets/lv_slider.h	/^    LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE$/;"	e	enum:__anon157
LV_SLIDER_MODE_SYMMETRICAL	src/widgets/lv_slider.h	/^    LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,$/;"	e	enum:__anon157
LV_SMAX_OF	src/misc/lv_math.h	135;"	d
LV_SPAN_H	src/extra/widgets/span/lv_span.h	7;"	d
LV_SPAN_MODE_BREAK	src/extra/widgets/span/lv_span.h	/^    LV_SPAN_MODE_BREAK,     \/**< Keep width, break the too long lines and expand height*\/$/;"	e	enum:__anon133
LV_SPAN_MODE_EXPAND	src/extra/widgets/span/lv_span.h	/^    LV_SPAN_MODE_EXPAND,    \/**< Expand the object size to the text size*\/$/;"	e	enum:__anon133
LV_SPAN_MODE_FIXED	src/extra/widgets/span/lv_span.h	/^    LV_SPAN_MODE_FIXED,     \/**< fixed the obj size*\/$/;"	e	enum:__anon133
LV_SPAN_OVERFLOW_CLIP	src/extra/widgets/span/lv_span.h	/^    LV_SPAN_OVERFLOW_CLIP,$/;"	e	enum:__anon132
LV_SPAN_OVERFLOW_ELLIPSIS	src/extra/widgets/span/lv_span.h	/^    LV_SPAN_OVERFLOW_ELLIPSIS,$/;"	e	enum:__anon132
LV_SPAN_SNIPPET_STACK_SIZE	src/extra/widgets/span/lv_span.h	24;"	d
LV_SPAN_SNIPPET_STACK_SIZE	src/lv_conf_internal.h	1408;"	d
LV_SPAN_SNIPPET_STACK_SIZE	src/lv_conf_internal.h	1410;"	d
LV_SPINBOX_H	src/extra/widgets/spinbox/lv_spinbox.h	7;"	d
LV_SPINBOX_MAX_DIGIT_COUNT	src/extra/widgets/spinbox/lv_spinbox.h	28;"	d
LV_SPINNER_H	src/extra/widgets/spinner/lv_spinner.h	7;"	d
LV_SPRINTF_CUSTOM	src/lv_conf_internal.h	524;"	d
LV_SPRINTF_CUSTOM	src/lv_conf_internal.h	526;"	d
LV_SPRINTF_INCLUDE	src/lv_conf_internal.h	532;"	d
LV_SPRINTF_INCLUDE	src/lv_conf_internal.h	534;"	d
LV_SPRINTF_USE_FLOAT	src/lv_conf_internal.h	554;"	d
LV_SPRINTF_USE_FLOAT	src/lv_conf_internal.h	556;"	d
LV_SRC_LV_GPU_LV_GPU_NXP_PXP_H_	src/gpu/lv_gpu_nxp_pxp.h	31;"	d
LV_SRC_LV_GPU_LV_GPU_NXP_PXP_OSA_H_	src/gpu/lv_gpu_nxp_pxp_osa.h	31;"	d
LV_SRC_LV_GPU_LV_GPU_NXP_VGLITE_H_	src/gpu/lv_gpu_nxp_vglite.h	31;"	d
LV_STATE_ANY	src/core/lv_obj.h	/^    LV_STATE_ANY = 0xFFFF,    \/**< Special value can be used in some functions to target all states*\/$/;"	e	enum:__anon183
LV_STATE_CHECKED	src/core/lv_obj.h	/^    LV_STATE_CHECKED     =  0x0001,$/;"	e	enum:__anon183
LV_STATE_DEFAULT	src/core/lv_obj.h	/^    LV_STATE_DEFAULT     =  0x0000,$/;"	e	enum:__anon183
LV_STATE_DISABLED	src/core/lv_obj.h	/^    LV_STATE_DISABLED    =  0x0080,$/;"	e	enum:__anon183
LV_STATE_EDITED	src/core/lv_obj.h	/^    LV_STATE_EDITED      =  0x0008,$/;"	e	enum:__anon183
LV_STATE_FOCUSED	src/core/lv_obj.h	/^    LV_STATE_FOCUSED     =  0x0002,$/;"	e	enum:__anon183
LV_STATE_FOCUS_KEY	src/core/lv_obj.h	/^    LV_STATE_FOCUS_KEY   =  0x0004,$/;"	e	enum:__anon183
LV_STATE_HOVERED	src/core/lv_obj.h	/^    LV_STATE_HOVERED     =  0x0010,$/;"	e	enum:__anon183
LV_STATE_PRESSED	src/core/lv_obj.h	/^    LV_STATE_PRESSED     =  0x0020,$/;"	e	enum:__anon183
LV_STATE_SCROLLED	src/core/lv_obj.h	/^    LV_STATE_SCROLLED    =  0x0040,$/;"	e	enum:__anon183
LV_STATE_USER_1	src/core/lv_obj.h	/^    LV_STATE_USER_1      =  0x1000,$/;"	e	enum:__anon183
LV_STATE_USER_2	src/core/lv_obj.h	/^    LV_STATE_USER_2      =  0x2000,$/;"	e	enum:__anon183
LV_STATE_USER_3	src/core/lv_obj.h	/^    LV_STATE_USER_3      =  0x4000,$/;"	e	enum:__anon183
LV_STATE_USER_4	src/core/lv_obj.h	/^    LV_STATE_USER_4      =  0x8000,$/;"	e	enum:__anon183
LV_STYLE_ALIGN	src/misc/lv_style.h	/^    LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_ANIM_SPEED	src/misc/lv_style.h	/^    LV_STYLE_ANIM_SPEED              = 102,$/;"	e	enum:__anon17
LV_STYLE_ANIM_TIME	src/misc/lv_style.h	/^    LV_STYLE_ANIM_TIME               = 101,$/;"	e	enum:__anon17
LV_STYLE_ARC_COLOR	src/misc/lv_style.h	/^    LV_STYLE_ARC_COLOR               = 82,$/;"	e	enum:__anon17
LV_STYLE_ARC_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_ARC_IMG_SRC	src/misc/lv_style.h	/^    LV_STYLE_ARC_IMG_SRC             = 84,$/;"	e	enum:__anon17
LV_STYLE_ARC_OPA	src/misc/lv_style.h	/^    LV_STYLE_ARC_OPA                 = 83,$/;"	e	enum:__anon17
LV_STYLE_ARC_ROUNDED	src/misc/lv_style.h	/^    LV_STYLE_ARC_ROUNDED             = 81,$/;"	e	enum:__anon17
LV_STYLE_ARC_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_BASE_DIR	src/misc/lv_style.h	/^    LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_BG_COLOR	src/misc/lv_style.h	/^    LV_STYLE_BG_COLOR                = 32,$/;"	e	enum:__anon17
LV_STYLE_BG_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_BG_GRAD_COLOR	src/misc/lv_style.h	/^    LV_STYLE_BG_GRAD_COLOR           = 34,$/;"	e	enum:__anon17
LV_STYLE_BG_GRAD_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_BG_GRAD_DIR	src/misc/lv_style.h	/^    LV_STYLE_BG_GRAD_DIR             = 35,$/;"	e	enum:__anon17
LV_STYLE_BG_GRAD_STOP	src/misc/lv_style.h	/^    LV_STYLE_BG_GRAD_STOP            = 37,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_OPA	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_OPA              = 39,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_RECOLOR	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_RECOLOR          = 40,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_RECOLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_RECOLOR_OPA	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_SRC	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_SRC              = 38,$/;"	e	enum:__anon17
LV_STYLE_BG_IMG_TILED	src/misc/lv_style.h	/^    LV_STYLE_BG_IMG_TILED            = 42,$/;"	e	enum:__anon17
LV_STYLE_BG_MAIN_STOP	src/misc/lv_style.h	/^    LV_STYLE_BG_MAIN_STOP            = 36,$/;"	e	enum:__anon17
LV_STYLE_BG_OPA	src/misc/lv_style.h	/^    LV_STYLE_BG_OPA                  = 33,$/;"	e	enum:__anon17
LV_STYLE_BLEND_MODE	src/misc/lv_style.h	/^    LV_STYLE_BLEND_MODE              = 104,$/;"	e	enum:__anon17
LV_STYLE_BORDER_COLOR	src/misc/lv_style.h	/^    LV_STYLE_BORDER_COLOR            = 48,$/;"	e	enum:__anon17
LV_STYLE_BORDER_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_BORDER_OPA	src/misc/lv_style.h	/^    LV_STYLE_BORDER_OPA              = 49,$/;"	e	enum:__anon17
LV_STYLE_BORDER_POST	src/misc/lv_style.h	/^    LV_STYLE_BORDER_POST             = 52,$/;"	e	enum:__anon17
LV_STYLE_BORDER_SIDE	src/misc/lv_style.h	/^    LV_STYLE_BORDER_SIDE             = 51,$/;"	e	enum:__anon17
LV_STYLE_BORDER_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_CLIP_CORNER	src/misc/lv_style.h	/^    LV_STYLE_CLIP_CORNER             = 97,$/;"	e	enum:__anon17
LV_STYLE_COLOR_FILTER_DSC	src/misc/lv_style.h	/^    LV_STYLE_COLOR_FILTER_DSC        = 99,$/;"	e	enum:__anon17
LV_STYLE_COLOR_FILTER_OPA	src/misc/lv_style.h	/^    LV_STYLE_COLOR_FILTER_OPA        = 100,$/;"	e	enum:__anon17
LV_STYLE_CONST_ALIGN	src/misc/lv_style_gen.h	154;"	d
LV_STYLE_CONST_ANIM_SPEED	src/misc/lv_style_gen.h	306;"	d
LV_STYLE_CONST_ANIM_TIME	src/misc/lv_style_gen.h	298;"	d
LV_STYLE_CONST_ARC_COLOR	src/misc/lv_style_gen.h	770;"	d
LV_STYLE_CONST_ARC_COLOR_FILTERED	src/misc/lv_style_gen.h	778;"	d
LV_STYLE_CONST_ARC_IMG_SRC	src/misc/lv_style_gen.h	794;"	d
LV_STYLE_CONST_ARC_OPA	src/misc/lv_style_gen.h	786;"	d
LV_STYLE_CONST_ARC_ROUNDED	src/misc/lv_style_gen.h	762;"	d
LV_STYLE_CONST_ARC_WIDTH	src/misc/lv_style_gen.h	754;"	d
LV_STYLE_CONST_BASE_DIR	src/misc/lv_style_gen.h	338;"	d
LV_STYLE_CONST_BG_COLOR	src/misc/lv_style_gen.h	346;"	d
LV_STYLE_CONST_BG_COLOR_FILTERED	src/misc/lv_style_gen.h	354;"	d
LV_STYLE_CONST_BG_GRAD_COLOR	src/misc/lv_style_gen.h	370;"	d
LV_STYLE_CONST_BG_GRAD_COLOR_FILTERED	src/misc/lv_style_gen.h	378;"	d
LV_STYLE_CONST_BG_GRAD_DIR	src/misc/lv_style_gen.h	386;"	d
LV_STYLE_CONST_BG_GRAD_STOP	src/misc/lv_style_gen.h	402;"	d
LV_STYLE_CONST_BG_IMG_OPA	src/misc/lv_style_gen.h	418;"	d
LV_STYLE_CONST_BG_IMG_RECOLOR	src/misc/lv_style_gen.h	426;"	d
LV_STYLE_CONST_BG_IMG_RECOLOR_FILTERED	src/misc/lv_style_gen.h	434;"	d
LV_STYLE_CONST_BG_IMG_RECOLOR_OPA	src/misc/lv_style_gen.h	442;"	d
LV_STYLE_CONST_BG_IMG_SRC	src/misc/lv_style_gen.h	410;"	d
LV_STYLE_CONST_BG_IMG_TILED	src/misc/lv_style_gen.h	450;"	d
LV_STYLE_CONST_BG_MAIN_STOP	src/misc/lv_style_gen.h	394;"	d
LV_STYLE_CONST_BG_OPA	src/misc/lv_style_gen.h	362;"	d
LV_STYLE_CONST_BLEND_MODE	src/misc/lv_style_gen.h	322;"	d
LV_STYLE_CONST_BORDER_COLOR	src/misc/lv_style_gen.h	458;"	d
LV_STYLE_CONST_BORDER_COLOR_FILTERED	src/misc/lv_style_gen.h	466;"	d
LV_STYLE_CONST_BORDER_OPA	src/misc/lv_style_gen.h	474;"	d
LV_STYLE_CONST_BORDER_POST	src/misc/lv_style_gen.h	498;"	d
LV_STYLE_CONST_BORDER_SIDE	src/misc/lv_style_gen.h	490;"	d
LV_STYLE_CONST_BORDER_WIDTH	src/misc/lv_style_gen.h	482;"	d
LV_STYLE_CONST_CLIP_CORNER	src/misc/lv_style_gen.h	266;"	d
LV_STYLE_CONST_COLOR_FILTER_DSC	src/misc/lv_style_gen.h	282;"	d
LV_STYLE_CONST_COLOR_FILTER_OPA	src/misc/lv_style_gen.h	290;"	d
LV_STYLE_CONST_HEIGHT	src/misc/lv_style_gen.h	114;"	d
LV_STYLE_CONST_IMG_OPA	src/misc/lv_style_gen.h	570;"	d
LV_STYLE_CONST_IMG_RECOLOR	src/misc/lv_style_gen.h	578;"	d
LV_STYLE_CONST_IMG_RECOLOR_FILTERED	src/misc/lv_style_gen.h	586;"	d
LV_STYLE_CONST_IMG_RECOLOR_OPA	src/misc/lv_style_gen.h	594;"	d
LV_STYLE_CONST_INIT	src/misc/lv_style.h	48;"	d
LV_STYLE_CONST_INIT	src/misc/lv_style.h	50;"	d
LV_STYLE_CONST_LAYOUT	src/misc/lv_style_gen.h	330;"	d
LV_STYLE_CONST_LINE_COLOR	src/misc/lv_style_gen.h	730;"	d
LV_STYLE_CONST_LINE_COLOR_FILTERED	src/misc/lv_style_gen.h	738;"	d
LV_STYLE_CONST_LINE_DASH_GAP	src/misc/lv_style_gen.h	714;"	d
LV_STYLE_CONST_LINE_DASH_WIDTH	src/misc/lv_style_gen.h	706;"	d
LV_STYLE_CONST_LINE_OPA	src/misc/lv_style_gen.h	746;"	d
LV_STYLE_CONST_LINE_ROUNDED	src/misc/lv_style_gen.h	722;"	d
LV_STYLE_CONST_LINE_WIDTH	src/misc/lv_style_gen.h	698;"	d
LV_STYLE_CONST_MAX_HEIGHT	src/misc/lv_style_gen.h	130;"	d
LV_STYLE_CONST_MAX_WIDTH	src/misc/lv_style_gen.h	106;"	d
LV_STYLE_CONST_MIN_HEIGHT	src/misc/lv_style_gen.h	122;"	d
LV_STYLE_CONST_MIN_WIDTH	src/misc/lv_style_gen.h	98;"	d
LV_STYLE_CONST_OPA	src/misc/lv_style_gen.h	274;"	d
LV_STYLE_CONST_OUTLINE_COLOR	src/misc/lv_style_gen.h	610;"	d
LV_STYLE_CONST_OUTLINE_COLOR_FILTERED	src/misc/lv_style_gen.h	618;"	d
LV_STYLE_CONST_OUTLINE_OPA	src/misc/lv_style_gen.h	626;"	d
LV_STYLE_CONST_OUTLINE_PAD	src/misc/lv_style_gen.h	634;"	d
LV_STYLE_CONST_OUTLINE_WIDTH	src/misc/lv_style_gen.h	602;"	d
LV_STYLE_CONST_PAD_BOTTOM	src/misc/lv_style_gen.h	218;"	d
LV_STYLE_CONST_PAD_COLUMN	src/misc/lv_style_gen.h	250;"	d
LV_STYLE_CONST_PAD_LEFT	src/misc/lv_style_gen.h	226;"	d
LV_STYLE_CONST_PAD_RIGHT	src/misc/lv_style_gen.h	234;"	d
LV_STYLE_CONST_PAD_ROW	src/misc/lv_style_gen.h	242;"	d
LV_STYLE_CONST_PAD_TOP	src/misc/lv_style_gen.h	210;"	d
LV_STYLE_CONST_RADIUS	src/misc/lv_style_gen.h	258;"	d
LV_STYLE_CONST_SHADOW_COLOR	src/misc/lv_style_gen.h	674;"	d
LV_STYLE_CONST_SHADOW_COLOR_FILTERED	src/misc/lv_style_gen.h	682;"	d
LV_STYLE_CONST_SHADOW_OFS_X	src/misc/lv_style_gen.h	650;"	d
LV_STYLE_CONST_SHADOW_OFS_Y	src/misc/lv_style_gen.h	658;"	d
LV_STYLE_CONST_SHADOW_OPA	src/misc/lv_style_gen.h	690;"	d
LV_STYLE_CONST_SHADOW_SPREAD	src/misc/lv_style_gen.h	666;"	d
LV_STYLE_CONST_SHADOW_WIDTH	src/misc/lv_style_gen.h	642;"	d
LV_STYLE_CONST_TEXT_ALIGN	src/misc/lv_style_gen.h	562;"	d
LV_STYLE_CONST_TEXT_COLOR	src/misc/lv_style_gen.h	506;"	d
LV_STYLE_CONST_TEXT_COLOR_FILTERED	src/misc/lv_style_gen.h	514;"	d
LV_STYLE_CONST_TEXT_DECOR	src/misc/lv_style_gen.h	554;"	d
LV_STYLE_CONST_TEXT_FONT	src/misc/lv_style_gen.h	530;"	d
LV_STYLE_CONST_TEXT_LETTER_SPACE	src/misc/lv_style_gen.h	538;"	d
LV_STYLE_CONST_TEXT_LINE_SPACE	src/misc/lv_style_gen.h	546;"	d
LV_STYLE_CONST_TEXT_OPA	src/misc/lv_style_gen.h	522;"	d
LV_STYLE_CONST_TRANSFORM_ANGLE	src/misc/lv_style_gen.h	202;"	d
LV_STYLE_CONST_TRANSFORM_HEIGHT	src/misc/lv_style_gen.h	170;"	d
LV_STYLE_CONST_TRANSFORM_WIDTH	src/misc/lv_style_gen.h	162;"	d
LV_STYLE_CONST_TRANSFORM_ZOOM	src/misc/lv_style_gen.h	194;"	d
LV_STYLE_CONST_TRANSITION	src/misc/lv_style_gen.h	314;"	d
LV_STYLE_CONST_TRANSLATE_X	src/misc/lv_style_gen.h	178;"	d
LV_STYLE_CONST_TRANSLATE_Y	src/misc/lv_style_gen.h	186;"	d
LV_STYLE_CONST_WIDTH	src/misc/lv_style_gen.h	90;"	d
LV_STYLE_CONST_X	src/misc/lv_style_gen.h	138;"	d
LV_STYLE_CONST_Y	src/misc/lv_style_gen.h	146;"	d
LV_STYLE_FLEX_CROSS_PLACE	src/extra/layouts/flex/lv_flex.c	/^lv_style_prop_t LV_STYLE_FLEX_CROSS_PLACE;$/;"	v
LV_STYLE_FLEX_FLOW	src/extra/layouts/flex/lv_flex.c	/^lv_style_prop_t LV_STYLE_FLEX_FLOW;$/;"	v
LV_STYLE_FLEX_GROW	src/extra/layouts/flex/lv_flex.c	/^lv_style_prop_t LV_STYLE_FLEX_GROW;$/;"	v
LV_STYLE_FLEX_MAIN_PLACE	src/extra/layouts/flex/lv_flex.c	/^lv_style_prop_t LV_STYLE_FLEX_MAIN_PLACE;$/;"	v
LV_STYLE_FLEX_TRACK_PLACE	src/extra/layouts/flex/lv_flex.c	/^lv_style_prop_t LV_STYLE_FLEX_TRACK_PLACE;$/;"	v
LV_STYLE_GRID_CELL_COLUMN_POS	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_COLUMN_POS;$/;"	v
LV_STYLE_GRID_CELL_COLUMN_SPAN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_COLUMN_SPAN;$/;"	v
LV_STYLE_GRID_CELL_ROW_POS	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_ROW_POS;$/;"	v
LV_STYLE_GRID_CELL_ROW_SPAN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_ROW_SPAN;$/;"	v
LV_STYLE_GRID_CELL_X_ALIGN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_X_ALIGN;$/;"	v
LV_STYLE_GRID_CELL_Y_ALIGN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_CELL_Y_ALIGN;$/;"	v
LV_STYLE_GRID_COLUMN_ALIGN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_COLUMN_ALIGN;$/;"	v
LV_STYLE_GRID_COLUMN_DSC_ARRAY	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_COLUMN_DSC_ARRAY;$/;"	v
LV_STYLE_GRID_ROW_ALIGN	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_ROW_ALIGN;$/;"	v
LV_STYLE_GRID_ROW_DSC_ARRAY	src/extra/layouts/grid/lv_grid.c	/^lv_style_prop_t LV_STYLE_GRID_ROW_DSC_ARRAY;$/;"	v
LV_STYLE_H	src/misc/lv_style.h	7;"	d
LV_STYLE_HEIGHT	src/misc/lv_style.h	/^    LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_IMG_OPA	src/misc/lv_style.h	/^    LV_STYLE_IMG_OPA                 = 70,$/;"	e	enum:__anon17
LV_STYLE_IMG_RECOLOR	src/misc/lv_style.h	/^    LV_STYLE_IMG_RECOLOR             = 71,$/;"	e	enum:__anon17
LV_STYLE_IMG_RECOLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_IMG_RECOLOR_OPA	src/misc/lv_style.h	/^    LV_STYLE_IMG_RECOLOR_OPA         = 72,$/;"	e	enum:__anon17
LV_STYLE_LAYOUT	src/misc/lv_style.h	/^    LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_LINE_COLOR	src/misc/lv_style.h	/^    LV_STYLE_LINE_COLOR              = 77,$/;"	e	enum:__anon17
LV_STYLE_LINE_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_LINE_DASH_GAP	src/misc/lv_style.h	/^    LV_STYLE_LINE_DASH_GAP           = 75,$/;"	e	enum:__anon17
LV_STYLE_LINE_DASH_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_LINE_DASH_WIDTH         = 74,$/;"	e	enum:__anon17
LV_STYLE_LINE_OPA	src/misc/lv_style.h	/^    LV_STYLE_LINE_OPA                = 78,$/;"	e	enum:__anon17
LV_STYLE_LINE_ROUNDED	src/misc/lv_style.h	/^    LV_STYLE_LINE_ROUNDED            = 76,$/;"	e	enum:__anon17
LV_STYLE_LINE_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_MAX_HEIGHT	src/misc/lv_style.h	/^    LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_MAX_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_MIN_HEIGHT	src/misc/lv_style.h	/^    LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_MIN_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_OPA	src/misc/lv_style.h	/^    LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,$/;"	e	enum:__anon17
LV_STYLE_OUTLINE_COLOR	src/misc/lv_style.h	/^    LV_STYLE_OUTLINE_COLOR           = 59,$/;"	e	enum:__anon17
LV_STYLE_OUTLINE_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_OUTLINE_OPA	src/misc/lv_style.h	/^    LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_OUTLINE_PAD	src/misc/lv_style.h	/^    LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_OUTLINE_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_PAD_BOTTOM	src/misc/lv_style.h	/^    LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PAD_COLUMN	src/misc/lv_style.h	/^    LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PAD_LEFT	src/misc/lv_style.h	/^    LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PAD_RIGHT	src/misc/lv_style.h	/^    LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PAD_ROW	src/misc/lv_style.h	/^    LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PAD_TOP	src/misc/lv_style.h	/^    LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_PROP_ANY	src/misc/lv_style.h	/^    LV_STYLE_PROP_ANY                = 0xFFFF$/;"	e	enum:__anon17
LV_STYLE_PROP_EXT_DRAW	src/misc/lv_style.h	36;"	d
LV_STYLE_PROP_FILTER	src/misc/lv_style.h	39;"	d
LV_STYLE_PROP_INHERIT	src/misc/lv_style.h	35;"	d
LV_STYLE_PROP_INV	src/misc/lv_style.h	/^    LV_STYLE_PROP_INV                = 0,$/;"	e	enum:__anon17
LV_STYLE_PROP_LAYOUT_REFR	src/misc/lv_style.h	37;"	d
LV_STYLE_PROP_PARENT_LAYOUT_REFR	src/misc/lv_style.h	38;"	d
LV_STYLE_RADIUS	src/misc/lv_style.h	/^    LV_STYLE_RADIUS                  = 96,$/;"	e	enum:__anon17
LV_STYLE_SENTINEL_VALUE	src/misc/lv_style.h	30;"	d
LV_STYLE_SHADOW_COLOR	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_COLOR            = 68,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_OFS_X	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_OFS_Y	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_OPA	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_SPREAD	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_SHADOW_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_TEXT_ALIGN	src/misc/lv_style.h	/^    LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_TEXT_COLOR	src/misc/lv_style.h	/^    LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,$/;"	e	enum:__anon17
LV_STYLE_TEXT_COLOR_FILTERED	src/misc/lv_style.h	/^    LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,$/;"	e	enum:__anon17
LV_STYLE_TEXT_DECOR	src/misc/lv_style.h	/^    LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,$/;"	e	enum:__anon17
LV_STYLE_TEXT_FONT	src/misc/lv_style.h	/^    LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_TEXT_LETTER_SPACE	src/misc/lv_style.h	/^    LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_TEXT_LINE_SPACE	src/misc/lv_style.h	/^    LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_TEXT_OPA	src/misc/lv_style.h	/^    LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,$/;"	e	enum:__anon17
LV_STYLE_TRANSFORM_ANGLE	src/misc/lv_style.h	/^    LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_TRANSFORM_HEIGHT	src/misc/lv_style.h	/^    LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_TRANSFORM_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_TRANSFORM_ZOOM	src/misc/lv_style.h	/^    LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW,$/;"	e	enum:__anon17
LV_STYLE_TRANSITION	src/misc/lv_style.h	/^    LV_STYLE_TRANSITION              = 103,$/;"	e	enum:__anon17
LV_STYLE_TRANSLATE_X	src/misc/lv_style.h	/^    LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_TRANSLATE_Y	src/misc/lv_style.h	/^    LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_WIDTH	src/misc/lv_style.h	/^    LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_X	src/misc/lv_style.h	/^    LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_STYLE_Y	src/misc/lv_style.h	/^    LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,$/;"	e	enum:__anon17
LV_SWITCH_H	src/widgets/lv_switch.h	7;"	d
LV_SYMBOL_AUDIO	src/font/lv_symbol_def.h	24;"	d
LV_SYMBOL_BACKSPACE	src/font/lv_symbol_def.h	81;"	d
LV_SYMBOL_BARS	src/font/lv_symbol_def.h	65;"	d
LV_SYMBOL_BATTERY_1	src/font/lv_symbol_def.h	76;"	d
LV_SYMBOL_BATTERY_2	src/font/lv_symbol_def.h	75;"	d
LV_SYMBOL_BATTERY_3	src/font/lv_symbol_def.h	74;"	d
LV_SYMBOL_BATTERY_EMPTY	src/font/lv_symbol_def.h	77;"	d
LV_SYMBOL_BATTERY_FULL	src/font/lv_symbol_def.h	73;"	d
LV_SYMBOL_BELL	src/font/lv_symbol_def.h	68;"	d
LV_SYMBOL_BLUETOOTH	src/font/lv_symbol_def.h	79;"	d
LV_SYMBOL_BULLET	src/font/lv_symbol_def.h	91;"	d
LV_SYMBOL_CALL	src/font/lv_symbol_def.h	61;"	d
LV_SYMBOL_CHARGE	src/font/lv_symbol_def.h	66;"	d
LV_SYMBOL_CLOSE	src/font/lv_symbol_def.h	28;"	d
LV_SYMBOL_COPY	src/font/lv_symbol_def.h	63;"	d
LV_SYMBOL_CUT	src/font/lv_symbol_def.h	62;"	d
LV_SYMBOL_DEF_H	src/font/lv_symbol_def.h	2;"	d
LV_SYMBOL_DIRECTORY	src/font/lv_symbol_def.h	59;"	d
LV_SYMBOL_DOWN	src/font/lv_symbol_def.h	57;"	d
LV_SYMBOL_DOWNLOAD	src/font/lv_symbol_def.h	32;"	d
LV_SYMBOL_DRIVE	src/font/lv_symbol_def.h	33;"	d
LV_SYMBOL_DUMMY	src/font/lv_symbol_def.h	86;"	d
LV_SYMBOL_EDIT	src/font/lv_symbol_def.h	40;"	d
LV_SYMBOL_EJECT	src/font/lv_symbol_def.h	47;"	d
LV_SYMBOL_ENVELOPE	src/font/lv_symbol_def.h	39;"	d
LV_SYMBOL_EYE_CLOSE	src/font/lv_symbol_def.h	53;"	d
LV_SYMBOL_EYE_OPEN	src/font/lv_symbol_def.h	52;"	d
LV_SYMBOL_FILE	src/font/lv_symbol_def.h	71;"	d
LV_SYMBOL_GPS	src/font/lv_symbol_def.h	70;"	d
LV_SYMBOL_HOME	src/font/lv_symbol_def.h	31;"	d
LV_SYMBOL_IMAGE	src/font/lv_symbol_def.h	38;"	d
LV_SYMBOL_KEYBOARD	src/font/lv_symbol_def.h	69;"	d
LV_SYMBOL_LEFT	src/font/lv_symbol_def.h	48;"	d
LV_SYMBOL_LIST	src/font/lv_symbol_def.h	26;"	d
LV_SYMBOL_LOOP	src/font/lv_symbol_def.h	58;"	d
LV_SYMBOL_MINUS	src/font/lv_symbol_def.h	51;"	d
LV_SYMBOL_MUTE	src/font/lv_symbol_def.h	35;"	d
LV_SYMBOL_NEW_LINE	src/font/lv_symbol_def.h	83;"	d
LV_SYMBOL_NEXT	src/font/lv_symbol_def.h	46;"	d
LV_SYMBOL_OK	src/font/lv_symbol_def.h	27;"	d
LV_SYMBOL_PASTE	src/font/lv_symbol_def.h	67;"	d
LV_SYMBOL_PAUSE	src/font/lv_symbol_def.h	44;"	d
LV_SYMBOL_PLAY	src/font/lv_symbol_def.h	43;"	d
LV_SYMBOL_PLUS	src/font/lv_symbol_def.h	50;"	d
LV_SYMBOL_POWER	src/font/lv_symbol_def.h	29;"	d
LV_SYMBOL_PREV	src/font/lv_symbol_def.h	42;"	d
LV_SYMBOL_REFRESH	src/font/lv_symbol_def.h	34;"	d
LV_SYMBOL_RIGHT	src/font/lv_symbol_def.h	49;"	d
LV_SYMBOL_SAVE	src/font/lv_symbol_def.h	64;"	d
LV_SYMBOL_SD_CARD	src/font/lv_symbol_def.h	82;"	d
LV_SYMBOL_SETTINGS	src/font/lv_symbol_def.h	30;"	d
LV_SYMBOL_SHUFFLE	src/font/lv_symbol_def.h	55;"	d
LV_SYMBOL_STOP	src/font/lv_symbol_def.h	45;"	d
LV_SYMBOL_TINT	src/font/lv_symbol_def.h	41;"	d
LV_SYMBOL_TRASH	src/font/lv_symbol_def.h	80;"	d
LV_SYMBOL_UP	src/font/lv_symbol_def.h	56;"	d
LV_SYMBOL_UPLOAD	src/font/lv_symbol_def.h	60;"	d
LV_SYMBOL_USB	src/font/lv_symbol_def.h	78;"	d
LV_SYMBOL_VIDEO	src/font/lv_symbol_def.h	25;"	d
LV_SYMBOL_VOLUME_MAX	src/font/lv_symbol_def.h	37;"	d
LV_SYMBOL_VOLUME_MID	src/font/lv_symbol_def.h	36;"	d
LV_SYMBOL_WARNING	src/font/lv_symbol_def.h	54;"	d
LV_SYMBOL_WIFI	src/font/lv_symbol_def.h	72;"	d
LV_TABLE_CELL_CTRL_CUSTOM_1	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_CUSTOM_1    = 1 << 4,$/;"	e	enum:__anon150
LV_TABLE_CELL_CTRL_CUSTOM_2	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_CUSTOM_2    = 1 << 5,$/;"	e	enum:__anon150
LV_TABLE_CELL_CTRL_CUSTOM_3	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_CUSTOM_3    = 1 << 6,$/;"	e	enum:__anon150
LV_TABLE_CELL_CTRL_CUSTOM_4	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_CUSTOM_4    = 1 << 7,$/;"	e	enum:__anon150
LV_TABLE_CELL_CTRL_MERGE_RIGHT	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_MERGE_RIGHT = 1 << 0,$/;"	e	enum:__anon150
LV_TABLE_CELL_CTRL_TEXT_CROP	src/widgets/lv_table.h	/^    LV_TABLE_CELL_CTRL_TEXT_CROP   = 1 << 1,$/;"	e	enum:__anon150
LV_TABLE_CELL_NONE	src/widgets/lv_table.h	/^LV_EXPORT_CONST_INT(LV_TABLE_CELL_NONE);$/;"	v
LV_TABLE_CELL_NONE	src/widgets/lv_table.h	31;"	d
LV_TABLE_H	src/widgets/lv_table.h	7;"	d
LV_TABVIEW_H	src/extra/widgets/tabview/lv_tabview.h	7;"	d
LV_TEMPL_H	src/misc/lv_templ.h	7;"	d
LV_TEMPL_H	src/widgets/lv_objx_templ.h	14;"	d
LV_TEST_ASSERT_H	tests/lv_test_assert.h	7;"	d
LV_TEST_CONF_H	tests/lv_test_conf.h	7;"	d
LV_TEST_CORE_H	tests/lv_test_core/lv_test_core.h	7;"	d
LV_TEST_FONT_LOADER_H	tests/lv_test_core/lv_test_font_loader.h	7;"	d
LV_TEST_LABEL_H	tests/lv_test_widgets/lv_test_label.h	7;"	d
LV_TEST_OBJ_H	tests/lv_test_core/lv_test_obj.h	7;"	d
LV_TEST_STYLE_H	tests/lv_test_core/lv_test_style.h	7;"	d
LV_TEXTAREA_CURSOR_LAST	src/widgets/lv_textarea.h	/^LV_EXPORT_CONST_INT(LV_TEXTAREA_CURSOR_LAST);$/;"	v
LV_TEXTAREA_CURSOR_LAST	src/widgets/lv_textarea.h	31;"	d
LV_TEXTAREA_DEF_CURSOR_BLINK_TIME	src/widgets/lv_textarea.c	29;"	d	file:
LV_TEXTAREA_DEF_PWD_SHOW_TIME	src/lv_conf_internal.h	1215;"	d
LV_TEXTAREA_DEF_PWD_SHOW_TIME	src/lv_conf_internal.h	1217;"	d
LV_TEXTAREA_DEF_PWD_SHOW_TIME	src/widgets/lv_textarea.c	33;"	d	file:
LV_TEXTAREA_H	src/widgets/lv_textarea.h	7;"	d
LV_TEXTAREA_PWD_BULLET_UNICODE	src/widgets/lv_textarea.c	36;"	d	file:
LV_TEXT_ALIGN_AUTO	src/misc/lv_txt.h	/^    LV_TEXT_ALIGN_AUTO, \/**< Align text auto*\/$/;"	e	enum:__anon28
LV_TEXT_ALIGN_CENTER	src/misc/lv_txt.h	/^    LV_TEXT_ALIGN_CENTER, \/**< Align text to center*\/$/;"	e	enum:__anon28
LV_TEXT_ALIGN_LEFT	src/misc/lv_txt.h	/^    LV_TEXT_ALIGN_LEFT, \/**< Align text to left*\/$/;"	e	enum:__anon28
LV_TEXT_ALIGN_RIGHT	src/misc/lv_txt.h	/^    LV_TEXT_ALIGN_RIGHT, \/**< Align text to right*\/$/;"	e	enum:__anon28
LV_TEXT_CMD_STATE_IN	src/misc/lv_txt.h	/^    LV_TEXT_CMD_STATE_IN,   \/**< Processing the command*\/$/;"	e	enum:__anon27
LV_TEXT_CMD_STATE_PAR	src/misc/lv_txt.h	/^    LV_TEXT_CMD_STATE_PAR,  \/**< Processing the parameter*\/$/;"	e	enum:__anon27
LV_TEXT_CMD_STATE_WAIT	src/misc/lv_txt.h	/^    LV_TEXT_CMD_STATE_WAIT, \/**< Waiting for command*\/$/;"	e	enum:__anon27
LV_TEXT_DECOR_NONE	src/misc/lv_style.h	/^    LV_TEXT_DECOR_NONE          = 0x00,$/;"	e	enum:__anon13
LV_TEXT_DECOR_STRIKETHROUGH	src/misc/lv_style.h	/^    LV_TEXT_DECOR_STRIKETHROUGH = 0x02,$/;"	e	enum:__anon13
LV_TEXT_DECOR_UNDERLINE	src/misc/lv_style.h	/^    LV_TEXT_DECOR_UNDERLINE     = 0x01,$/;"	e	enum:__anon13
LV_TEXT_FLAG_EXPAND	src/misc/lv_txt.h	/^    LV_TEXT_FLAG_EXPAND  = 0x02, \/**< Ignore max-width to avoid automatic word wrapping*\/$/;"	e	enum:__anon26
LV_TEXT_FLAG_FIT	src/misc/lv_txt.h	/^    LV_TEXT_FLAG_FIT     = 0x04, \/**< Max-width is already equal to the longest line. (Used to skip some calculation)*\/$/;"	e	enum:__anon26
LV_TEXT_FLAG_NONE	src/misc/lv_txt.h	/^    LV_TEXT_FLAG_NONE    = 0x00,$/;"	e	enum:__anon26
LV_TEXT_FLAG_RECOLOR	src/misc/lv_txt.h	/^    LV_TEXT_FLAG_RECOLOR = 0x01, \/**< Enable parsing of recolor command*\/$/;"	e	enum:__anon26
LV_THEMES_H	src/extra/themes/lv_themes.h	7;"	d
LV_THEME_BASIC_H	src/extra/themes/basic/lv_theme_basic.h	7;"	d
LV_THEME_DEFAULT_DARK	src/lv_conf_internal.h	1431;"	d
LV_THEME_DEFAULT_DARK	src/lv_conf_internal.h	1433;"	d
LV_THEME_DEFAULT_GROW	src/lv_conf_internal.h	1440;"	d
LV_THEME_DEFAULT_GROW	src/lv_conf_internal.h	1442;"	d
LV_THEME_DEFAULT_H	src/extra/themes/default/lv_theme_default.h	7;"	d
LV_THEME_DEFAULT_TRANSITON_TIME	src/lv_conf_internal.h	1449;"	d
LV_THEME_DEFAULT_TRANSITON_TIME	src/lv_conf_internal.h	1451;"	d
LV_THEME_H	src/core/lv_theme.h	7;"	d
LV_TICK_CUSTOM	src/lv_conf_internal.h	192;"	d
LV_TICK_CUSTOM	src/lv_conf_internal.h	194;"	d
LV_TICK_CUSTOM_INCLUDE	src/lv_conf_internal.h	200;"	d
LV_TICK_CUSTOM_INCLUDE	src/lv_conf_internal.h	202;"	d
LV_TICK_CUSTOM_SYS_TIME_EXPR	src/lv_conf_internal.h	207;"	d
LV_TICK_CUSTOM_SYS_TIME_EXPR	src/lv_conf_internal.h	209;"	d
LV_TICK_CUSTOM_SYS_TIME_EXPR	tests/lv_test_conf.h	26;"	d
LV_TILEVIEW_H	src/extra/widgets/tileview/lv_tileview.h	7;"	d
LV_TIMER_H	src/misc/lv_timer.h	6;"	d
LV_TRACE_LAYOUT	src/extra/layouts/lv_layouts.h	35;"	d
LV_TRACE_LAYOUT	src/extra/layouts/lv_layouts.h	37;"	d
LV_TRACE_OBJ_CREATE	src/core/lv_obj.h	377;"	d
LV_TRACE_OBJ_CREATE	src/core/lv_obj.h	379;"	d
LV_TRIGO_SHIFT	src/misc/lv_math.h	23;"	d
LV_TRIGO_SIN_MAX	src/misc/lv_math.h	22;"	d
LV_TXT_AP_H	src/misc/lv_txt_ap.h	7;"	d
LV_TXT_BREAK_CHARS	src/lv_conf_internal.h	982;"	d
LV_TXT_BREAK_CHARS	src/lv_conf_internal.h	984;"	d
LV_TXT_COLOR_CMD	src/lv_conf_internal.h	1021;"	d
LV_TXT_COLOR_CMD	src/lv_conf_internal.h	1023;"	d
LV_TXT_COLOR_CMD	src/misc/lv_txt.h	28;"	d
LV_TXT_ENC	src/lv_conf_internal.h	973;"	d
LV_TXT_ENC	src/lv_conf_internal.h	975;"	d
LV_TXT_ENC_ASCII	src/misc/lv_txt.h	32;"	d
LV_TXT_ENC_UTF8	src/misc/lv_txt.h	31;"	d
LV_TXT_H	src/misc/lv_txt.h	7;"	d
LV_TXT_LINE_BREAK_LONG_LEN	src/lv_conf_internal.h	992;"	d
LV_TXT_LINE_BREAK_LONG_LEN	src/lv_conf_internal.h	994;"	d
LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN	src/lv_conf_internal.h	1012;"	d
LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN	src/lv_conf_internal.h	1014;"	d
LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN	src/lv_conf_internal.h	1002;"	d
LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN	src/lv_conf_internal.h	1004;"	d
LV_TYPES_H	src/misc/lv_types.h	7;"	d
LV_UDIV255	src/misc/lv_color.h	204;"	d
LV_UMAX_OF	src/misc/lv_math.h	134;"	d
LV_UNDEF_ARABIC_PERSIAN_CHARS	src/misc/lv_txt_ap.h	26;"	d
LV_UNUSED	src/misc/lv_types.h	75;"	d
LV_USE_ANIMIMG	src/lv_conf_internal.h	1077;"	d
LV_USE_ANIMIMG	src/lv_conf_internal.h	1079;"	d
LV_USE_ARABIC_PERSIAN_CHARS	src/lv_conf_internal.h	1055;"	d
LV_USE_ARABIC_PERSIAN_CHARS	src/lv_conf_internal.h	1057;"	d
LV_USE_ARC	src/lv_conf_internal.h	1069;"	d
LV_USE_ARC	src/lv_conf_internal.h	1071;"	d
LV_USE_ASSERT_MALLOC	src/lv_conf_internal.h	446;"	d
LV_USE_ASSERT_MALLOC	src/lv_conf_internal.h	448;"	d
LV_USE_ASSERT_MEM_INTEGRITY	src/lv_conf_internal.h	460;"	d
LV_USE_ASSERT_MEM_INTEGRITY	src/lv_conf_internal.h	462;"	d
LV_USE_ASSERT_NULL	src/lv_conf_internal.h	439;"	d
LV_USE_ASSERT_NULL	src/lv_conf_internal.h	441;"	d
LV_USE_ASSERT_OBJ	src/lv_conf_internal.h	467;"	d
LV_USE_ASSERT_OBJ	src/lv_conf_internal.h	469;"	d
LV_USE_ASSERT_STYLE	src/lv_conf_internal.h	453;"	d
LV_USE_ASSERT_STYLE	src/lv_conf_internal.h	455;"	d
LV_USE_BAR	src/lv_conf_internal.h	1085;"	d
LV_USE_BAR	src/lv_conf_internal.h	1087;"	d
LV_USE_BIDI	src/lv_conf_internal.h	1032;"	d
LV_USE_BIDI	src/lv_conf_internal.h	1034;"	d
LV_USE_BTN	src/lv_conf_internal.h	1093;"	d
LV_USE_BTN	src/lv_conf_internal.h	1095;"	d
LV_USE_BTNMATRIX	src/lv_conf_internal.h	1101;"	d
LV_USE_BTNMATRIX	src/lv_conf_internal.h	1103;"	d
LV_USE_CALENDAR	src/lv_conf_internal.h	1239;"	d
LV_USE_CALENDAR	src/lv_conf_internal.h	1241;"	d
LV_USE_CALENDAR_HEADER_ARROW	src/lv_conf_internal.h	1279;"	d
LV_USE_CALENDAR_HEADER_ARROW	src/lv_conf_internal.h	1281;"	d
LV_USE_CALENDAR_HEADER_DROPDOWN	src/lv_conf_internal.h	1286;"	d
LV_USE_CALENDAR_HEADER_DROPDOWN	src/lv_conf_internal.h	1288;"	d
LV_USE_CANVAS	src/lv_conf_internal.h	1109;"	d
LV_USE_CANVAS	src/lv_conf_internal.h	1111;"	d
LV_USE_CHART	src/lv_conf_internal.h	1295;"	d
LV_USE_CHART	src/lv_conf_internal.h	1297;"	d
LV_USE_CHECKBOX	src/lv_conf_internal.h	1117;"	d
LV_USE_CHECKBOX	src/lv_conf_internal.h	1119;"	d
LV_USE_COLORWHEEL	src/lv_conf_internal.h	1303;"	d
LV_USE_COLORWHEEL	src/lv_conf_internal.h	1305;"	d
LV_USE_DROPDOWN	src/lv_conf_internal.h	1126;"	d
LV_USE_DROPDOWN	src/lv_conf_internal.h	1128;"	d
LV_USE_FLEX	src/lv_conf_internal.h	1481;"	d
LV_USE_FLEX	src/lv_conf_internal.h	1483;"	d
LV_USE_FONT_COMPRESSED	src/lv_conf_internal.h	936;"	d
LV_USE_FONT_COMPRESSED	src/lv_conf_internal.h	938;"	d
LV_USE_FONT_SUBPX	src/lv_conf_internal.h	945;"	d
LV_USE_FONT_SUBPX	src/lv_conf_internal.h	947;"	d
LV_USE_GPU_NXP_PXP	src/lv_conf_internal.h	303;"	d
LV_USE_GPU_NXP_PXP	src/lv_conf_internal.h	305;"	d
LV_USE_GPU_NXP_PXP_AUTO_INIT	src/lv_conf_internal.h	316;"	d
LV_USE_GPU_NXP_PXP_AUTO_INIT	src/lv_conf_internal.h	318;"	d
LV_USE_GPU_NXP_VG_LITE	src/lv_conf_internal.h	326;"	d
LV_USE_GPU_NXP_VG_LITE	src/lv_conf_internal.h	328;"	d
LV_USE_GPU_STM32_DMA2D	src/lv_conf_internal.h	283;"	d
LV_USE_GPU_STM32_DMA2D	src/lv_conf_internal.h	285;"	d
LV_USE_GRID	src/lv_conf_internal.h	1490;"	d
LV_USE_GRID	src/lv_conf_internal.h	1492;"	d
LV_USE_IMG	src/lv_conf_internal.h	1134;"	d
LV_USE_IMG	src/lv_conf_internal.h	1136;"	d
LV_USE_IMGBTN	src/lv_conf_internal.h	1311;"	d
LV_USE_IMGBTN	src/lv_conf_internal.h	1313;"	d
LV_USE_KEYBOARD	src/lv_conf_internal.h	1319;"	d
LV_USE_KEYBOARD	src/lv_conf_internal.h	1321;"	d
LV_USE_LABEL	src/lv_conf_internal.h	1142;"	d
LV_USE_LABEL	src/lv_conf_internal.h	1144;"	d
LV_USE_LARGE_COORD	src/lv_conf_internal.h	696;"	d
LV_USE_LARGE_COORD	src/lv_conf_internal.h	698;"	d
LV_USE_LED	src/lv_conf_internal.h	1327;"	d
LV_USE_LED	src/lv_conf_internal.h	1329;"	d
LV_USE_LINE	src/lv_conf_internal.h	1166;"	d
LV_USE_LINE	src/lv_conf_internal.h	1168;"	d
LV_USE_LIST	src/lv_conf_internal.h	1335;"	d
LV_USE_LIST	src/lv_conf_internal.h	1337;"	d
LV_USE_LOG	src/lv_conf_internal.h	339;"	d
LV_USE_LOG	src/lv_conf_internal.h	341;"	d
LV_USE_MEM_MONITOR	src/lv_conf_internal.h	506;"	d
LV_USE_MEM_MONITOR	src/lv_conf_internal.h	508;"	d
LV_USE_METER	src/lv_conf_internal.h	1343;"	d
LV_USE_METER	src/lv_conf_internal.h	1345;"	d
LV_USE_MSGBOX	src/lv_conf_internal.h	1351;"	d
LV_USE_MSGBOX	src/lv_conf_internal.h	1353;"	d
LV_USE_PERF_MONITOR	src/lv_conf_internal.h	496;"	d
LV_USE_PERF_MONITOR	src/lv_conf_internal.h	498;"	d
LV_USE_REFR_DEBUG	src/lv_conf_internal.h	515;"	d
LV_USE_REFR_DEBUG	src/lv_conf_internal.h	517;"	d
LV_USE_ROLLER	src/lv_conf_internal.h	1174;"	d
LV_USE_ROLLER	src/lv_conf_internal.h	1176;"	d
LV_USE_SLIDER	src/lv_conf_internal.h	1191;"	d
LV_USE_SLIDER	src/lv_conf_internal.h	1193;"	d
LV_USE_SPAN	src/lv_conf_internal.h	1399;"	d
LV_USE_SPAN	src/lv_conf_internal.h	1401;"	d
LV_USE_SPINBOX	src/lv_conf_internal.h	1359;"	d
LV_USE_SPINBOX	src/lv_conf_internal.h	1361;"	d
LV_USE_SPINNER	src/lv_conf_internal.h	1367;"	d
LV_USE_SPINNER	src/lv_conf_internal.h	1369;"	d
LV_USE_SWITCH	src/lv_conf_internal.h	1199;"	d
LV_USE_SWITCH	src/lv_conf_internal.h	1201;"	d
LV_USE_TABLE	src/lv_conf_internal.h	1224;"	d
LV_USE_TABLE	src/lv_conf_internal.h	1226;"	d
LV_USE_TABVIEW	src/lv_conf_internal.h	1375;"	d
LV_USE_TABVIEW	src/lv_conf_internal.h	1377;"	d
LV_USE_TEXTAREA	src/lv_conf_internal.h	1207;"	d
LV_USE_TEXTAREA	src/lv_conf_internal.h	1209;"	d
LV_USE_THEME_BASIC	src/lv_conf_internal.h	1459;"	d
LV_USE_THEME_BASIC	src/lv_conf_internal.h	1461;"	d
LV_USE_THEME_DEFAULT	src/lv_conf_internal.h	1421;"	d
LV_USE_THEME_DEFAULT	src/lv_conf_internal.h	1423;"	d
LV_USE_THEME_MONO	src/lv_conf_internal.h	1468;"	d
LV_USE_THEME_MONO	src/lv_conf_internal.h	1470;"	d
LV_USE_THEME_MONO_H	src/extra/themes/mono/lv_theme_mono.h	7;"	d
LV_USE_TILEVIEW	src/lv_conf_internal.h	1383;"	d
LV_USE_TILEVIEW	src/lv_conf_internal.h	1385;"	d
LV_USE_USER_DATA	src/lv_conf_internal.h	563;"	d
LV_USE_USER_DATA	src/lv_conf_internal.h	565;"	d
LV_USE_WIN	src/lv_conf_internal.h	1391;"	d
LV_USE_WIN	src/lv_conf_internal.h	1393;"	d
LV_UTILS_H	src/misc/lv_utils.h	7;"	d
LV_VERSION_CHECK	lvgl.h	110;"	d
LV_VER_RES	src/core/lv_disp.h	211;"	d
LV_WIDGETS_H	src/extra/widgets/lv_widgets.h	7;"	d
LV_WIN_H	src/extra/widgets/win/lv_win.h	7;"	d
MAINOBJ	tests/Makefile	/^MAINOBJ = $(MAINSRC:.c=$(OBJEXT))$/;"	m
MAINSRC	tests/Makefile	/^MAINSRC = .\/lv_test_main.c$/;"	m
MAP_NORMAL_MASK_PX	src/draw/lv_draw_blend.c	93;"	d	file:
MAP_NORMAL_MASK_PX_SCR_TRANSP	src/draw/lv_draw_blend.c	100;"	d	file:
MEM_TRACE	src/misc/lv_mem.c	63;"	d	file:
MEM_TRACE	src/misc/lv_mem.c	65;"	d	file:
MEM_UNIT	src/misc/lv_mem.c	30;"	d	file:
MEM_UNIT	src/misc/lv_mem.c	33;"	d	file:
MODE_DARK	src/extra/themes/default/lv_theme_default.c	19;"	d	file:
MV_CLASS	src/extra/widgets/list/lv_list.c	20;"	d	file:
MY_CLASS	src/core/lv_event.c	15;"	d	file:
MY_CLASS	src/core/lv_obj.c	36;"	d	file:
MY_CLASS	src/core/lv_obj_class.c	15;"	d	file:
MY_CLASS	src/core/lv_obj_draw.c	17;"	d	file:
MY_CLASS	src/core/lv_obj_pos.c	17;"	d	file:
MY_CLASS	src/core/lv_obj_scroll.c	18;"	d	file:
MY_CLASS	src/core/lv_obj_style.c	16;"	d	file:
MY_CLASS	src/core/lv_obj_tree.c	18;"	d	file:
MY_CLASS	src/extra/widgets/chart/lv_chart.c	15;"	d	file:
MY_CLASS	src/extra/widgets/colorwheel/lv_colorwheel.c	16;"	d	file:
MY_CLASS	src/extra/widgets/imgbtn/lv_imgbtn.c	17;"	d	file:
MY_CLASS	src/extra/widgets/led/lv_led.c	15;"	d	file:
MY_CLASS	src/extra/widgets/meter/lv_meter.c	15;"	d	file:
MY_CLASS	src/extra/widgets/span/lv_span.c	16;"	d	file:
MY_CLASS	src/extra/widgets/spinbox/lv_spinbox.c	15;"	d	file:
MY_CLASS	src/widgets/lv_arc.c	21;"	d	file:
MY_CLASS	src/widgets/lv_bar.c	20;"	d	file:
MY_CLASS	src/widgets/lv_btn.c	18;"	d	file:
MY_CLASS	src/widgets/lv_btnmatrix.c	23;"	d	file:
MY_CLASS	src/widgets/lv_canvas.c	20;"	d	file:
MY_CLASS	src/widgets/lv_checkbox.c	20;"	d	file:
MY_CLASS	src/widgets/lv_dropdown.c	27;"	d	file:
MY_CLASS	src/widgets/lv_img.c	22;"	d	file:
MY_CLASS	src/widgets/lv_label.c	24;"	d	file:
MY_CLASS	src/widgets/lv_line.c	22;"	d	file:
MY_CLASS	src/widgets/lv_objx_templ.c	25;"	d	file:
MY_CLASS	src/widgets/lv_roller.c	21;"	d	file:
MY_CLASS	src/widgets/lv_slider.c	23;"	d	file:
MY_CLASS	src/widgets/lv_switch.c	27;"	d	file:
MY_CLASS	src/widgets/lv_table.c	23;"	d	file:
MY_CLASS	src/widgets/lv_textarea.c	25;"	d	file:
MY_CLASS_LABEL	src/widgets/lv_roller.c	22;"	d	file:
MY_CLASS_LIST	src/widgets/lv_dropdown.c	28;"	d	file:
NO_BREAK_FOUND	src/misc/lv_txt.c	20;"	d	file:
OBJEXT	tests/Makefile	/^OBJEXT ?= .o$/;"	m
OBJS	tests/Makefile	/^OBJS = $(AOBJS) $(COBJS)$/;"	m
OPTIMIZATION	tests/Makefile	/^OPTIMIZATION ?= -O3 -g0$/;"	m
OUTER_MASK_WIDTH	src/extra/widgets/colorwheel/lv_colorwheel.c	26;"	d	file:
OUTLINE_WIDTH	src/extra/themes/default/lv_theme_default.c	34;"	d	file:
PAD_DEF	src/extra/themes/basic/lv_theme_basic.c	25;"	d	file:
PAD_DEF	src/extra/themes/default/lv_theme_default.c	36;"	d	file:
PAD_DEF	src/extra/themes/mono/lv_theme_mono.c	28;"	d	file:
PAD_SMALL	src/extra/themes/default/lv_theme_default.c	37;"	d	file:
PAD_TINY	src/extra/themes/default/lv_theme_default.c	38;"	d	file:
PNG_DEBUG	tests/lv_test_assert.c	24;"	d	file:
PRINTF_DEFAULT_FLOAT_PRECISION	src/misc/lv_printf.c	73;"	d	file:
PRINTF_DISABLE_SUPPORT_FLOAT	src/misc/lv_printf.c	42;"	d	file:
PRINTF_FTOA_BUFFER_SIZE	src/misc/lv_printf.c	55;"	d	file:
PRINTF_MAX_FLOAT	src/misc/lv_printf.c	79;"	d	file:
PRINTF_NTOA_BUFFER_SIZE	src/misc/lv_printf.c	48;"	d	file:
PRINTF_SUPPORT_EXPONENTIAL	src/misc/lv_printf.c	67;"	d	file:
PRINTF_SUPPORT_FLOAT	src/misc/lv_printf.c	61;"	d	file:
PRINTF_SUPPORT_LONG_LONG	src/misc/lv_printf.c	85;"	d	file:
PRINTF_SUPPORT_PTRDIFF_T	src/misc/lv_printf.c	92;"	d	file:
PXP_AS_PIXEL_FORMAT	src/gpu/lv_gpu_nxp_pxp.c	56;"	d	file:
PXP_IRQHandler	src/gpu/lv_gpu_nxp_pxp_osa.c	/^void PXP_IRQHandler(void)$/;"	f
PXP_OUT_PIXEL_FORMAT	src/gpu/lv_gpu_nxp_pxp.c	55;"	d	file:
PXP_PS_PIXEL_FORMAT	src/gpu/lv_gpu_nxp_pxp.c	57;"	d	file:
RADIUS_DEFAULT	src/extra/themes/default/lv_theme_default.c	20;"	d	file:
REF_IMGS_PATH	tests/lv_test_assert.c	31;"	d	file:
REPEAT8	src/misc/lv_mem.c	72;"	d	file:
RLE_STATE_COUNTER	src/font/lv_font_fmt_txt.c	/^    RLE_STATE_COUNTER,$/;"	e	enum:__anon55	file:
RLE_STATE_REPEATE	src/font/lv_font_fmt_txt.c	/^    RLE_STATE_REPEATE,$/;"	e	enum:__anon55	file:
RLE_STATE_SINGLE	src/font/lv_font_fmt_txt.c	/^    RLE_STATE_SINGLE = 0,$/;"	e	enum:__anon55	file:
SCROLLBAR_MIN_SIZE	src/core/lv_obj_scroll.c	21;"	d	file:
SCROLL_ANIM_TIME_MAX	src/core/lv_obj_scroll.c	20;"	d	file:
SCROLL_ANIM_TIME_MIN	src/core/lv_obj_scroll.c	19;"	d	file:
SET32	src/misc/lv_mem.c	70;"	d	file:
SET8	src/misc/lv_mem.c	71;"	d	file:
SET_RTL_POS	src/misc/lv_bidi.c	24;"	d	file:
SHADOW_ENHANCE	src/draw/lv_draw_rect.c	21;"	d	file:
SHADOW_UPSCALE_SHIFT	src/draw/lv_draw_rect.c	20;"	d	file:
SL_INDEX_COUNT	src/misc/lv_tlsf.c	/^	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),$/;"	e	enum:tlsf_private	file:
SL_INDEX_COUNT	src/misc/lv_tlsf.c	/^tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);$/;"	v
SL_INDEX_COUNT_LOG2	src/misc/lv_tlsf.c	/^	SL_INDEX_COUNT_LOG2 = 5,$/;"	e	enum:tlsf_public	file:
SMALL_BLOCK_SIZE	src/misc/lv_tlsf.c	/^	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),$/;"	e	enum:tlsf_private	file:
SPLIT_ANGLE_GAP_LIMIT	src/draw/lv_draw_arc.c	20;"	d	file:
SPLIT_LIMIT	src/draw/lv_draw_rect.c	22;"	d	file:
SPLIT_RADIUS_LIMIT	src/draw/lv_draw_arc.c	19;"	d	file:
SRCS	tests/Makefile	/^SRCS = $(ASRCS) $(CSRCS) $(MAINSRC)$/;"	m
STYLE_TRANSITION_MAX	src/core/lv_obj.c	40;"	d	file:
SWAPPTR	src/extra/widgets/colorwheel/lv_colorwheel.c	589;"	d	file:
TIMER_TRACE	src/misc/lv_timer.c	42;"	d	file:
TIMER_TRACE	src/misc/lv_timer.c	44;"	d	file:
TLSF_64BIT	src/misc/lv_tlsf.c	48;"	d	file:
TLSF_FLS	src/misc/lv_tlsf.c	56;"	d	file:
TLSF_FLS	src/misc/lv_tlsf.c	58;"	d	file:
TLSF_FLS1	src/misc/lv_tlsf.c	66;"	d	file:
TLSF_FLS16	src/misc/lv_tlsf.c	62;"	d	file:
TLSF_FLS2	src/misc/lv_tlsf.c	65;"	d	file:
TLSF_FLS32	src/misc/lv_tlsf.c	61;"	d	file:
TLSF_FLS4	src/misc/lv_tlsf.c	64;"	d	file:
TLSF_FLS8	src/misc/lv_tlsf.c	63;"	d	file:
TLSF_LOG2_CEIL	src/misc/lv_tlsf.c	72;"	d	file:
TLSF_MAX_POOL_SIZE	src/misc/lv_tlsf.c	12;"	d	file:
TRACE_ANIM	src/misc/lv_anim.c	49;"	d	file:
TRACE_ANIM	src/misc/lv_anim.c	51;"	d	file:
TRACE_REFR	src/core/lv_refr.c	60;"	d	file:
TRACE_REFR	src/core/lv_refr.c	62;"	d	file:
TRANSITION_TIME	src/extra/themes/default/lv_theme_default.c	32;"	d	file:
VALUE_UNSET	src/widgets/lv_arc.c	23;"	d	file:
VER_RES	tests/lv_test_main.c	11;"	d	file:
VGLITE_PX_FMT	src/gpu/lv_gpu_nxp_vglite.c	53;"	d	file:
WARNINGS	tests/Makefile	/^WARNINGS = -Werror -Wall -Wextra \\$/;"	m
ZERO_MEM_SENTINEL	src/misc/lv_mem.c	37;"	d	file:
_CRT_SECURE_NO_WARNINGS	src/lv_conf_internal.h	1521;"	d
_DEBUG	src/misc/lv_tlsf.c	15;"	d	file:
_LV_BTNMATRIX_CTRL_RESERVED	src/widgets/lv_btnmatrix.h	/^    _LV_BTNMATRIX_CTRL_RESERVED  = 0x2000, \/**< Reserved for later use*\/$/;"	e	enum:__anon155
_LV_BTNMATRIX_WIDTH	src/widgets/lv_btnmatrix.h	/^    _LV_BTNMATRIX_WIDTH     = 0x0007,      \/**< Reserved to stire the size units*\/$/;"	e	enum:__anon155
_LV_CHART_AXIS_LAST	src/extra/widgets/chart/lv_chart.h	/^    _LV_CHART_AXIS_LAST$/;"	e	enum:__anon106
_LV_COLOR_HAS_MODERN_CPP	src/misc/lv_color.h	102;"	d
_LV_COLOR_HAS_MODERN_CPP	src/misc/lv_color.h	108;"	d
_LV_COLOR_HAS_MODERN_CPP	src/misc/lv_color.h	98;"	d
_LV_COLOR_MAKE_TYPE_HELPER	src/misc/lv_color.h	113;"	d
_LV_COLOR_MAKE_TYPE_HELPER	src/misc/lv_color.h	115;"	d
_LV_COLOR_ZERO_INITIALIZER	src/misc/lv_color.h	201;"	d
_LV_COLOR_ZERO_INITIALIZER1	src/misc/lv_color.h	132;"	d
_LV_COLOR_ZERO_INITIALIZER16	src/misc/lv_color.h	167;"	d
_LV_COLOR_ZERO_INITIALIZER16	src/misc/lv_color.h	170;"	d
_LV_COLOR_ZERO_INITIALIZER32	src/misc/lv_color.h	184;"	d
_LV_COLOR_ZERO_INITIALIZER8	src/misc/lv_color.h	145;"	d
_LV_CONCAT	src/misc/lv_types.h	77;"	d
_LV_CONCAT3	src/misc/lv_types.h	80;"	d
_LV_COORD_MAX_REDUCE	src/misc/lv_area.h	25;"	d
_LV_COORD_PLAIN	src/misc/lv_area.h	238;"	d
_LV_COORD_TYPE_MASK	src/misc/lv_area.h	237;"	d
_LV_COORD_TYPE_PX	src/misc/lv_area.h	240;"	d
_LV_COORD_TYPE_RESERVED	src/misc/lv_area.h	242;"	d
_LV_COORD_TYPE_SHIFT	src/misc/lv_area.h	236;"	d
_LV_COORD_TYPE_SPEC	src/misc/lv_area.h	241;"	d
_LV_DPX_CALC	src/hal/lv_hal.h	29;"	d
_LV_EVENT_LAST	src/core/lv_event.h	/^    _LV_EVENT_LAST                \/** Number of default events*\/$/;"	e	enum:__anon191
_LV_FLEX_COLUMN	src/extra/layouts/flex/lv_flex.h	26;"	d
_LV_FLEX_REVERSE	src/extra/layouts/flex/lv_flex.h	28;"	d
_LV_FLEX_WRAP	src/extra/layouts/flex/lv_flex.h	27;"	d
_LV_IMGBTN_STATE_NUM	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    _LV_IMGBTN_STATE_NUM,$/;"	e	enum:__anon102
_LV_LL_READ	src/misc/lv_ll.h	159;"	d
_LV_LL_READ_BACK	src/misc/lv_ll.h	161;"	d
_LV_LOG_LEVEL_NUM	src/misc/lv_log.h	31;"	d
_LV_MASK_BUF_MAX_SIZE	src/draw/lv_draw_mask.h	29;"	d
_LV_MASK_MAX_NUM	src/draw/lv_draw_mask.h	27;"	d
_LV_MASK_MAX_NUM	src/draw/lv_draw_mask.h	32;"	d
_LV_PALETTE_LAST	src/misc/lv_color.h	/^    _LV_PALETTE_LAST,$/;"	e	enum:__anon40
_LV_PRINTF_H_	src/misc/lv_printf.h	35;"	d
_LV_STR_SYMBOL_AUDIO	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_AUDIO,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BACKSPACE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BACKSPACE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BATTERY_1	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BATTERY_1,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BATTERY_2	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BATTERY_2,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BATTERY_3	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BATTERY_3,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BATTERY_EMPTY	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BATTERY_EMPTY,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BATTERY_FULL	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BATTERY_FULL,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BELL	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BELL,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BLUETOOTH	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BLUETOOTH,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_BULLET	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_BULLET,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_CALL	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_CALL,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_CHARGE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_CHARGE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_CLOSE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_CLOSE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_COPY	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_COPY,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_CUT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_CUT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_DIRECTORY	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_DIRECTORY,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_DOWN	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_DOWN,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_DOWNLOAD	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_DOWNLOAD,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_DRIVE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_DRIVE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_DUMMY	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_DUMMY,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_EDIT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_EDIT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_EJECT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_EJECT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_EYE_CLOSE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_EYE_CLOSE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_EYE_OPEN	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_EYE_OPEN,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_FILE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_FILE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_GPS	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_GPS,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_HOME	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_HOME,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_IMAGE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_IMAGE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_KEYBOARD	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_KEYBOARD,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_LEFT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_LEFT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_LIST	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_LIST,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_LOOP	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_LOOP,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_MINUS	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_MINUS,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_MUTE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_MUTE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_NEW_LINE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_NEW_LINE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_NEXT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_NEXT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_OK	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_OK,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_PASTE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_PASTE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_PAUSE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_PAUSE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_PLAY	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_PLAY,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_PLUS	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_PLUS,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_POWER	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_POWER,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_PREV	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_PREV,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_REFRESH	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_REFRESH,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_RIGHT	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_RIGHT,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_SAVE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_SAVE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_SD_CARD	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_SD_CARD,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_SETTINGS	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_SETTINGS,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_SHUFFLE	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_SHUFFLE,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_STOP	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_STOP,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_TRASH	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_TRASH,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_UP	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_UP,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_UPLOAD	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_UPLOAD,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_USB	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_USB,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_VIDEO	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_VIDEO,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_VOLUME_MAX	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_VOLUME_MAX,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_VOLUME_MID	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_VOLUME_MID,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_WARNING	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_WARNING,$/;"	e	enum:__anon54
_LV_STR_SYMBOL_WIFI	src/font/lv_symbol_def.h	/^    _LV_STR_SYMBOL_WIFI,$/;"	e	enum:__anon54
_LV_STYLE_LAST_BUILT_IN_PROP	src/misc/lv_style.h	/^    _LV_STYLE_LAST_BUILT_IN_PROP     = 111,$/;"	e	enum:__anon17
_LV_STYLE_STATE_CMP_DIFF_DRAW_PAD	src/core/lv_obj_style.h	/^    _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  \/*The differences can be shown with a simple redraw*\/$/;"	e	enum:__anon195
_LV_STYLE_STATE_CMP_DIFF_LAYOUT	src/core/lv_obj_style.h	/^    _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    \/*The differences can be shown with a simple redraw*\/$/;"	e	enum:__anon195
_LV_STYLE_STATE_CMP_DIFF_REDRAW	src/core/lv_obj_style.h	/^    _LV_STYLE_STATE_CMP_DIFF_REDRAW,    \/*The differences can be shown with a simple redraw*\/$/;"	e	enum:__anon195
_LV_STYLE_STATE_CMP_SAME	src/core/lv_obj_style.h	/^    _LV_STYLE_STATE_CMP_SAME,           \/*The style properties in the 2 states are identical*\/$/;"	e	enum:__anon195
_LV_TRANSFORM_TRIGO_SHIFT	src/draw/lv_img_buf.h	48;"	d
_LV_ZOOM_INV_UPSCALE	src/draw/lv_img_buf.h	49;"	d
__LV_TO_STR	src/lv_conf_internal.h	34;"	d
__LV_TO_STR	src/lv_conf_internal.h	37;"	d
__LV_TO_STR_AUX	src/lv_conf_internal.h	33;"	d
__LV_TO_STR_AUX	src/lv_conf_internal.h	36;"	d
_atoi	src/misc/lv_printf.c	/^static unsigned int _atoi(const char ** str)$/;"	f	file:
_etoa	src/misc/lv_printf.c	/^static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsigned int prec,$/;"	f	file:
_ftoa	src/misc/lv_printf.c	/^static size_t _ftoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsigned int prec,$/;"	f	file:
_is_digit	src/misc/lv_printf.c	/^static inline bool _is_digit(char ch)$/;"	f	file:
_keep_pedantic_happy	src/misc/lv_templ.c	/^typedef int _keep_pedantic_happy;$/;"	t	file:
_keep_pedantic_happy	tests/lv_test_core/lv_test_style.c	/^typedef int _keep_pedantic_happy;$/;"	t	file:
_keep_pedantic_happy	tests/lv_test_widgets/lv_test_label.c	/^typedef int _keep_pedantic_happy;$/;"	t	file:
_lv_anim_core_init	src/misc/lv_anim.c	/^void _lv_anim_core_init(void)$/;"	f
_lv_anim_t	src/misc/lv_anim.h	/^typedef struct _lv_anim_t {$/;"	s
_lv_anim_tmr	src/misc/lv_anim.c	/^static lv_timer_t * _lv_anim_tmr;$/;"	v	file:
_lv_area_intersect	src/misc/lv_area.c	/^bool _lv_area_intersect(lv_area_t * res_p, const lv_area_t * a1_p, const lv_area_t * a2_p)$/;"	f
_lv_area_is_in	src/misc/lv_area.c	/^bool _lv_area_is_in(const lv_area_t * ain_p, const lv_area_t * aholder_p, lv_coord_t radius)$/;"	f
_lv_area_is_on	src/misc/lv_area.c	/^bool _lv_area_is_on(const lv_area_t * a1_p, const lv_area_t * a2_p)$/;"	f
_lv_area_is_point_on	src/misc/lv_area.c	/^bool _lv_area_is_point_on(const lv_area_t * a_p, const lv_point_t * p_p, lv_coord_t radius)$/;"	f
_lv_area_join	src/misc/lv_area.c	/^void _lv_area_join(lv_area_t * a_res_p, const lv_area_t * a1_p, const lv_area_t * a2_p)$/;"	f
_lv_area_set_pos	src/misc/lv_area.c	/^void _lv_area_set_pos(lv_area_t * area_p, lv_coord_t x, lv_coord_t y)$/;"	f
_lv_async_info_t	src/misc/lv_async.c	/^typedef struct _lv_async_info_t {$/;"	s	file:
_lv_bar_anim_t	src/widgets/lv_bar.h	/^} _lv_bar_anim_t;$/;"	t	typeref:struct:__anon175
_lv_bidi_detect_base_dir	src/misc/lv_bidi.c	/^lv_base_dir_t _lv_bidi_detect_base_dir(const char * txt)$/;"	f
_lv_bidi_get_logical_pos	src/misc/lv_bidi.c	/^uint16_t _lv_bidi_get_logical_pos(const char * str_in, char ** bidi_txt, uint32_t len, lv_base_dir_t base_dir,$/;"	f
_lv_bidi_get_visual_pos	src/misc/lv_bidi.c	/^uint16_t _lv_bidi_get_visual_pos(const char * str_in, char ** bidi_txt, uint16_t len, lv_base_dir_t base_dir,$/;"	f
_lv_bidi_process	src/misc/lv_bidi.c	/^void _lv_bidi_process(const char * str_in, char * str_out, lv_base_dir_t base_dir)$/;"	f
_lv_bidi_process_paragraph	src/misc/lv_bidi.c	/^void _lv_bidi_process_paragraph(const char * str_in, char * str_out, uint32_t len, lv_base_dir_t base_dir,$/;"	f
_lv_blend_fill	src/draw/lv_draw_blend.c	/^LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,$/;"	f
_lv_blend_map	src/draw/lv_draw_blend.c	/^LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,$/;"	f
_lv_bpp1_opa_table	src/draw/lv_draw_label.c	/^const uint8_t _lv_bpp1_opa_table[2]  = {0, 255};          \/*Opacity mapping with bpp = 1 (Just for compatibility)*\/$/;"	v
_lv_bpp2_opa_table	src/draw/lv_draw_label.c	/^const uint8_t _lv_bpp2_opa_table[4]  = {0, 85, 170, 255}; \/*Opacity mapping with bpp = 2*\/$/;"	v
_lv_bpp3_opa_table	src/draw/lv_draw_label.c	/^const uint8_t _lv_bpp3_opa_table[8]  = {0, 36,  73, 109,   \/*Opacity mapping with bpp = 3*\/$/;"	v
_lv_bpp4_opa_table	src/draw/lv_draw_label.c	/^const uint8_t _lv_bpp4_opa_table[16] = {0,  17, 34,  51,  \/*Opacity mapping with bpp = 4*\/$/;"	v
_lv_bpp8_opa_table	src/draw/lv_draw_label.c	/^const uint8_t _lv_bpp8_opa_table[256] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,$/;"	v
_lv_color_filter_dsc_t	src/misc/lv_color.h	/^typedef struct _lv_color_filter_dsc_t {$/;"	s
_lv_disp_draw_buf_t	src/hal/lv_hal_disp.h	/^typedef struct _lv_disp_draw_buf_t{$/;"	s
_lv_disp_drv_t	src/hal/lv_hal_disp.h	/^typedef struct _lv_disp_drv_t {$/;"	s
_lv_disp_get_refr_timer	src/core/lv_disp.c	/^lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp)$/;"	f
_lv_disp_refr_timer	src/core/lv_refr.c	/^void _lv_disp_refr_timer(lv_timer_t * tmr)$/;"	f
_lv_disp_t	src/hal/lv_hal_disp.h	/^typedef struct _lv_disp_t {$/;"	s
_lv_draw_label_hint_t	src/draw/lv_draw_label.h	/^typedef struct _lv_draw_label_hint_t {$/;"	s
_lv_draw_mask_common_dsc_t	src/draw/lv_draw_mask.h	/^} _lv_draw_mask_common_dsc_t;$/;"	t	typeref:struct:__anon76
_lv_draw_mask_map_param_t	src/draw/lv_draw_mask.h	/^typedef struct _lv_draw_mask_map_param_t {$/;"	s
_lv_draw_mask_saved_arr_t	src/draw/lv_draw_mask.h	/^typedef _lv_draw_mask_saved_t _lv_draw_mask_saved_arr_t[_LV_MASK_MAX_NUM];$/;"	t
_lv_draw_mask_saved_t	src/draw/lv_draw_mask.h	/^} _lv_draw_mask_saved_t;$/;"	t	typeref:struct:__anon73
_lv_event_dsc_t	src/core/lv_event.c	/^typedef struct _lv_event_dsc_t{$/;"	s	file:
_lv_event_mark_deleted	src/core/lv_event.c	/^void _lv_event_mark_deleted(lv_obj_t * obj)$/;"	f
_lv_event_t	src/core/lv_event.h	/^typedef struct _lv_event_t {$/;"	s
_lv_font_clean_up_fmt_txt	src/font/lv_font_fmt_txt.c	/^void _lv_font_clean_up_fmt_txt(void)$/;"	f
_lv_font_t	src/font/lv_font.h	/^typedef struct _lv_font_t {$/;"	s
_lv_fs_drv_t	src/misc/lv_fs.h	/^typedef struct _lv_fs_drv_t {$/;"	s
_lv_fs_init	src/misc/lv_fs.c	/^void _lv_fs_init(void)$/;"	f
_lv_gc_clear_roots	src/misc/lv_gc.c	/^void _lv_gc_clear_roots(void)$/;"	f
_lv_gpu_nxp_pxp_interrupt_deinit	src/gpu/lv_gpu_nxp_pxp_osa.c	/^static void _lv_gpu_nxp_pxp_interrupt_deinit(void)$/;"	f	file:
_lv_gpu_nxp_pxp_interrupt_init	src/gpu/lv_gpu_nxp_pxp_osa.c	/^static lv_res_t _lv_gpu_nxp_pxp_interrupt_init(void)$/;"	f	file:
_lv_gpu_nxp_pxp_run	src/gpu/lv_gpu_nxp_pxp_osa.c	/^static void _lv_gpu_nxp_pxp_run(void)$/;"	f	file:
_lv_grid_calc_t	src/extra/layouts/grid/lv_grid.c	/^}_lv_grid_calc_t;$/;"	t	typeref:struct:__anon146	file:
_lv_group_init	src/core/lv_group.c	/^void _lv_group_init(void)$/;"	f
_lv_group_t	src/core/lv_group.h	/^typedef struct _lv_group_t {$/;"	s
_lv_img_buf_get_transformed_area	src/draw/lv_img_buf.c	/^void _lv_img_buf_get_transformed_area(lv_area_t * res, lv_coord_t w, lv_coord_t h, int16_t angle, uint16_t zoom,$/;"	f
_lv_img_buf_transform	src/draw/lv_img_buf.c	/^bool _lv_img_buf_transform(lv_img_transform_dsc_t * dsc, lv_coord_t x, lv_coord_t y)$/;"	f
_lv_img_buf_transform_anti_alias	src/draw/lv_img_buf.c	/^bool _lv_img_buf_transform_anti_alias(lv_img_transform_dsc_t * dsc)$/;"	f
_lv_img_buf_transform_init	src/draw/lv_img_buf.c	/^void _lv_img_buf_transform_init(lv_img_transform_dsc_t * dsc)$/;"	f
_lv_img_cache_entry_t	src/draw/lv_img_cache.h	/^} _lv_img_cache_entry_t;$/;"	t	typeref:struct:__anon88
_lv_img_cache_open	src/draw/lv_img_cache.c	/^_lv_img_cache_entry_t * _lv_img_cache_open(const void * src, lv_color_t color, int32_t frame_id)$/;"	f
_lv_img_decoder_dsc_t	src/draw/lv_img_decoder.h	/^typedef struct _lv_img_decoder_dsc_t {$/;"	s
_lv_img_decoder_init	src/draw/lv_img_decoder.c	/^void _lv_img_decoder_init(void)$/;"	f
_lv_img_decoder_t	src/draw/lv_img_decoder.h	/^typedef struct _lv_img_decoder_t {$/;"	s
_lv_indev_drv_t	src/hal/lv_hal_indev.h	/^typedef struct _lv_indev_drv_t {$/;"	s
_lv_indev_proc_t	src/hal/lv_hal_indev.h	/^typedef struct _lv_indev_proc_t {$/;"	s
_lv_indev_proc_t	src/hal/lv_hal_indev.h	/^} _lv_indev_proc_t;$/;"	t	typeref:struct:_lv_indev_proc_t
_lv_indev_read	src/hal/lv_hal_indev.c	/^void _lv_indev_read(lv_indev_t * indev, lv_indev_data_t * data)$/;"	f
_lv_indev_scroll_handler	src/core/lv_indev_scroll.c	/^void _lv_indev_scroll_handler(_lv_indev_proc_t * proc)$/;"	f
_lv_indev_scroll_throw_handler	src/core/lv_indev_scroll.c	/^void _lv_indev_scroll_throw_handler(_lv_indev_proc_t * proc)$/;"	f
_lv_indev_t	src/hal/lv_hal_indev.h	/^typedef struct _lv_indev_t {$/;"	s
_lv_inv_area	src/core/lv_refr.c	/^void _lv_inv_area(lv_disp_t * disp, const lv_area_t * area_p)$/;"	f
_lv_ll_chg_list	src/misc/lv_ll.c	/^void _lv_ll_chg_list(lv_ll_t * ll_ori_p, lv_ll_t * ll_new_p, void * node, bool head)$/;"	f
_lv_ll_clear	src/misc/lv_ll.c	/^void _lv_ll_clear(lv_ll_t * ll_p)$/;"	f
_lv_ll_get_head	src/misc/lv_ll.c	/^void * _lv_ll_get_head(const lv_ll_t * ll_p)$/;"	f
_lv_ll_get_len	src/misc/lv_ll.c	/^uint32_t _lv_ll_get_len(const lv_ll_t * ll_p)$/;"	f
_lv_ll_get_next	src/misc/lv_ll.c	/^void * _lv_ll_get_next(const lv_ll_t * ll_p, const void * n_act)$/;"	f
_lv_ll_get_prev	src/misc/lv_ll.c	/^void * _lv_ll_get_prev(const lv_ll_t * ll_p, const void * n_act)$/;"	f
_lv_ll_get_tail	src/misc/lv_ll.c	/^void * _lv_ll_get_tail(const lv_ll_t * ll_p)$/;"	f
_lv_ll_init	src/misc/lv_ll.c	/^void _lv_ll_init(lv_ll_t * ll_p, uint32_t node_size)$/;"	f
_lv_ll_ins_head	src/misc/lv_ll.c	/^void * _lv_ll_ins_head(lv_ll_t * ll_p)$/;"	f
_lv_ll_ins_prev	src/misc/lv_ll.c	/^void * _lv_ll_ins_prev(lv_ll_t * ll_p, void * n_act)$/;"	f
_lv_ll_ins_tail	src/misc/lv_ll.c	/^void * _lv_ll_ins_tail(lv_ll_t * ll_p)$/;"	f
_lv_ll_is_empty	src/misc/lv_ll.c	/^bool _lv_ll_is_empty(lv_ll_t * ll_p)$/;"	f
_lv_ll_move_before	src/misc/lv_ll.c	/^void _lv_ll_move_before(lv_ll_t * ll_p, void * n_act, void * n_after)$/;"	f
_lv_ll_remove	src/misc/lv_ll.c	/^void _lv_ll_remove(lv_ll_t * ll_p, void * node_p)$/;"	f
_lv_log_add	src/misc/lv_log.c	/^void _lv_log_add(lv_log_level_t level, const char * file, int line, const char * func, const char * format, ...)$/;"	f
_lv_log_add	src/misc/lv_log.h	119;"	d
_lv_obj_class_t	src/core/lv_obj_class.h	/^typedef struct _lv_obj_class_t {$/;"	s
_lv_obj_destructor	src/core/lv_obj_class.c	/^void _lv_obj_destructor(lv_obj_t * obj)$/;"	f
_lv_obj_get_ext_draw_size	src/core/lv_obj_draw.c	/^lv_coord_t _lv_obj_get_ext_draw_size(const lv_obj_t * obj)$/;"	f
_lv_obj_spec_attr_t	src/core/lv_obj.h	/^}_lv_obj_spec_attr_t;$/;"	t	typeref:struct:__anon186
_lv_obj_style_create_transition	src/core/lv_obj_style.c	/^void _lv_obj_style_create_transition(lv_obj_t * obj, lv_part_t part, lv_state_t prev_state, lv_state_t new_state, const _lv_obj_style_transition_dsc_t * tr_dsc)$/;"	f
_lv_obj_style_init	src/core/lv_obj_style.c	/^void _lv_obj_style_init(void)$/;"	f
_lv_obj_style_state_compare	src/core/lv_obj_style.c	/^_lv_style_state_cmp_t _lv_obj_style_state_compare(lv_obj_t * obj, lv_state_t state1, lv_state_t state2)$/;"	f
_lv_obj_style_t	src/core/lv_obj_style.h	/^}_lv_obj_style_t;$/;"	t	typeref:struct:__anon196
_lv_obj_style_transition_dsc_t	src/core/lv_obj_style.h	/^}_lv_obj_style_transition_dsc_t;$/;"	t	typeref:struct:__anon197
_lv_obj_t	src/core/lv_obj.h	/^typedef struct _lv_obj_t {$/;"	s
_lv_refr_get_disp_refreshing	src/core/lv_refr.c	/^lv_disp_t * _lv_refr_get_disp_refreshing(void)$/;"	f
_lv_refr_init	src/core/lv_refr.c	/^void _lv_refr_init(void)$/;"	f
_lv_refr_set_disp_refreshing	src/core/lv_refr.c	/^void _lv_refr_set_disp_refreshing(lv_disp_t * disp)$/;"	f
_lv_style_get_prop_group	src/misc/lv_style.c	/^uint8_t _lv_style_get_prop_group(lv_style_prop_t prop)$/;"	f
_lv_style_state_cmp_t	src/core/lv_obj_style.h	/^} _lv_style_state_cmp_t;$/;"	t	typeref:enum:__anon195
_lv_theme_t	src/core/lv_theme.h	/^typedef struct _lv_theme_t {$/;"	s
_lv_timer_core_init	src/misc/lv_timer.c	/^void _lv_timer_core_init(void)$/;"	f
_lv_timer_t	src/misc/lv_timer.h	/^typedef struct _lv_timer_t {$/;"	s
_lv_txt_ap_calc_bytes_cnt	src/misc/lv_txt_ap.c	/^uint32_t _lv_txt_ap_calc_bytes_cnt(const char * txt)$/;"	f
_lv_txt_ap_proc	src/misc/lv_txt_ap.c	/^void _lv_txt_ap_proc(const char * txt, char * txt_out)$/;"	f
_lv_txt_cut	src/misc/lv_txt.c	/^void _lv_txt_cut(char * txt, uint32_t pos, uint32_t len)$/;"	f
_lv_txt_encoded_conv_wc	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_iso8859_1_conv_wc;$/;"	v
_lv_txt_encoded_conv_wc	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_utf8_conv_wc;$/;"	v
_lv_txt_encoded_get_byte_id	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_iso8859_1_get_byte_id;$/;"	v
_lv_txt_encoded_get_byte_id	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_utf8_get_byte_id;$/;"	v
_lv_txt_encoded_get_char_id	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t)     = lv_txt_iso8859_1_get_char_id;$/;"	v
_lv_txt_encoded_get_char_id	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t) = lv_txt_utf8_get_char_id;$/;"	v
_lv_txt_encoded_letter_next_2	src/misc/lv_txt.c	/^void _lv_txt_encoded_letter_next_2(const char * txt, uint32_t * letter, uint32_t * letter_next, uint32_t *ofs)$/;"	f
_lv_txt_encoded_next	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_iso8859_1_next;$/;"	v
_lv_txt_encoded_next	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_utf8_next;$/;"	v
_lv_txt_encoded_prev	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_iso8859_1_prev;$/;"	v
_lv_txt_encoded_prev	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_utf8_prev;$/;"	v
_lv_txt_encoded_size	src/misc/lv_txt.c	/^    uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_iso8859_1_size;$/;"	v
_lv_txt_encoded_size	src/misc/lv_txt.c	/^    uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_utf8_size;$/;"	v
_lv_txt_get_encoded_length	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_iso8859_1_get_length;$/;"	v
_lv_txt_get_encoded_length	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_utf8_get_length;$/;"	v
_lv_txt_get_next_line	src/misc/lv_txt.c	/^uint32_t _lv_txt_get_next_line(const char * txt, const lv_font_t * font,$/;"	f
_lv_txt_ins	src/misc/lv_txt.c	/^void _lv_txt_ins(char * txt_buf, uint32_t pos, const char * ins_txt)$/;"	f
_lv_txt_is_cmd	src/misc/lv_txt.c	/^bool _lv_txt_is_cmd(lv_text_cmd_state_t * state, uint32_t c)$/;"	f
_lv_txt_set_text_vfmt	src/misc/lv_txt.c	/^char * _lv_txt_set_text_vfmt(const char * fmt, va_list ap)$/;"	f
_lv_txt_unicode_to_encoded	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_iso8859_1;$/;"	v
_lv_txt_unicode_to_encoded	src/misc/lv_txt.c	/^    uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_utf8;$/;"	v
_lv_utils_bsearch	src/misc/lv_utils.c	/^void * _lv_utils_bsearch(const void * key, const void * base, uint32_t n, uint32_t size,$/;"	f
_ntoa_format	src/misc/lv_printf.c	/^static size_t _ntoa_format(out_fct_type out, char * buffer, size_t idx, size_t maxlen, char * buf, size_t len,$/;"	f	file:
_ntoa_long	src/misc/lv_printf.c	/^static size_t _ntoa_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long value, bool negative,$/;"	f	file:
_ntoa_long_long	src/misc/lv_printf.c	/^static size_t _ntoa_long_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long long value,$/;"	f	file:
_out_buffer	src/misc/lv_printf.c	/^static inline void _out_buffer(char character, void * buffer, size_t idx, size_t maxlen)$/;"	f	file:
_out_null	src/misc/lv_printf.c	/^static inline void _out_null(char character, void * buffer, size_t idx, size_t maxlen)$/;"	f	file:
_out_rev	src/misc/lv_printf.c	/^static size_t _out_rev(out_fct_type out, char * buffer, size_t idx, size_t maxlen, const char * buf, size_t len,$/;"	f	file:
_snippet_stack	src/extra/widgets/span/lv_span.c	/^struct _snippet_stack {$/;"	s	file:
_strnlen_s	src/misc/lv_printf.c	/^static inline unsigned int _strnlen_s(const char * str, size_t maxsize)$/;"	f	file:
_tlsf_glue	src/misc/lv_tlsf.c	293;"	d	file:
_tlsf_glue2	src/misc/lv_tlsf.c	292;"	d	file:
_vsnprintf	src/misc/lv_printf.c	/^static int _vsnprintf(out_fct_type out, char * buffer, const size_t maxlen, const char * format, va_list va)$/;"	f	file:
accepted_chars	src/widgets/lv_textarea.h	/^    const char * accepted_chars; \/*Only these characters will be accepted. NULL: accept all*\/$/;"	m	struct:__anon160
act_cf	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    lv_img_cf_t act_cf; \/*Color format of the currently active image*\/$/;"	m	struct:__anon103
act_obj	src/hal/lv_hal_indev.h	/^            struct _lv_obj_t * act_obj;      \/*The object being pressed*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94	typeref:struct:_lv_indev_proc_t::__anon93::__anon94::_lv_obj_t
act_point	src/hal/lv_hal_indev.h	/^            lv_point_t act_point; \/**< Current point of input device.*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
act_scr	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t * act_scr;     \/**< Currently active screen on this display*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
act_time	src/misc/lv_anim.h	/^    int32_t act_time;            \/**< Current time in animation. Set to negative to make delay.*\/$/;"	m	struct:_lv_anim_t
add_data	examples/widgets/chart/lv_example_chart_2.c	/^static void add_data(lv_timer_t * timer)$/;"	f	file:
add_data	examples/widgets/chart/lv_example_chart_7.c	/^static void add_data(lv_timer_t * timer)$/;"	f	file:
adjust_request_size	src/misc/lv_tlsf.c	/^static size_t adjust_request_size(size_t size, size_t align)$/;"	f	file:
adv_w	src/font/lv_font.h	/^    uint16_t adv_w; \/**< The glyph needs this space. Draw the next glyph after this width.*\/$/;"	m	struct:__anon56
adv_w	src/font/lv_font_fmt_txt.h	/^    uint32_t adv_w : 12;            \/**< Draw the next glyph after this width. 8.4 format (real_value * 16 is stored).*\/$/;"	m	struct:__anon46
advance_width_bits	src/font/lv_font_loader.c	/^    uint8_t advance_width_bits;$/;"	m	struct:font_header_bin	file:
advance_width_format	src/font/lv_font_loader.c	/^    uint8_t advance_width_format;$/;"	m	struct:font_header_bin	file:
align	src/draw/lv_draw_label.h	/^    lv_text_align_t align :2;$/;"	m	struct:__anon58
align	src/extra/widgets/span/lv_span.h	/^    uint8_t align : 2;$/;"	m	struct:__anon135
align_down	src/misc/lv_tlsf.c	/^static size_t align_down(size_t x, size_t align)$/;"	f	file:
align_ptr	src/misc/lv_tlsf.c	/^static void* align_ptr(const void* ptr, size_t align)$/;"	f	file:
align_up	src/misc/lv_tlsf.c	/^static size_t align_up(size_t x, size_t align)$/;"	f	file:
allocate_btn_areas_and_controls	src/widgets/lv_btnmatrix.c	/^static void allocate_btn_areas_and_controls(const lv_obj_t * obj, const char ** map)$/;"	f	file:
alpha	src/misc/lv_color.h	/^        uint8_t alpha;$/;"	m	struct:__anon37::__anon38
always_zero	src/draw/lv_img_buf.h	/^    uint32_t always_zero : 3; \/*It the upper bits of the first byte. Always zero to look like a$/;"	m	struct:__anon63
always_zero	src/draw/lv_img_buf.h	/^    uint32_t always_zero : 3; \/*It the upper bits of the first byte. Always zero to look like a$/;"	m	struct:__anon64
ancestor	src/widgets/lv_objx_templ.h	/^    lv_ANCESTOR_t ancestor; \/*The ancestor widget, e.g. lv_slider_t slider*\/$/;"	m	struct:__anon164
angle	src/draw/lv_draw_img.h	/^    uint16_t angle;$/;"	m	struct:__anon87
angle	src/draw/lv_img_buf.h	/^        int16_t angle;              \/*angle to rotate*\/$/;"	m	struct:__anon66::__anon67
angle	src/widgets/lv_img.h	/^    uint16_t angle;    \/*rotation angle of the image*\/$/;"	m	struct:__anon177
angle_range	src/extra/widgets/meter/lv_meter.h	/^    uint16_t angle_range;$/;"	m	struct:__anon123
angle_to_mode_color_fast	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static lv_color_t angle_to_mode_color_fast(lv_obj_t * obj, uint16_t angle)$/;"	f	file:
anim	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t anim;$/;"	m	struct:__anon98	file:
anim	src/extra/widgets/animimg/lv_animimg.h	/^    lv_anim_t anim;$/;"	m	struct:__anon118
anim_end	src/widgets/lv_bar.h	/^    int32_t anim_end;$/;"	m	struct:__anon175
anim_imgs	examples/widgets/animimg/lv_example_animimg_1.c	/^static const lv_img_dsc_t* anim_imgs[3] = {$/;"	v	file:
anim_list_changed	src/misc/lv_anim.c	/^static bool anim_list_changed;$/;"	v	file:
anim_mark_list_change	src/misc/lv_anim.c	/^static void anim_mark_list_change(void)$/;"	f	file:
anim_ready_handler	src/misc/lv_anim.c	/^static void anim_ready_handler(lv_anim_t * a)$/;"	f	file:
anim_run_round	src/misc/lv_anim.c	/^static bool anim_run_round;$/;"	v	file:
anim_size_cb	examples/anim/lv_example_anim_2.c	/^static void anim_size_cb(void * var, int32_t v)$/;"	f	file:
anim_start	src/widgets/lv_bar.h	/^    int32_t anim_start;$/;"	m	struct:__anon175
anim_state	src/widgets/lv_bar.h	/^    int32_t anim_state;$/;"	m	struct:__anon175
anim_timer	src/misc/lv_anim.c	/^static void anim_timer(lv_timer_t * param)$/;"	f	file:
anim_x_cb	examples/anim/lv_example_anim_1.c	/^static void anim_x_cb(void * var, int32_t v)$/;"	f	file:
anim_x_cb	examples/anim/lv_example_anim_2.c	/^static void anim_x_cb(void * var, int32_t v)$/;"	f	file:
animimg001	examples/assets/animimg001.c	/^const lv_img_dsc_t animimg001 = {$/;"	v
animimg001_map	examples/assets/animimg001.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t animimg001_map[] = {$/;"	v
animimg002	examples/assets/animimg002.c	/^const lv_img_dsc_t animimg002 = {$/;"	v
animimg002_map	examples/assets/animimg002.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t animimg002_map[] = {$/;"	v
animimg003	examples/assets/animimg003.c	/^const lv_img_dsc_t animimg003 = {$/;"	v
animimg003_map	examples/assets/animimg003.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t animimg003_map[] = {$/;"	v
antialias	src/draw/lv_draw_img.h	/^    uint8_t antialias       : 1;$/;"	m	struct:__anon87
antialias	src/draw/lv_img_buf.h	/^        bool antialias;$/;"	m	struct:__anon66::__anon67
antialias	src/widgets/lv_img.h	/^    uint8_t antialias : 1; \/*Apply anti-aliasing in transformations (rotate, zoom)*\/$/;"	m	struct:__anon177
antialiasing	src/hal/lv_hal_disp.h	/^    uint32_t antialiasing : 1;       \/**< 1: anti-aliasing is enabled on this display.*\/$/;"	m	struct:_lv_disp_drv_t
ap_chars_conjunction	src/misc/lv_txt_ap.c	/^    } ap_chars_conjunction;$/;"	m	struct:__anon1	typeref:struct:__anon1::__anon2	file:
ap_chars_map	src/misc/lv_txt_ap.c	/^const ap_chars_map_t ap_chars_map[] = {$/;"	v
ap_chars_map_t	src/misc/lv_txt_ap.c	/^} ap_chars_map_t;$/;"	t	typeref:struct:__anon1	file:
apply_cb	src/core/lv_theme.h	/^    lv_theme_apply_cb_t apply_cb;$/;"	m	struct:_lv_theme_t
apply_color_filter	src/core/lv_obj_style.c	/^static lv_style_value_t apply_color_filter(const lv_obj_t * obj, uint32_t part, lv_style_value_t v)$/;"	f	file:
apply_theme	src/core/lv_theme.c	/^static void apply_theme(lv_theme_t * th, lv_obj_t * obj)$/;"	f	file:
arc	src/extra/widgets/meter/lv_meter.h	/^        }arc;$/;"	m	union:__anon125::__anon126	typeref:struct:__anon125::__anon126::__anon129
arc_anim_end_angle	src/extra/widgets/spinner/lv_spinner.c	/^static void arc_anim_end_angle(void * obj, int32_t v)$/;"	f	file:
arc_anim_start_angle	src/extra/widgets/spinner/lv_spinner.c	/^static void arc_anim_start_angle(void * obj, int32_t v)$/;"	f	file:
arc_dsc	src/core/lv_obj_draw.h	/^    lv_draw_arc_dsc_t *  arc_dsc;       \/**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for arc-like parts*\/$/;"	m	struct:__anon199
arc_indic	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t arc_indic;$/;"	m	struct:__anon98	file:
arc_indic_primary	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t arc_indic_primary;$/;"	m	struct:__anon98	file:
area	src/core/lv_event.h	/^    const lv_area_t * area;$/;"	m	struct:__anon193
area	src/hal/lv_hal_disp.h	/^    lv_area_t area;$/;"	m	struct:_lv_disp_draw_buf_t
area	src/widgets/lv_textarea.h	/^        lv_area_t area;            \/*Cursor area relative to the Text Area*\/$/;"	m	struct:__anon160::__anon161
arg	src/misc/lv_printf.c	/^    void * arg;$/;"	m	struct:__anon3	file:
ascent	src/font/lv_font_loader.c	/^    uint16_t ascent;$/;"	m	struct:font_header_bin	file:
bar	src/widgets/lv_bar.h	/^    lv_obj_t * bar;$/;"	m	struct:__anon175
bar	src/widgets/lv_slider.h	/^    lv_bar_t bar;       \/*Add the ancestor's type first*\/$/;"	m	struct:__anon158
base	src/extra/themes/default/lv_theme_default.c	/^    lv_theme_t base;$/;"	m	struct:__anon99	file:
base_class	src/core/lv_obj_class.h	/^    const struct _lv_obj_class_t * base_class;$/;"	m	struct:_lv_obj_class_t	typeref:struct:_lv_obj_class_t::_lv_obj_class_t
base_line	src/font/lv_font.h	/^    lv_coord_t base_line;           \/**< Base line measured from the top of the line_height*\/$/;"	m	struct:_lv_font_t
bg_angle_end	src/widgets/lv_arc.h	/^    uint16_t bg_angle_end;$/;"	m	struct:__anon166
bg_angle_start	src/widgets/lv_arc.h	/^    uint16_t bg_angle_start;$/;"	m	struct:__anon166
bg_color	src/draw/lv_draw_rect.h	/^    lv_color_t bg_color;$/;"	m	struct:__anon86
bg_color	src/hal/lv_hal_disp.h	/^    lv_color_t bg_color;            \/**< Default display color when screens are transparent*\/$/;"	m	struct:_lv_disp_t
bg_color_grey	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_grey;$/;"	m	struct:__anon98	file:
bg_color_primary	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_primary;$/;"	m	struct:__anon98	file:
bg_color_primary_muted	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_primary_muted;$/;"	m	struct:__anon98	file:
bg_color_secondary	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_secondary;$/;"	m	struct:__anon98	file:
bg_color_secondary_muted	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_secondary_muted;$/;"	m	struct:__anon98	file:
bg_color_white	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t bg_color_white;$/;"	m	struct:__anon98	file:
bg_grad_color	src/draw/lv_draw_rect.h	/^    lv_color_t bg_grad_color;$/;"	m	struct:__anon86
bg_grad_color_stop	src/draw/lv_draw_rect.h	/^    uint8_t bg_grad_color_stop;$/;"	m	struct:__anon86
bg_grad_dir	src/draw/lv_draw_rect.h	/^    lv_grad_dir_t bg_grad_dir :3;$/;"	m	struct:__anon86
bg_img	src/hal/lv_hal_disp.h	/^    const void * bg_img;            \/**< An image source to display as wallpaper*\/$/;"	m	struct:_lv_disp_t
bg_img_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t bg_img_opa;$/;"	m	struct:__anon86
bg_img_recolor	src/draw/lv_draw_rect.h	/^    lv_color_t bg_img_recolor;$/;"	m	struct:__anon86
bg_img_recolor_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t bg_img_recolor_opa;$/;"	m	struct:__anon86
bg_img_src	src/draw/lv_draw_rect.h	/^    const void * bg_img_src;$/;"	m	struct:__anon86
bg_img_symbol_font	src/draw/lv_draw_rect.h	/^    const void * bg_img_symbol_font;$/;"	m	struct:__anon86
bg_img_tiled	src/draw/lv_draw_rect.h	/^    uint8_t bg_img_tiled;$/;"	m	struct:__anon86
bg_main_color_stop	src/draw/lv_draw_rect.h	/^    uint8_t bg_main_color_stop;$/;"	m	struct:__anon86
bg_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t bg_opa;$/;"	m	struct:__anon86
bg_opa	src/hal/lv_hal_disp.h	/^    lv_opa_t bg_opa;                \/**<Opacity of the background color or wallpaper*\/$/;"	m	struct:_lv_disp_t
bidi_dir	src/draw/lv_draw_label.h	/^    lv_base_dir_t bidi_dir;$/;"	m	struct:__anon58
bit_depth	tests/lv_test_assert.c	/^    png_byte bit_depth;$/;"	m	struct:__anon201	file:
bit_iterator_t	src/font/lv_font_loader.c	/^} bit_iterator_t;$/;"	t	typeref:struct:__anon45	file:
bit_pos	src/font/lv_font_loader.c	/^    int8_t bit_pos;$/;"	m	struct:__anon45	file:
bitmap_format	src/font/lv_font_fmt_txt.h	/^    uint16_t bitmap_format  : 2;$/;"	m	struct:__anon53
bitmap_index	src/font/lv_font_fmt_txt.h	/^    uint32_t bitmap_index : 20;     \/**< Start index of the bitmap. A font can be max 1 MB.*\/$/;"	m	struct:__anon46
bits_per_pixel	src/font/lv_font_loader.c	/^    uint8_t bits_per_pixel;$/;"	m	struct:font_header_bin	file:
bits_write	src/font/lv_font_fmt_txt.c	/^static inline void bits_write(uint8_t * out, uint32_t bit_pos, uint8_t val, uint8_t len)$/;"	f	file:
blend_mode	src/draw/lv_draw_arc.h	/^    lv_blend_mode_t blend_mode  : 2;$/;"	m	struct:__anon61
blend_mode	src/draw/lv_draw_img.h	/^    lv_blend_mode_t blend_mode : 4;$/;"	m	struct:__anon87
blend_mode	src/draw/lv_draw_label.h	/^    lv_blend_mode_t blend_mode: 3;$/;"	m	struct:__anon58
blend_mode	src/draw/lv_draw_line.h	/^    lv_blend_mode_t blend_mode  : 2;$/;"	m	struct:__anon71
blend_mode	src/draw/lv_draw_rect.h	/^    lv_blend_mode_t blend_mode;$/;"	m	struct:__anon86
block_absorb	src/misc/lv_tlsf.c	/^static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)$/;"	f	file:
block_can_split	src/misc/lv_tlsf.c	/^static int block_can_split(block_header_t* block, size_t size)$/;"	f	file:
block_from_ptr	src/misc/lv_tlsf.c	/^static block_header_t* block_from_ptr(const void* ptr)$/;"	f	file:
block_header_free_bit	src/misc/lv_tlsf.c	/^static const size_t block_header_free_bit = 1 << 0;$/;"	v	file:
block_header_overhead	src/misc/lv_tlsf.c	/^static const size_t block_header_overhead = sizeof(size_t);$/;"	v	file:
block_header_prev_free_bit	src/misc/lv_tlsf.c	/^static const size_t block_header_prev_free_bit = 1 << 1;$/;"	v	file:
block_header_t	src/misc/lv_tlsf.c	/^typedef struct block_header_t$/;"	s	file:
block_header_t	src/misc/lv_tlsf.c	/^} block_header_t;$/;"	t	typeref:struct:block_header_t	file:
block_insert	src/misc/lv_tlsf.c	/^static void block_insert(control_t* control, block_header_t* block)$/;"	f	file:
block_is_free	src/misc/lv_tlsf.c	/^static int block_is_free(const block_header_t* block)$/;"	f	file:
block_is_last	src/misc/lv_tlsf.c	/^static int block_is_last(const block_header_t* block)$/;"	f	file:
block_is_prev_free	src/misc/lv_tlsf.c	/^static int block_is_prev_free(const block_header_t* block)$/;"	f	file:
block_link_next	src/misc/lv_tlsf.c	/^static block_header_t* block_link_next(block_header_t* block)$/;"	f	file:
block_locate_free	src/misc/lv_tlsf.c	/^static block_header_t* block_locate_free(control_t* control, size_t size)$/;"	f	file:
block_mark_as_free	src/misc/lv_tlsf.c	/^static void block_mark_as_free(block_header_t* block)$/;"	f	file:
block_mark_as_used	src/misc/lv_tlsf.c	/^static void block_mark_as_used(block_header_t* block)$/;"	f	file:
block_merge_next	src/misc/lv_tlsf.c	/^static block_header_t* block_merge_next(control_t* control, block_header_t* block)$/;"	f	file:
block_merge_prev	src/misc/lv_tlsf.c	/^static block_header_t* block_merge_prev(control_t* control, block_header_t* block)$/;"	f	file:
block_next	src/misc/lv_tlsf.c	/^static block_header_t* block_next(const block_header_t* block)$/;"	f	file:
block_null	src/misc/lv_tlsf.c	/^	block_header_t block_null;$/;"	m	struct:control_t	file:
block_prepare_used	src/misc/lv_tlsf.c	/^static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)$/;"	f	file:
block_prev	src/misc/lv_tlsf.c	/^static block_header_t* block_prev(const block_header_t* block)$/;"	f	file:
block_remove	src/misc/lv_tlsf.c	/^static void block_remove(control_t* control, block_header_t* block)$/;"	f	file:
block_set_free	src/misc/lv_tlsf.c	/^static void block_set_free(block_header_t* block)$/;"	f	file:
block_set_prev_free	src/misc/lv_tlsf.c	/^static void block_set_prev_free(block_header_t* block)$/;"	f	file:
block_set_prev_used	src/misc/lv_tlsf.c	/^static void block_set_prev_used(block_header_t* block)$/;"	f	file:
block_set_size	src/misc/lv_tlsf.c	/^static void block_set_size(block_header_t* block, size_t size)$/;"	f	file:
block_set_used	src/misc/lv_tlsf.c	/^static void block_set_used(block_header_t* block)$/;"	f	file:
block_size	src/misc/lv_tlsf.c	/^static size_t block_size(const block_header_t* block)$/;"	f	file:
block_size_max	src/misc/lv_tlsf.c	/^static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;$/;"	v	file:
block_size_min	src/misc/lv_tlsf.c	/^static const size_t block_size_min = $/;"	v	file:
block_split	src/misc/lv_tlsf.c	/^static block_header_t* block_split(block_header_t* block, size_t size)$/;"	f	file:
block_start_offset	src/misc/lv_tlsf.c	/^static const size_t block_start_offset =$/;"	v	file:
block_to_ptr	src/misc/lv_tlsf.c	/^static void* block_to_ptr(const block_header_t* block)$/;"	f	file:
block_trim_free	src/misc/lv_tlsf.c	/^static void block_trim_free(control_t* control, block_header_t* block, size_t size)$/;"	f	file:
block_trim_free_leading	src/misc/lv_tlsf.c	/^static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t size)$/;"	f	file:
block_trim_used	src/misc/lv_tlsf.c	/^static void block_trim_used(control_t* control, block_header_t* block, size_t size)$/;"	f	file:
blocks	src/misc/lv_tlsf.c	/^	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];$/;"	m	struct:control_t	file:
blue	src/misc/lv_color.h	/^        uint16_t blue : 5;$/;"	m	struct:__anon35::__anon36
blue	src/misc/lv_color.h	/^        uint8_t blue : 2;$/;"	m	struct:__anon33::__anon34
blue	src/misc/lv_color.h	/^        uint8_t blue;$/;"	m	struct:__anon37::__anon38
blue_slider	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;$/;"	v	file:
border_color	src/draw/lv_draw_rect.h	/^    lv_color_t border_color;$/;"	m	struct:__anon86
border_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t border_opa;$/;"	m	struct:__anon86
border_post	src/draw/lv_draw_rect.h	/^    uint8_t border_post : 1;        \/*There is a border it will be drawn later.*\/$/;"	m	struct:__anon86
border_side	src/draw/lv_draw_rect.h	/^    lv_border_side_t border_side :5;$/;"	m	struct:__anon86
border_width	src/draw/lv_draw_rect.h	/^    lv_coord_t border_width;$/;"	m	struct:__anon86
box_h	src/font/lv_font.h	/^    uint16_t box_h;  \/**< Height of the glyph's bounding box*\/$/;"	m	struct:__anon56
box_h	src/font/lv_font_fmt_txt.h	/^    uint8_t box_h;                  \/**< Height of the glyph's bounding box*\/$/;"	m	struct:__anon46
box_w	src/font/lv_font.h	/^    uint16_t box_w;  \/**< Width of the glyph's bounding box*\/$/;"	m	struct:__anon56
box_w	src/font/lv_font_fmt_txt.h	/^    uint8_t box_w;                  \/**< Width of the glyph's bounding box*\/$/;"	m	struct:__anon46
bpp	src/font/lv_font.h	/^    uint8_t bpp;   \/**< Bit-per-pixel: 1, 2, 4, 8*\/$/;"	m	struct:__anon56
bpp	src/font/lv_font_fmt_txt.h	/^    uint16_t bpp            : 4;$/;"	m	struct:__anon53
br_stack	src/misc/lv_bidi.c	/^static bracket_stack_t br_stack[LV_BIDI_BRACKLET_DEPTH];$/;"	v	file:
br_stack_p	src/misc/lv_bidi.c	/^static uint8_t br_stack_p;$/;"	v	file:
bracket_left	src/misc/lv_bidi.c	/^static const uint8_t bracket_left[] = {"<({["};$/;"	v	file:
bracket_process	src/misc/lv_bidi.c	/^static lv_base_dir_t bracket_process(const char * txt, uint32_t next_pos, uint32_t len, uint32_t letter,$/;"	f	file:
bracket_right	src/misc/lv_bidi.c	/^static const uint8_t bracket_right[] = {">)}]"};$/;"	v	file:
bracket_stack_t	src/misc/lv_bidi.c	/^} bracket_stack_t;$/;"	t	typeref:struct:__anon4	file:
bracklet_pos	src/misc/lv_bidi.c	/^    uint32_t bracklet_pos;$/;"	m	struct:__anon4	file:
bright	src/extra/widgets/led/lv_led.h	/^    uint8_t bright;     \/**< Current brightness of the LED (0..255)*\/$/;"	m	struct:__anon122
btn	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t btn;$/;"	m	struct:__anon98	file:
btn	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t btn;$/;"	m	struct:__anon101	file:
btn_cnt	examples/scroll/lv_example_scroll_3.c	/^static uint32_t btn_cnt = 1;$/;"	v	file:
btn_cnt	src/widgets/lv_btnmatrix.h	/^    uint16_t btn_cnt;                                 \/*Number of button in 'map_p'(Handled by the library)*\/$/;"	m	struct:__anon156
btn_event_cb	examples/get_started/lv_example_get_started_1.c	/^static void btn_event_cb(lv_event_t * e)$/;"	f	file:
btn_id	src/hal/lv_hal_indev.h	/^    uint32_t btn_id;  \/**< For LV_INDEV_TYPE_BUTTON the currently pressed button*\/$/;"	m	struct:__anon92
btn_id_sel	src/widgets/lv_btnmatrix.h	/^    uint16_t btn_id_sel;    \/*Index of the active button (being pressed\/released etc) or LV_BTNMATRIX_BTN_NONE*\/$/;"	m	struct:__anon156
btn_points	src/hal/lv_hal_indev.h	/^    const lv_point_t * btn_points; \/**< Array points assigned to the button ()screen will be pressed$/;"	m	struct:_lv_indev_t
btnm	src/extra/widgets/calendar/lv_calendar.h	/^    lv_btnmatrix_t btnm;$/;"	m	struct:__anon121
btnm	src/extra/widgets/keyboard/lv_keyboard.h	/^    lv_btnmatrix_t btnm;$/;"	m	struct:__anon138
btnm_event_handler	examples/widgets/textarea/lv_example_textarea_1.c	/^static void btnm_event_handler(lv_event_t * e)$/;"	f	file:
btnm_map	examples/widgets/btnmatrix/lv_example_btnmatrix_1.c	/^static const char * btnm_map[] = {"1", "2", "3", "4", "5", "\\n",$/;"	v	file:
btns_value_changed_event_cb	src/extra/widgets/tabview/lv_tabview.c	/^static void btns_value_changed_event_cb(lv_event_t * e)$/;"	f	file:
buf1	src/hal/lv_hal_disp.h	/^    void * buf1; \/**< First display buffer.*\/$/;"	m	struct:_lv_disp_draw_buf_t
buf2	src/hal/lv_hal_disp.h	/^    void * buf2; \/**< Second display buffer.*\/$/;"	m	struct:_lv_disp_draw_buf_t
buf_act	src/hal/lv_hal_disp.h	/^    void * buf_act;$/;"	m	struct:_lv_disp_draw_buf_t
button_areas	src/widgets/lv_btnmatrix.h	/^    lv_area_t * button_areas;                         \/*Array of areas of buttons*\/$/;"	m	struct:__anon156
button_get_checked	src/widgets/lv_btnmatrix.c	/^static bool button_get_checked(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_get_pressed_id	examples/porting/lv_port_indev_template.c	/^static int8_t button_get_pressed_id(void)$/;"	f	file:
button_init	examples/porting/lv_port_indev_template.c	/^static void button_init(void)$/;"	f	file:
button_is_checkable	src/widgets/lv_btnmatrix.c	/^static bool button_is_checkable(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_checked	src/widgets/lv_btnmatrix.c	/^static bool button_is_checked(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_click_trig	src/widgets/lv_btnmatrix.c	/^static bool button_is_click_trig(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_hidden	src/widgets/lv_btnmatrix.c	/^static bool button_is_hidden(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_inactive	src/widgets/lv_btnmatrix.c	/^static bool button_is_inactive(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_pressed	examples/porting/lv_port_indev_template.c	/^static bool button_is_pressed(uint8_t id)$/;"	f	file:
button_is_recolor	src/widgets/lv_btnmatrix.c	/^static bool button_is_recolor(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_is_repeat_disabled	src/widgets/lv_btnmatrix.c	/^static bool button_is_repeat_disabled(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
button_read	examples/porting/lv_port_indev_template.c	/^static void button_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)$/;"	f	file:
byte_value	src/font/lv_font_loader.c	/^    uint8_t byte_value;$/;"	m	struct:__anon45	file:
bytes	src/extra/widgets/span/lv_span.c	/^    uint16_t   bytes;$/;"	m	struct:__anon136	file:
cache	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_fmt_txt.h	/^    lv_font_fmt_txt_glyph_cache_t * cache;$/;"	m	struct:__anon53
cache	src/font/lv_font_montserrat_10.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_12.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_12_subpx.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_14.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_16.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_18.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_20.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_22.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_24.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_26.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_28.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_28_compressed.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_30.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_32.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_34.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_36.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_38.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_40.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_42.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_44.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_46.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_48.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_montserrat_8.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_simsun_16_cjk.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_unscii_16.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache	src/font/lv_font_unscii_8.c	/^static  lv_font_fmt_txt_glyph_cache_t cache;$/;"	v	file:
cache_t	src/core/lv_obj_style.c	/^}cache_t;$/;"	t	typeref:enum:__anon188	file:
calc	src/extra/layouts/grid/lv_grid.c	/^static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)$/;"	f	file:
calc_auto_size	src/core/lv_obj_pos.c	/^static void calc_auto_size(lv_obj_t * obj, lv_coord_t * w_out, lv_coord_t * h_out)$/;"	f	file:
calc_cols	src/extra/layouts/grid/lv_grid.c	/^static void calc_cols(lv_obj_t * cont, _lv_grid_calc_t * c)$/;"	f	file:
calc_free	src/extra/layouts/grid/lv_grid.c	/^static void calc_free(_lv_grid_calc_t * calc)$/;"	f	file:
calc_rows	src/extra/layouts/grid/lv_grid.c	/^static void calc_rows(lv_obj_t * cont, _lv_grid_calc_t * c)$/;"	f	file:
calendar_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t calendar_bg, calendar_day;$/;"	m	struct:__anon98	file:
calendar_day	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t calendar_bg, calendar_day;$/;"	m	struct:__anon98	file:
call_flush_cb	src/core/lv_refr.c	/^static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p)$/;"	f	file:
card	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t card;$/;"	m	struct:__anon98	file:
card	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t card;$/;"	m	struct:__anon101	file:
cb	src/core/lv_event.c	/^    lv_event_cb_t cb;$/;"	m	struct:_lv_event_dsc_t	file:
cb	src/core/lv_obj_pos.h	/^    lv_layout_update_cb_t cb;$/;"	m	struct:__anon200
cb	src/draw/lv_draw_mask.h	/^    lv_draw_mask_xcb_t cb;$/;"	m	struct:__anon76
cb	src/misc/lv_async.c	/^    lv_async_cb_t cb;$/;"	m	struct:_lv_async_info_t	file:
cb_marker	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t cb_marker, cb_marker_checked;$/;"	m	struct:__anon98	file:
cb_marker_checked	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t cb_marker, cb_marker_checked;$/;"	m	struct:__anon98	file:
cell_data	src/widgets/lv_table.h	/^    char ** cell_data;$/;"	m	struct:__anon151
center_x	src/draw/lv_draw_arc.c	/^    lv_coord_t center_x;$/;"	m	struct:__anon60	file:
center_y	src/draw/lv_draw_arc.c	/^    lv_coord_t center_y;$/;"	m	struct:__anon60	file:
cf	src/draw/lv_img_buf.h	/^        lv_img_cf_t cf;             \/*color format of the image to rotate*\/$/;"	m	struct:__anon66::__anon67
cf	src/draw/lv_img_buf.h	/^    uint32_t cf : 5;          \/*Color format: See `lv_img_color_format_t`*\/$/;"	m	struct:__anon63
cf	src/draw/lv_img_buf.h	/^    uint32_t cf : 5;          \/*Color format: See `lv_img_color_format_t`*\/$/;"	m	struct:__anon64
cf	src/widgets/lv_img.h	/^    uint8_t cf : 5;        \/*Color format from `lv_img_color_format_t`*\/$/;"	m	struct:__anon177
cfg	src/draw/lv_draw_mask.h	/^    } cfg;$/;"	m	struct:__anon77	typeref:struct:__anon77::__anon78
cfg	src/draw/lv_draw_mask.h	/^    } cfg;$/;"	m	struct:__anon79	typeref:struct:__anon79::__anon80
cfg	src/draw/lv_draw_mask.h	/^    } cfg;$/;"	m	struct:__anon81	typeref:struct:__anon81::__anon82
cfg	src/draw/lv_draw_mask.h	/^    } cfg;$/;"	m	struct:__anon83	typeref:struct:__anon83::__anon84
cfg	src/draw/lv_draw_mask.h	/^    } cfg;$/;"	m	struct:_lv_draw_mask_map_param_t	typeref:struct:_lv_draw_mask_map_param_t::__anon85
cfg	src/draw/lv_img_buf.h	/^    } cfg;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon67
ch	src/misc/lv_color.h	/^    } ch;$/;"	m	union:__anon31	typeref:union:__anon31::__anon32
ch	src/misc/lv_color.h	/^    } ch;$/;"	m	union:__anon33	typeref:struct:__anon33::__anon34
ch	src/misc/lv_color.h	/^    } ch;$/;"	m	union:__anon35	typeref:struct:__anon35::__anon36
ch	src/misc/lv_color.h	/^    } ch;$/;"	m	union:__anon37	typeref:struct:__anon37::__anon38
change_event_cb	examples/widgets/table/lv_example_table_2.c	/^static void change_event_cb(lv_event_t * e)$/;"	f	file:
char_begining_form_offset	src/misc/lv_txt_ap.c	/^    int8_t char_begining_form_offset;$/;"	m	struct:__anon1	file:
char_change_to_pair	src/misc/lv_bidi.c	/^static uint32_t char_change_to_pair(uint32_t letter)$/;"	f	file:
char_end_form	src/misc/lv_txt_ap.c	/^    uint16_t char_end_form;$/;"	m	struct:__anon1	file:
char_is_accepted	src/widgets/lv_textarea.c	/^static bool char_is_accepted(lv_obj_t * obj, uint32_t c)$/;"	f	file:
char_isolated_form_offset	src/misc/lv_txt_ap.c	/^    int8_t char_isolated_form_offset;$/;"	m	struct:__anon1	file:
char_middle_form_offset	src/misc/lv_txt_ap.c	/^    int8_t char_middle_form_offset;$/;"	m	struct:__anon1	file:
char_offset	src/misc/lv_txt_ap.c	/^    uint8_t char_offset;$/;"	m	struct:__anon1	file:
chart	examples/widgets/chart/lv_example_chart_5.c	/^static lv_obj_t * chart;$/;"	v	file:
chart	examples/widgets/chart/lv_example_chart_6.c	/^static lv_obj_t * chart;$/;"	v	file:
chart1	examples/widgets/chart/lv_example_chart_2.c	/^static lv_obj_t * chart1;$/;"	v	file:
chart_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;$/;"	m	struct:__anon98	file:
chart_indic	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;$/;"	m	struct:__anon98	file:
chart_series	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;$/;"	m	struct:__anon98	file:
chart_ticks	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t chart_series, chart_indic, chart_ticks, chart_bg;$/;"	m	struct:__anon98	file:
chg_rate	src/widgets/lv_arc.h	/^    uint16_t chg_rate; 			\/*Drag angle rate of change of the arc (degrees\/sec)*\/$/;"	m	struct:__anon166
child_cnt	src/core/lv_obj.h	/^    uint32_t child_cnt;                 \/**< Number of children*\/$/;"	m	struct:__anon186
child_ll	src/extra/widgets/span/lv_span.h	/^    lv_ll_t  child_ll;$/;"	m	struct:__anon135
children	src/core/lv_obj.h	/^    struct _lv_obj_t ** children;       \/**< Store the pointer of the children in an array.*\/$/;"	m	struct:__anon186	typeref:struct:__anon186::_lv_obj_t
children_repos	src/extra/layouts/flex/lv_flex.c	/^static void children_repos(lv_obj_t * cont, flex_t * f, int32_t item_first_id, int32_t item_last_id, lv_coord_t abs_x, lv_coord_t abs_y, lv_coord_t max_main_size, lv_coord_t item_gap, track_t * t)$/;"	f	file:
chroma_keyed	src/draw/lv_img_buf.h	/^        uint8_t chroma_keyed : 1;$/;"	m	struct:__anon66::__anon69
circle	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t circle;$/;"	m	struct:__anon98	file:
clamped	src/extra/layouts/flex/lv_flex.c	/^    uint32_t clamped :1;$/;"	m	struct:__anon141	file:
class_p	src/core/lv_obj.h	/^    const lv_obj_class_t * class_p;$/;"	m	struct:_lv_obj_t
class_pair_values	src/font/lv_font_fmt_txt.h	/^    const int8_t * class_pair_values;    \/*left_class_cnt * right_class_cnt value*\/$/;"	m	struct:__anon50
clean_dcache_cb	src/hal/lv_hal_disp.h	/^    void (*clean_dcache_cb)(struct _lv_disp_drv_t * disp_drv);$/;"	m	struct:_lv_disp_drv_t
click_pos	src/widgets/lv_textarea.h	/^        uint8_t click_pos : 1;     \/*1: Enable positioning the cursor by clicking the text area*\/$/;"	m	struct:__anon160::__anon161
clip_area	src/core/lv_obj_draw.h	/^    const lv_area_t * clip_area;        \/**< The current clip area, required if you need to draw something in the event*\/$/;"	m	struct:__anon199
clip_area	src/draw/lv_draw_arc.c	/^    const lv_area_t * clip_area;$/;"	m	struct:__anon60	file:
clip_corner	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t clip_corner;$/;"	m	struct:__anon98	file:
close_cb	src/draw/lv_img_decoder.h	/^    lv_img_decoder_close_f_t close_cb;$/;"	m	struct:_lv_img_decoder_t
close_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*close_cb)(struct _lv_fs_drv_t * drv, void * file_p);$/;"	m	struct:_lv_fs_drv_t
close_cb	tests/lv_test_main.c	/^static lv_fs_res_t close_cb(lv_fs_drv_t * drv, void * file_p)$/;"	f	file:
cmap_num	src/font/lv_font_fmt_txt.h	/^    uint16_t cmap_num       : 9;$/;"	m	struct:__anon53
cmap_table_bin	src/font/lv_font_loader.c	/^typedef struct cmap_table_bin {$/;"	s	file:
cmap_table_bin_t	src/font/lv_font_loader.c	/^} cmap_table_bin_t;$/;"	t	typeref:struct:cmap_table_bin	file:
cmaps	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_fmt_txt.h	/^    const lv_font_fmt_txt_cmap_t * cmaps;$/;"	m	struct:__anon53
cmaps	src/font/lv_font_montserrat_10.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_12.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_12_subpx.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_14.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_16.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_18.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_20.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_22.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_24.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_26.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_28.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_28_compressed.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_30.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_32.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_34.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_36.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_38.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_40.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_42.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_44.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_46.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_48.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_montserrat_8.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_simsun_16_cjk.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_unscii_16.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	src/font/lv_font_unscii_8.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	tests/lv_test_fonts/font_1.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	tests/lv_test_fonts/font_2.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmaps	tests/lv_test_fonts/font_3.c	/^static const lv_font_fmt_txt_cmap_t cmaps[] =$/;"	v	file:
cmd_state_t	src/draw/lv_draw_label.c	/^typedef uint8_t cmd_state_t;$/;"	t	file:
code	src/core/lv_event.h	/^    lv_event_code_t code;$/;"	m	struct:_lv_event_t
col	src/extra/layouts/grid/lv_grid.c	/^    uint32_t col;$/;"	m	struct:__anon145	file:
col_act	src/widgets/lv_table.h	/^    uint16_t col_act;$/;"	m	struct:__anon151
col_cnt	src/widgets/lv_table.h	/^    uint16_t col_cnt;$/;"	m	struct:__anon151
col_num	src/extra/layouts/grid/lv_grid.c	/^    uint32_t col_num;$/;"	m	struct:__anon146	file:
col_w	src/widgets/lv_table.h	/^    lv_coord_t * col_w;$/;"	m	struct:__anon151
color	src/draw/lv_draw_arc.h	/^    lv_color_t color;$/;"	m	struct:__anon61
color	src/draw/lv_draw_label.h	/^    lv_color_t color;$/;"	m	struct:__anon58
color	src/draw/lv_draw_line.h	/^    lv_color_t color;$/;"	m	struct:__anon71
color	src/draw/lv_img_buf.h	/^        lv_color_t color;           \/*a color used for `LV_IMG_CF_INDEXED_1\/2\/4\/8BIT` color formats*\/$/;"	m	struct:__anon66::__anon67
color	src/draw/lv_img_buf.h	/^        lv_color_t color;$/;"	m	struct:__anon66::__anon68
color	src/draw/lv_img_decoder.h	/^    lv_color_t color;$/;"	m	struct:_lv_img_decoder_dsc_t
color	src/extra/widgets/chart/lv_chart.h	/^    lv_color_t color;$/;"	m	struct:__anon107
color	src/extra/widgets/chart/lv_chart.h	/^    lv_color_t color;$/;"	m	struct:__anon108
color	src/extra/widgets/led/lv_led.h	/^    lv_color_t color;$/;"	m	struct:__anon122
color	src/extra/widgets/meter/lv_meter.h	/^            lv_color_t color;$/;"	m	struct:__anon125::__anon126::__anon128
color	src/extra/widgets/meter/lv_meter.h	/^            lv_color_t color;$/;"	m	struct:__anon125::__anon126::__anon129
color	src/misc/lv_style.h	/^    lv_color_t color;    \/**< Colors*\/$/;"	m	union:__anon16
colorKey	src/gpu/lv_gpu_nxp_pxp.c	/^static uint32_t colorKey = 0x0;$/;"	v	file:
colorKeyEnabled	src/gpu/lv_gpu_nxp_pxp.c	/^static bool colorKeyEnabled = false;$/;"	v	file:
color_blend_true_color_additive	src/draw/lv_draw_blend.c	/^static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa)$/;"	f	file:
color_blend_true_color_subtractive	src/draw/lv_draw_blend.c	/^static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t opa)$/;"	f	file:
color_card	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t color_card;$/;"	v	file:
color_chroma_key	src/hal/lv_hal_disp.h	/^    lv_color_t color_chroma_key;$/;"	m	struct:_lv_disp_drv_t
color_end	src/extra/widgets/meter/lv_meter.h	/^            lv_color_t color_end;$/;"	m	struct:__anon125::__anon126::__anon130
color_grey	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t color_grey;$/;"	v	file:
color_primary	src/core/lv_theme.h	/^    lv_color_t color_primary;$/;"	m	struct:_lv_theme_t
color_scr	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t color_scr;$/;"	v	file:
color_secondary	src/core/lv_theme.h	/^    lv_color_t color_secondary;$/;"	m	struct:_lv_theme_t
color_start	src/extra/widgets/meter/lv_meter.h	/^            lv_color_t color_start;$/;"	m	struct:__anon125::__anon126::__anon130
color_text	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t color_text;$/;"	v	file:
color_type	tests/lv_test_assert.c	/^    png_byte color_type;$/;"	m	struct:__anon201	file:
colorwheel_main	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t colorwheel_main;$/;"	m	struct:__anon98	file:
column_gap_anim	examples/layouts/flex/lv_example_flex_5.c	/^static void column_gap_anim(void * obj, int32_t v)$/;"	f	file:
column_gap_anim	examples/layouts/grid/lv_example_grid_5.c	/^static void column_gap_anim(void * obj, int32_t v)$/;"	f	file:
compare_fonts	tests/lv_test_core/lv_test_font_loader.c	/^static int compare_fonts(lv_font_t * f1, lv_font_t * f2)$/;"	f	file:
compression_id	src/font/lv_font_loader.c	/^    uint8_t compression_id;$/;"	m	struct:font_header_bin	file:
conj_to_next	src/misc/lv_txt_ap.c	/^        uint8_t conj_to_next;$/;"	m	struct:__anon1::__anon2	file:
conj_to_previous	src/misc/lv_txt_ap.c	/^        uint8_t conj_to_previous;$/;"	m	struct:__anon1::__anon2	file:
const_props	src/misc/lv_style.h	/^        const lv_style_const_prop_t * const_props;$/;"	m	union:__anon20::__anon21
constructor_cb	src/core/lv_obj_class.h	/^    void (*constructor_cb)(const struct _lv_obj_class_t * class_p, struct _lv_obj_t * obj);$/;"	m	struct:_lv_obj_class_t
cont_scroll_end_event_cb	src/extra/widgets/tabview/lv_tabview.c	/^static void cont_scroll_end_event_cb(lv_event_t * e)$/;"	f	file:
continue_reading	src/hal/lv_hal_indev.h	/^    bool continue_reading;  \/**< Call the read callback until it's set to true*\/$/;"	m	struct:__anon92
control_constructor	src/misc/lv_tlsf.c	/^static void control_constructor(control_t* control)$/;"	f	file:
control_t	src/misc/lv_tlsf.c	/^typedef struct control_t$/;"	s	file:
control_t	src/misc/lv_tlsf.c	/^} control_t;$/;"	t	typeref:struct:control_t	file:
coord_y	src/draw/lv_draw_label.h	/^    int32_t coord_y;$/;"	m	struct:_lv_draw_label_hint_t
coords	src/core/lv_obj.h	/^    lv_area_t coords;$/;"	m	struct:_lv_obj_t
coords	src/draw/lv_draw_mask.h	/^        lv_area_t coords;$/;"	m	struct:__anon83::__anon84
coords	src/draw/lv_draw_mask.h	/^        lv_area_t coords;$/;"	m	struct:_lv_draw_mask_map_param_t::__anon85
cosma	src/draw/lv_img_buf.h	/^        int32_t cosma;$/;"	m	struct:__anon66::__anon69
count_tracks	src/extra/layouts/grid/lv_grid.c	/^static uint32_t count_tracks(const lv_coord_t * templ)$/;"	f	file:
create_col_id	src/extra/widgets/tileview/lv_tileview.c	/^static uint32_t create_col_id;$/;"	v	file:
create_delete_change_parent	tests/lv_test_core/lv_test_obj.c	/^static void create_delete_change_parent(void)$/;"	f	file:
create_dir	src/extra/widgets/tileview/lv_tileview.c	/^static lv_dir_t create_dir;$/;"	v	file:
create_header_height	src/extra/widgets/win/lv_win.c	/^static lv_coord_t create_header_height;$/;"	v	file:
create_knob_recolor	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static bool create_knob_recolor;$/;"	v	file:
create_row_id	src/extra/widgets/tileview/lv_tileview.c	/^static uint32_t create_row_id;$/;"	v	file:
create_slider	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * create_slider(lv_color_t color)$/;"	f	file:
cross_place	src/extra/layouts/flex/lv_flex.c	/^    lv_flex_align_t cross_place;$/;"	m	struct:__anon140	file:
ctrl_bits	src/widgets/lv_btnmatrix.h	/^    lv_btnmatrix_ctrl_t * ctrl_bits;                       \/*Array of control bytes*\/$/;"	m	struct:__anon156
cur_value	src/widgets/lv_bar.h	/^    int32_t cur_value;          \/**< Current value of the bar*\/$/;"	m	struct:__anon176
cur_value_anim	src/widgets/lv_bar.h	/^    _lv_bar_anim_t cur_value_anim;$/;"	m	struct:__anon176
current_target	src/core/lv_event.h	/^    struct _lv_obj_t * current_target;$/;"	m	struct:_lv_event_t	typeref:struct:_lv_event_t::_lv_obj_t
current_value	src/misc/lv_anim.h	/^    int32_t current_value;             \/**< Current value*\/$/;"	m	struct:_lv_anim_t
cursor	examples/widgets/chart/lv_example_chart_6.c	/^static lv_chart_cursor_t * cursor;$/;"	v	file:
cursor	src/hal/lv_hal_indev.h	/^    struct _lv_obj_t * cursor;     \/**< Cursor for LV_INPUT_TYPE_POINTER*\/$/;"	m	struct:_lv_indev_t	typeref:struct:_lv_indev_t::_lv_obj_t
cursor	src/widgets/lv_textarea.h	/^    } cursor;$/;"	m	struct:__anon160	typeref:struct:__anon160::__anon161
cursor_blink_anim_cb	src/widgets/lv_textarea.c	/^static void cursor_blink_anim_cb(void * obj, int32_t show)$/;"	f	file:
cursor_ll	src/extra/widgets/chart/lv_chart.h	/^    lv_ll_t cursor_ll;     \/**< Linked list for the cursors (stores lv_chart_cursor_t)*\/$/;"	m	struct:__anon110
custom_id	src/draw/lv_draw_mask.h	/^    void * custom_id;$/;"	m	struct:__anon73
custom_print_cb	src/misc/lv_log.c	/^static lv_log_print_g_cb_t custom_print_cb;$/;"	v	file:
custom_tick_get	tests/lv_test_main.c	/^uint32_t custom_tick_get(void)$/;"	f
dark	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t dark;$/;"	m	struct:__anon97	file:
dark_color_filter_cb	src/extra/themes/basic/lv_theme_basic.c	/^static lv_color_t dark_color_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t c, lv_opa_t opa)$/;"	f	file:
dark_color_filter_cb	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t dark_color_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t c, lv_opa_t opa)$/;"	f	file:
darken	examples/get_started/lv_example_get_started_2.c	/^static lv_color_t darken(const lv_color_filter_dsc_t * dsc, lv_color_t color, lv_opa_t opa)$/;"	f	file:
dash_gap	src/draw/lv_draw_line.h	/^    lv_coord_t dash_gap;$/;"	m	struct:__anon71
dash_width	src/draw/lv_draw_line.h	/^    lv_coord_t dash_width;$/;"	m	struct:__anon71
data	src/draw/lv_img_buf.h	/^    const uint8_t * data;   \/**< Pointer to the data of the image*\/$/;"	m	struct:__anon65
data_entries_count	src/font/lv_font_loader.c	/^    uint16_t data_entries_count;$/;"	m	struct:cmap_table_bin	file:
data_offset	src/font/lv_font_loader.c	/^    uint32_t data_offset;$/;"	m	struct:cmap_table_bin	file:
data_size	src/draw/lv_img_buf.h	/^    uint32_t data_size;     \/**< Size of the image in bytes*\/$/;"	m	struct:__anon65
day	src/extra/widgets/calendar/lv_calendar.h	/^    int8_t day;    \/** 1..31*\/$/;"	m	struct:__anon120
day_names_def	src/extra/widgets/calendar/lv_calendar.c	/^static const char * day_names_def[7] = LV_CALENDAR_DEFAULT_DAY_NAMES;$/;"	v	file:
dec_dsc	src/draw/lv_img_cache.h	/^    lv_img_decoder_dsc_t dec_dsc; \/**< Image information*\/$/;"	m	struct:__anon88
dec_point_pos	src/extra/widgets/spinbox/lv_spinbox.h	/^    uint16_t dec_point_pos : 4; \/*if 0, there is no separator and the number is an integer*\/$/;"	m	struct:__anon139
decoder	src/draw/lv_img_decoder.h	/^    lv_img_decoder_t * decoder;$/;"	m	struct:_lv_img_decoder_dsc_t
decompress	src/font/lv_font_fmt_txt.c	/^static void decompress(const uint8_t * in, uint8_t * out, lv_coord_t w, lv_coord_t h, uint8_t bpp, bool prefilter)$/;"	f	file:
decompress_line	src/font/lv_font_fmt_txt.c	/^static inline void decompress_line(uint8_t * out, lv_coord_t w)$/;"	f	file:
decor	src/draw/lv_draw_label.h	/^    lv_text_decor_t decor : 3;$/;"	m	struct:__anon58
default_advance_width	src/font/lv_font_loader.c	/^    uint16_t default_advance_width;$/;"	m	struct:font_header_bin	file:
default_group	src/core/lv_group.c	/^static lv_group_t * default_group;$/;"	v	file:
default_kb_ctrl_lc_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static const lv_btnmatrix_ctrl_t default_kb_ctrl_lc_map[] = {$/;"	v	file:
default_kb_ctrl_num_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static const lv_btnmatrix_ctrl_t default_kb_ctrl_num_map[] = {$/;"	v	file:
default_kb_ctrl_spec_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static const lv_btnmatrix_ctrl_t default_kb_ctrl_spec_map[] = {$/;"	v	file:
default_kb_ctrl_uc_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static const lv_btnmatrix_ctrl_t default_kb_ctrl_uc_map[] = {$/;"	v	file:
default_kb_map_lc	src/extra/widgets/keyboard/lv_keyboard.c	/^static const char * const default_kb_map_lc[] = {"1#", "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", LV_SYMBOL_BACKSPACE, "\\n",$/;"	v	file:
default_kb_map_num	src/extra/widgets/keyboard/lv_keyboard.c	/^static const char * const default_kb_map_num[] = {"1", "2", "3", LV_SYMBOL_KEYBOARD, "\\n",$/;"	v	file:
default_kb_map_spec	src/extra/widgets/keyboard/lv_keyboard.c	/^static const char * const default_kb_map_spec[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0", LV_SYMBOL_BACKSPACE, "\\n",$/;"	v	file:
default_kb_map_uc	src/extra/widgets/keyboard/lv_keyboard.c	/^static const char * const default_kb_map_uc[] = {"1#", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", LV_SYMBOL_BACKSPACE, "\\n",$/;"	v	file:
default_walker	src/misc/lv_tlsf.c	/^static void default_walker(void* ptr, size_t size, int used, void* user)$/;"	f	file:
del_prev	src/hal/lv_hal_disp.h	/^    uint8_t del_prev  : 1;          \/**< 1: Automatically delete the previous screen when the screen load animation is ready*\/$/;"	m	struct:_lv_disp_t
delay	src/core/lv_obj_style.h	/^    uint16_t delay;$/;"	m	struct:__anon197
delay	src/misc/lv_style.h	/^    uint32_t delay;                \/**< Delay before the transition in [ms]*\/$/;"	m	struct:__anon18
deleted	src/core/lv_event.h	/^    uint8_t deleted :1;$/;"	m	struct:_lv_event_t
delta_deg	src/draw/lv_draw_mask.h	/^    uint16_t delta_deg;$/;"	m	struct:__anon79
descent	src/font/lv_font_loader.c	/^    int16_t descent;$/;"	m	struct:font_header_bin	file:
destructor_cb	src/core/lv_obj_class.h	/^    void (*destructor_cb)(const struct _lv_obj_class_t * class_p, struct _lv_obj_t * obj);$/;"	m	struct:_lv_obj_class_t
digit_count	src/extra/widgets/spinbox/lv_spinbox.h	/^    uint16_t digit_count : 4;$/;"	m	struct:__anon139
dir	src/extra/widgets/chart/lv_chart.h	/^    lv_dir_t dir;$/;"	m	struct:__anon108
dir	src/extra/widgets/tileview/lv_tileview.h	/^    lv_dir_t dir;$/;"	m	struct:__anon116
dir	src/misc/lv_bidi.c	/^    lv_base_dir_t dir;$/;"	m	struct:__anon4	file:
dir	src/widgets/lv_dropdown.h	/^    lv_dir_t dir              :4;   \/**< Direction in which the list should open*\/$/;"	m	struct:__anon172
dir_close_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*dir_close_cb)(struct _lv_fs_drv_t * drv, void * rddir_p);$/;"	m	struct:_lv_fs_drv_t
dir_d	src/misc/lv_fs.h	/^    void * dir_d;$/;"	m	struct:__anon9
dir_open_cb	src/misc/lv_fs.h	/^    void * (*dir_open_cb)(struct _lv_fs_drv_t * drv, const char * path);$/;"	m	struct:_lv_fs_drv_t
dir_read_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*dir_read_cb)(struct _lv_fs_drv_t * drv, void * rddir_p, char * fn);$/;"	m	struct:_lv_fs_drv_t
disabled	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t disabled;$/;"	m	struct:__anon97	file:
disabled	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t disabled;$/;"	m	struct:__anon98	file:
disabled	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t disabled;$/;"	m	struct:__anon101	file:
disabled	src/hal/lv_hal_indev.h	/^    uint8_t disabled : 1;$/;"	m	struct:_lv_indev_proc_t
disp	src/core/lv_theme.h	/^    struct _lv_disp_t * disp;$/;"	m	struct:_lv_theme_t	typeref:struct:_lv_theme_t::_lv_disp_t
disp	src/hal/lv_hal_indev.h	/^    struct _lv_disp_t * disp;$/;"	m	struct:_lv_indev_drv_t	typeref:struct:_lv_indev_drv_t::_lv_disp_t
disp_def	src/hal/lv_hal_disp.c	/^static lv_disp_t * disp_def;$/;"	v	file:
disp_flush	examples/porting/lv_port_disp_template.c	/^static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)$/;"	f	file:
disp_init	examples/porting/lv_port_disp_template.c	/^static void disp_init(void)$/;"	f	file:
disp_refr	src/core/lv_refr.c	/^static lv_disp_t * disp_refr; \/*Display being refreshed*\/$/;"	v	file:
disp_size	src/extra/themes/default/lv_theme_default.c	/^static disp_size_t disp_size;$/;"	v	file:
disp_size_t	src/extra/themes/default/lv_theme_default.c	/^}disp_size_t;$/;"	t	typeref:enum:__anon100	file:
dot	src/widgets/lv_label.h	/^    } dot;$/;"	m	struct:__anon168	typeref:union:__anon168::__anon169
dot_end	src/widgets/lv_label.h	/^    uint32_t dot_end;  \/*The real text length, used in dot mode*\/$/;"	m	struct:__anon168
dot_tmp_alloc	src/widgets/lv_label.h	/^    uint8_t dot_tmp_alloc : 1; \/*1: dot_tmp has been allocated;.0: dot_tmp directly holds up to 4 bytes of characters*\/$/;"	m	struct:__anon168
double_click_reset	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static lv_res_t double_click_reset(lv_obj_t * obj)$/;"	f	file:
dpi	src/hal/lv_hal_disp.h	/^    uint32_t dpi : 10;              \/** DPI (dot per inch) of the display. Default value is `LV_DPI_DEF`.*\/$/;"	m	struct:_lv_disp_drv_t
drag_event_handler	examples/widgets/obj/lv_example_obj_2.c	/^static void drag_event_handler(lv_event_t * e)$/;"	f	file:
dragging	src/widgets/lv_arc.h	/^    uint16_t dragging    : 1;$/;"	m	struct:__anon166
dragging	src/widgets/lv_slider.h	/^    uint8_t dragging : 1;       \/*1: the slider is being dragged*\/$/;"	m	struct:__anon158
draw_arcs	src/extra/widgets/meter/lv_meter.c	/^static void draw_arcs(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)$/;"	f	file:
draw_area	src/core/lv_obj_draw.h	/^    lv_area_t * draw_area;              \/**< The area of the part being drawn*\/$/;"	m	struct:__anon199
draw_area	src/draw/lv_draw_arc.c	/^    const lv_area_t * draw_area;$/;"	m	struct:__anon60	file:
draw_axes	src/extra/widgets/chart/lv_chart.c	/^static void draw_axes(lv_obj_t * obj, const lv_area_t * mask)$/;"	f	file:
draw_bg	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_bg(const lv_area_t * coords, const lv_area_t * clip,$/;"	f	file:
draw_bg_img	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_bg_img(const lv_area_t * coords, const lv_area_t * clip,$/;"	f	file:
draw_border	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_border(const lv_area_t * coords, const lv_area_t * clip,$/;"	f	file:
draw_box	src/widgets/lv_dropdown.c	/^static void draw_box(lv_obj_t * dropdown_obj, const lv_area_t * clip_area, uint16_t id, lv_state_t state)$/;"	f	file:
draw_box_label	src/widgets/lv_dropdown.c	/^static void draw_box_label(lv_obj_t * dropdown_obj, const lv_area_t * clip_area, uint16_t id, lv_state_t state)$/;"	f	file:
draw_buf	src/hal/lv_hal_disp.h	/^    lv_disp_draw_buf_t * draw_buf;$/;"	m	struct:_lv_disp_drv_t
draw_buf_flush	src/core/lv_refr.c	/^static void draw_buf_flush(void)$/;"	f	file:
draw_buf_rotate	src/core/lv_refr.c	/^static void draw_buf_rotate(lv_area_t *area, lv_color_t *color_p) {$/;"	f	file:
draw_buf_rotate4	src/core/lv_refr.c	/^static inline void draw_buf_rotate4(lv_color_t *a, lv_color_t *b, lv_color_t * c, lv_color_t * d) {$/;"	f	file:
draw_buf_rotate_180	src/core/lv_refr.c	/^static void draw_buf_rotate_180(lv_disp_drv_t *drv, lv_area_t *area, lv_color_t *color_p) {$/;"	f	file:
draw_buf_rotate_90	src/core/lv_refr.c	/^static LV_ATTRIBUTE_FAST_MEM void draw_buf_rotate_90(bool invert_i, lv_coord_t area_w, lv_coord_t area_h, lv_color_t *orig_color_p, lv_color_t *rot_buf) {$/;"	f	file:
draw_buf_rotate_90_sqr	src/core/lv_refr.c	/^static void draw_buf_rotate_90_sqr(bool is_270, lv_coord_t w, lv_color_t * color_p) {$/;"	f	file:
draw_cleanup	src/draw/lv_draw_img.c	/^static void draw_cleanup(_lv_img_cache_entry_t * cache)$/;"	f	file:
draw_cursor	src/widgets/lv_textarea.c	/^static void draw_cursor(lv_event_t * e)$/;"	f	file:
draw_cursors	src/extra/widgets/chart/lv_chart.c	/^static void draw_cursors(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_disc_grad	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void draw_disc_grad(lv_event_t * e)$/;"	f	file:
draw_div_lines	src/extra/widgets/chart/lv_chart.c	/^static void draw_div_lines(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_dsc	src/draw/lv_draw_arc.c	/^    lv_draw_rect_dsc_t * draw_dsc;$/;"	m	struct:__anon60	file:
draw_event_cb	examples/widgets/chart/lv_example_chart_2.c	/^static void draw_event_cb(lv_event_t * e)$/;"	f	file:
draw_event_cb	examples/widgets/chart/lv_example_chart_3.c	/^static void draw_event_cb(lv_event_t * e)$/;"	f	file:
draw_event_cb	examples/widgets/chart/lv_example_chart_7.c	/^static void draw_event_cb(lv_event_t * e)$/;"	f	file:
draw_event_cb	examples/widgets/table/lv_example_table_2.c	/^static void draw_event_cb(lv_event_t * e)$/;"	f	file:
draw_full_border	src/draw/lv_draw_rect.c	/^static void draw_full_border(const lv_area_t * area_inner, const lv_area_t * area_outer, const lv_area_t * clip,$/;"	f	file:
draw_img	src/widgets/lv_img.c	/^static void draw_img(lv_event_t * e)$/;"	f	file:
draw_indic	src/widgets/lv_bar.c	/^static void draw_indic(lv_event_t * e)$/;"	f	file:
draw_knob	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void draw_knob(lv_event_t * e)$/;"	f	file:
draw_knob	src/widgets/lv_slider.c	/^static void draw_knob(lv_event_t * e)$/;"	f	file:
draw_label	src/widgets/lv_roller.c	/^static void draw_label(lv_event_t * e)$/;"	f	file:
draw_letter_normal	src/draw/lv_draw_label.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_coord_t pos_x, lv_coord_t pos_y, lv_font_glyph_dsc_t * g,$/;"	f	file:
draw_letter_subpx	src/draw/lv_draw_label.c	/^static void draw_letter_subpx(lv_coord_t pos_x, lv_coord_t pos_y, lv_font_glyph_dsc_t * g, const lv_area_t * clip_area,$/;"	f	file:
draw_line_hor	src/draw/lv_draw_line.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_line_hor(const lv_point_t * point1, const lv_point_t * point2,$/;"	f	file:
draw_line_skew	src/draw/lv_draw_line.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_line_skew(const lv_point_t * point1, const lv_point_t * point2,$/;"	f	file:
draw_line_ver	src/draw/lv_draw_line.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_line_ver(const lv_point_t * point1, const lv_point_t * point2,$/;"	f	file:
draw_list	src/widgets/lv_dropdown.c	/^static void draw_list(lv_event_t * e)$/;"	f	file:
draw_main	src/extra/widgets/imgbtn/lv_imgbtn.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/extra/widgets/span/lv_span.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_btnmatrix.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_dropdown.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_label.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_roller.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_switch.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_main	src/widgets/lv_table.c	/^static void draw_main(lv_event_t * e)$/;"	f	file:
draw_needles	src/extra/widgets/meter/lv_meter.c	/^static void draw_needles(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)$/;"	f	file:
draw_outline	src/draw/lv_draw_rect.c	/^static void draw_outline(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)$/;"	f	file:
draw_part_begin_event_cb	src/extra/widgets/calendar/lv_calendar.c	/^static void draw_part_begin_event_cb(lv_event_t * e)$/;"	f	file:
draw_part_event_cb	examples/widgets/table/lv_example_table_1.c	/^static void draw_part_event_cb(lv_event_t * e)$/;"	f	file:
draw_placeholder	src/widgets/lv_textarea.c	/^static void draw_placeholder(lv_event_t * e)$/;"	f	file:
draw_quarter_0	src/draw/lv_draw_arc.c	/^static void draw_quarter_0(quarter_draw_dsc_t * q)$/;"	f	file:
draw_quarter_1	src/draw/lv_draw_arc.c	/^static void draw_quarter_1(quarter_draw_dsc_t * q)$/;"	f	file:
draw_quarter_2	src/draw/lv_draw_arc.c	/^static void draw_quarter_2(quarter_draw_dsc_t * q)$/;"	f	file:
draw_quarter_3	src/draw/lv_draw_arc.c	/^static void draw_quarter_3(quarter_draw_dsc_t * q)$/;"	f	file:
draw_scrollbar	src/core/lv_obj.c	/^static void draw_scrollbar(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_series_bar	src/extra/widgets/chart/lv_chart.c	/^static void draw_series_bar(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_series_line	src/extra/widgets/chart/lv_chart.c	/^static void draw_series_line(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_series_scatter	src/extra/widgets/chart/lv_chart.c	/^static void draw_series_scatter(lv_obj_t * obj, const lv_area_t * clip_area)$/;"	f	file:
draw_shadow	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void draw_shadow(const lv_area_t * coords, const lv_area_t * clip,$/;"	f	file:
draw_simple_border	src/draw/lv_draw_rect.c	/^static void draw_simple_border(const lv_area_t * clip, const lv_area_t * area_inner, const lv_area_t * area_outer,$/;"	f	file:
draw_size	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t draw_size;$/;"	m	struct:__anon109
draw_ticks_and_labels	src/extra/widgets/meter/lv_meter.c	/^static void draw_ticks_and_labels(lv_obj_t * obj, const lv_area_t * clip_area, const lv_area_t * scale_area)$/;"	f	file:
draw_x_ticks	src/extra/widgets/chart/lv_chart.c	/^static void draw_x_ticks(lv_obj_t * obj, const lv_area_t * clip_area, lv_chart_axis_t axis)$/;"	f	file:
draw_y_ticks	src/extra/widgets/chart/lv_chart.c	/^static void draw_y_ticks(lv_obj_t * obj, const lv_area_t * clip_area, lv_chart_axis_t axis)$/;"	f	file:
driver	src/hal/lv_hal_disp.h	/^    struct _lv_disp_drv_t * driver;$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_disp_drv_t
driver	src/hal/lv_hal_indev.h	/^    struct _lv_indev_drv_t * driver;$/;"	m	struct:_lv_indev_t	typeref:struct:_lv_indev_t::_lv_indev_drv_t
dropdown	src/widgets/lv_dropdown.h	/^  lv_obj_t * dropdown;$/;"	m	struct:__anon173
dropdown_list	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t dropdown_list;$/;"	m	struct:__anon98	file:
drv	src/misc/lv_fs.h	/^    lv_fs_drv_t * drv;$/;"	m	struct:__anon8
drv	src/misc/lv_fs.h	/^    lv_fs_drv_t * drv;$/;"	m	struct:__anon9
drv_update_cb	src/hal/lv_hal_disp.h	/^    void (*drv_update_cb)(struct _lv_disp_drv_t * disp_drv);$/;"	m	struct:_lv_disp_drv_t
dsc	src/draw/lv_draw_mask.h	/^    _lv_draw_mask_common_dsc_t dsc;$/;"	m	struct:__anon77
dsc	src/draw/lv_draw_mask.h	/^    _lv_draw_mask_common_dsc_t dsc;$/;"	m	struct:__anon79
dsc	src/draw/lv_draw_mask.h	/^    _lv_draw_mask_common_dsc_t dsc;$/;"	m	struct:__anon81
dsc	src/draw/lv_draw_mask.h	/^    _lv_draw_mask_common_dsc_t dsc;$/;"	m	struct:__anon83
dsc	src/draw/lv_draw_mask.h	/^    _lv_draw_mask_common_dsc_t dsc;$/;"	m	struct:_lv_draw_mask_map_param_t
dsc	src/extra/widgets/animimg/lv_animimg.h	/^    lv_img_dsc_t **dsc;$/;"	m	struct:__anon118
dsc	src/font/lv_font.h	/^    const void * dsc;                     \/**< Store implementation specific or run_time data or caching here*\/$/;"	m	struct:_lv_font_t
dsc	src/widgets/lv_canvas.h	/^    lv_img_dsc_t dsc;$/;"	m	struct:__anon159
dst	src/gpu/lv_gpu_nxp_vglite.h	/^    const lv_color_t * dst;  \/**< Destination buffer pointer (must be aligned on 32 bytes)*\/$/;"	m	struct:__anon149
dst_area	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_area_t dst_area;      \/**< Target area in destination buffer (must be the same as src_area)*\/$/;"	m	struct:__anon149
dst_height	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_coord_t dst_height;   \/**< Destination buffer height*\/$/;"	m	struct:__anon149
dst_stride	src/gpu/lv_gpu_nxp_vglite.h	/^    uint32_t dst_stride;     \/**< Destination buffer stride in bytes (must be aligned on 16 px)*\/$/;"	m	struct:__anon149
dst_width	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_coord_t dst_width;    \/**< Destination buffer width*\/$/;"	m	struct:__anon149
dummy_flush_cb	tests/lv_test_main.c	/^static void dummy_flush_cb(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)$/;"	f	file:
early_apply	src/misc/lv_anim.h	/^    uint8_t early_apply  : 1;    \/**< 1: Apply start value immediately even is there is `delay`*\/$/;"	m	struct:_lv_anim_t
ecg_sample	examples/widgets/chart/lv_example_chart_5.c	/^static const lv_coord_t ecg_sample[] = {$/;"	v	file:
edit	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t edit;$/;"	m	struct:__anon101	file:
editable	src/core/lv_obj_class.h	/^    uint32_t editable : 2;             \/**< Value from ::lv_obj_class_editable_t*\/$/;"	m	struct:_lv_obj_class_t
editing	src/core/lv_group.h	/^    uint8_t editing : 1;        \/**< 1: Edit mode, 0: Navigate mode*\/$/;"	m	struct:_lv_group_t
elastic_diff	src/core/lv_indev_scroll.c	/^static lv_coord_t elastic_diff(lv_obj_t * scroll_obj, lv_coord_t diff, lv_coord_t scroll_start, lv_coord_t scroll_end, lv_dir_t dir)$/;"	f	file:
enc_diff	src/hal/lv_hal_indev.h	/^    int16_t enc_diff; \/**< For LV_INDEV_TYPE_ENCODER number of steps since the previous read*\/$/;"	m	struct:__anon92
encoder_diff	examples/porting/lv_port_indev_template.c	/^static int32_t encoder_diff;$/;"	v	file:
encoder_handler	examples/porting/lv_port_indev_template.c	/^static void encoder_handler(void)$/;"	f	file:
encoder_init	examples/porting/lv_port_indev_template.c	/^static void encoder_init(void)$/;"	f	file:
encoder_read	examples/porting/lv_port_indev_template.c	/^static void encoder_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)$/;"	f	file:
encoder_state	examples/porting/lv_port_indev_template.c	/^static lv_indev_state_t encoder_state;$/;"	v	file:
end_angle	src/draw/lv_draw_arc.c	/^    uint16_t end_angle;$/;"	m	struct:__anon60	file:
end_angle	src/draw/lv_draw_mask.h	/^        lv_coord_t end_angle;$/;"	m	struct:__anon79::__anon80
end_line	src/draw/lv_draw_mask.h	/^    lv_draw_mask_line_param_t end_line;$/;"	m	struct:__anon79
end_quarter	src/draw/lv_draw_arc.c	/^    uint16_t end_quarter;$/;"	m	struct:__anon60	file:
end_value	src/core/lv_obj_style.c	/^    lv_style_value_t end_value;$/;"	m	struct:__anon187	file:
end_value	src/extra/widgets/meter/lv_meter.h	/^    int32_t end_value;$/;"	m	struct:__anon125
end_value	src/misc/lv_anim.h	/^    int32_t end_value;                 \/**< End value*\/$/;"	m	struct:_lv_anim_t
entry_cnt	src/draw/lv_img_cache.c	/^    static uint16_t entry_cnt;$/;"	v	file:
error_msg	src/draw/lv_img_decoder.h	/^    const char * error_msg;$/;"	m	struct:_lv_img_decoder_dsc_t
event_cb	examples/event/lv_example_event_1.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/event/lv_example_event_2.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/event/lv_example_event_3.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/bar/lv_example_bar_6.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/btnmatrix/lv_example_btnmatrix_2.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/btnmatrix/lv_example_btnmatrix_3.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/chart/lv_example_chart_4.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/chart/lv_example_chart_6.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/dropdown/lv_example_dropdown_3.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	examples/widgets/msgbox/lv_example_msgbox_1.c	/^static void event_cb(lv_event_t * e)$/;"	f	file:
event_cb	src/core/lv_obj_class.h	/^    void (*event_cb)(const struct _lv_obj_class_t * class_p, struct _lv_event_t * e);  \/**< Widget type specific event function*\/$/;"	m	struct:_lv_obj_class_t
event_dsc	src/core/lv_obj.h	/^    struct _lv_event_dsc_t * event_dsc;             \/**< Dynamically allocated event callback and user data array*\/$/;"	m	struct:__anon186	typeref:struct:__anon186::_lv_event_dsc_t
event_dsc_cnt	src/core/lv_obj.h	/^    uint8_t event_dsc_cnt;           \/**< Number of event callabcks stored in `event_cb` array*\/$/;"	m	struct:__anon186
event_handler	examples/widgets/btn/lv_example_btn_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/btnmatrix/lv_example_btnmatrix_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/calendar/lv_example_calendar_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/checkbox/lv_example_checkbox_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/dropdown/lv_example_dropdown_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/list/lv_example_list_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/roller/lv_example_roller_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/roller/lv_example_roller_2.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/switch/lv_example_switch_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_handler	examples/widgets/win/lv_example_win_1.c	/^static void event_handler(lv_event_t * e)$/;"	f	file:
event_head	src/core/lv_event.c	/^static lv_event_t * event_head;$/;"	v	file:
event_is_bubbled	src/core/lv_event.c	/^static bool event_is_bubbled(lv_event_code_t e)$/;"	f	file:
event_send_core	src/core/lv_event.c	/^static lv_res_t event_send_core(lv_event_t * e)$/;"	f	file:
exec_cb	src/misc/lv_anim.h	/^    lv_anim_exec_xcb_t exec_cb;          \/**< Function to execute to animate*\/$/;"	m	struct:_lv_anim_t
expand	src/widgets/lv_label.h	/^    uint8_t expand : 1;                 \/*Ignore real width (used by the library with LV_LABEL_LONG_SROLL)*\/$/;"	m	struct:__anon168
ext_click_pad	src/core/lv_obj.h	/^    lv_coord_t ext_click_pad;              \/**< Extra click padding in all direction*\/$/;"	m	struct:__anon186
ext_draw_size	src/core/lv_obj.h	/^    lv_coord_t ext_draw_size;           \/**< EXTend the size in every direction for drawing.*\/$/;"	m	struct:__anon186
f	src/draw/lv_img_decoder.c	/^    lv_fs_file_t f;$/;"	m	struct:__anon70	file:
f	src/misc/lv_math.h	/^    uint16_t f;$/;"	m	struct:__anon11
fade_anim_cb	src/core/lv_obj_style.c	/^static void fade_anim_cb(void * obj, int32_t v)$/;"	f	file:
fade_in_anim_ready	src/core/lv_obj_style.c	/^static void fade_in_anim_ready(lv_anim_t * a)$/;"	f	file:
fast_hsv2rgb	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void fast_hsv2rgb(uint16_t h, uint8_t s, uint8_t v, uint8_t *r, uint8_t *g , uint8_t *b)$/;"	f	file:
fct	src/misc/lv_printf.c	/^    void (*fct)(char character, void * arg);$/;"	m	struct:__anon3	file:
feedback_cb	src/hal/lv_hal_indev.h	/^    void (*feedback_cb)(struct _lv_indev_drv_t *, uint8_t);$/;"	m	struct:_lv_indev_drv_t
file_d	src/misc/lv_fs.h	/^    void * file_d;$/;"	m	struct:__anon8
fill_blended	src/draw/lv_draw_blend.c	/^static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,$/;"	f	file:
fill_normal	src/draw/lv_draw_blend.c	/^LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,$/;"	f	file:
fill_pos_conv	src/misc/lv_bidi.c	/^static void fill_pos_conv(uint16_t * out, uint16_t len, uint16_t index)$/;"	f	file:
fill_set_px	src/draw/lv_draw_blend.c	/^static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,$/;"	f	file:
filter	src/core/lv_event.c	/^    lv_event_code_t filter :8;$/;"	m	struct:_lv_event_dsc_t	file:
filter_cb	src/misc/lv_color.h	/^    lv_color_filter_cb_t filter_cb;$/;"	m	struct:_lv_color_filter_dsc_t
final_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t final_size;$/;"	m	struct:__anon141	file:
find_scroll_obj	src/core/lv_indev_scroll.c	/^static lv_obj_t * find_scroll_obj(_lv_indev_proc_t * proc)$/;"	f	file:
find_snap_point_x	src/core/lv_indev_scroll.c	/^static lv_coord_t find_snap_point_x(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_t ofs)$/;"	f	file:
find_snap_point_y	src/core/lv_indev_scroll.c	/^static lv_coord_t find_snap_point_y(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_t ofs)$/;"	f	file:
find_track_end	src/extra/layouts/flex/lv_flex.c	/^static int32_t find_track_end(lv_obj_t * cont, flex_t * f, int32_t item_start_id, lv_coord_t max_main_size, lv_coord_t item_gap, track_t * t)$/;"	f	file:
fl_bitmap	src/misc/lv_tlsf.c	/^	unsigned int fl_bitmap;$/;"	m	struct:control_t	file:
flag	src/draw/lv_draw_label.h	/^    lv_text_flag_t flag;$/;"	m	struct:__anon58
flags	src/core/lv_obj.h	/^    lv_obj_flag_t flags;$/;"	m	struct:_lv_obj_t
flags	src/core/lv_theme.h	/^    uint32_t flags;                 \/*Any custom flag used by the theme*\/$/;"	m	struct:_lv_theme_t
flat	src/draw/lv_draw_mask.h	/^    uint8_t flat : 1;$/;"	m	struct:__anon77
flex_t	src/extra/layouts/flex/lv_flex.c	/^}flex_t;$/;"	t	typeref:struct:__anon140	file:
flex_update	src/extra/layouts/flex/lv_flex.c	/^static void flex_update(lv_obj_t * cont, void * user_data)$/;"	f	file:
float_btn_event_cb	examples/scroll/lv_example_scroll_3.c	/^static void float_btn_event_cb(lv_event_t * e)$/;"	f	file:
flush_cb	src/hal/lv_hal_disp.h	/^    void (*flush_cb)(struct _lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);$/;"	m	struct:_lv_disp_drv_t
flushing	src/hal/lv_hal_disp.h	/^    volatile int flushing;$/;"	m	struct:_lv_disp_draw_buf_t
flushing_last	src/hal/lv_hal_disp.h	/^    volatile int flushing_last;$/;"	m	struct:_lv_disp_draw_buf_t
focus	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t focus;$/;"	m	struct:__anon101	file:
focus_cb	src/core/lv_group.h	/^    lv_group_focus_cb_t focus_cb;              \/**< A function to call when a new object is focused (optional)*\/$/;"	m	struct:_lv_group_t
focus_next_core	src/core/lv_group.c	/^static void focus_next_core(lv_group_t * group, void * (*begin)(const lv_ll_t *),$/;"	f	file:
font	src/draw/lv_draw_label.h	/^    const lv_font_t * font;$/;"	m	struct:__anon58
font	src/extra/widgets/span/lv_span.c	/^    const lv_font_t * font;$/;"	m	struct:__anon136	file:
font_1	tests/lv_test_fonts/font_1.c	/^lv_font_t font_1 = {$/;"	v
font_2	tests/lv_test_fonts/font_2.c	/^lv_font_t font_2 = {$/;"	v
font_3	tests/lv_test_fonts/font_3.c	/^lv_font_t font_3 = {$/;"	v
font_dsc	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_10.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_12.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_12_subpx.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_14.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_16.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_18.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_20.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_22.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_24.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_26.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_28.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_28_compressed.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_30.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_32.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_34.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_36.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_38.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_40.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_42.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_44.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_46.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_48.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_montserrat_8.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_simsun_16_cjk.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_unscii_16.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	src/font/lv_font_unscii_8.c	/^static const lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	tests/lv_test_fonts/font_1.c	/^static lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	tests/lv_test_fonts/font_2.c	/^static lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_dsc	tests/lv_test_fonts/font_3.c	/^static lv_font_fmt_txt_dsc_t font_dsc = {$/;"	v	file:
font_header_bin	src/font/lv_font_loader.c	/^typedef struct font_header_bin {$/;"	s	file:
font_header_bin_t	src/font/lv_font_loader.c	/^} font_header_bin_t;$/;"	t	typeref:struct:font_header_bin	file:
font_large	src/core/lv_theme.h	/^    const lv_font_t * font_large;$/;"	m	struct:_lv_theme_t
font_normal	src/core/lv_theme.h	/^    const lv_font_t * font_normal;$/;"	m	struct:_lv_theme_t
font_size	src/font/lv_font_loader.c	/^    uint16_t font_size;$/;"	m	struct:font_header_bin	file:
font_small	src/core/lv_theme.h	/^    const lv_font_t * font_small;$/;"	m	struct:_lv_theme_t
format_type	src/font/lv_font_loader.c	/^    uint8_t format_type;$/;"	m	struct:cmap_table_bin	file:
fp	src/font/lv_font_loader.c	/^    lv_fs_file_t * fp;$/;"	m	struct:__anon45	file:
fps_sum_all	src/core/lv_refr.c	/^    static uint32_t fps_sum_all;$/;"	v	file:
fps_sum_cnt	src/core/lv_refr.c	/^    static uint32_t fps_sum_cnt;$/;"	v	file:
frag_pct	src/misc/lv_mem.h	/^    uint8_t frag_pct; \/**< Amount of fragmentation*\/$/;"	m	struct:__anon23
frame_id	src/draw/lv_draw_img.h	/^    int32_t frame_id;$/;"	m	struct:__anon87
frame_id	src/draw/lv_img_decoder.h	/^    int32_t frame_id;$/;"	m	struct:_lv_img_decoder_dsc_t
free	src/misc/lv_fs.c	26;"	d	file:
free_biggest_size	src/misc/lv_mem.h	/^    uint32_t free_biggest_size;$/;"	m	struct:__anon23
free_cnt	src/misc/lv_mem.h	/^    uint32_t free_cnt;$/;"	m	struct:__anon23
free_size	src/misc/lv_mem.h	/^    uint32_t free_size; \/**< Size of available memory*\/$/;"	m	struct:__anon23
frozen	src/core/lv_group.h	/^    uint8_t frozen : 1;         \/**< 1: can't focus to new object*\/$/;"	m	struct:_lv_group_t
fs_close	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_close (lv_fs_drv_t * drv, void * file_p)$/;"	f	file:
fs_dir_close	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_dir_close (lv_fs_drv_t * drv, void * rddir_p)$/;"	f	file:
fs_dir_open	examples/porting/lv_port_fs_template.c	/^static void * fs_dir_open (lv_fs_drv_t * drv, void * rddir_p, const char *path)$/;"	f	file:
fs_dir_read	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_dir_read (lv_fs_drv_t * drv, void * rddir_p, char *fn)$/;"	f	file:
fs_init	examples/porting/lv_port_fs_template.c	/^static void fs_init(void)$/;"	f	file:
fs_open	examples/porting/lv_port_fs_template.c	/^static void * fs_open (lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)$/;"	f	file:
fs_read	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_read (lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)$/;"	f	file:
fs_seek	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_seek (lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence)$/;"	f	file:
fs_tell	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_tell (lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)$/;"	f	file:
fs_write	examples/porting/lv_port_fs_template.c	/^static lv_fs_res_t fs_write(lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw)$/;"	f	file:
full	src/misc/lv_color.h	/^    uint16_t full;$/;"	m	union:__anon35
full	src/misc/lv_color.h	/^    uint32_t full;$/;"	m	union:__anon37
full	src/misc/lv_color.h	/^    uint8_t full; \/*must be declared first to set all bits of byte via initializer list*\/$/;"	m	union:__anon31
full	src/misc/lv_color.h	/^    uint8_t full;$/;"	m	union:__anon33
full_refresh	src/hal/lv_hal_disp.h	/^    uint32_t full_refresh : 1;       \/**< 1: Always make the whole screen redrawn*\/$/;"	m	struct:_lv_disp_drv_t
gesture_dir	src/hal/lv_hal_indev.h	/^            lv_dir_t gesture_dir : 4;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
gesture_limit	src/hal/lv_hal_indev.h	/^    uint8_t gesture_limit;$/;"	m	struct:_lv_indev_drv_t
gesture_min_velocity	src/hal/lv_hal_indev.h	/^    uint8_t gesture_min_velocity;$/;"	m	struct:_lv_indev_drv_t
gesture_sent	src/hal/lv_hal_indev.h	/^            uint8_t gesture_sent : 1;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
gesture_sum	src/hal/lv_hal_indev.h	/^            lv_point_t gesture_sum; \/*Count the gesture pixels to check LV_INDEV_DEF_GESTURE_LIMIT*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
get_angle	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static uint16_t get_angle(lv_obj_t * obj)$/;"	f	file:
get_bits	src/font/lv_font_fmt_txt.c	/^static inline uint8_t get_bits(const uint8_t * in, uint32_t bit_pos, uint8_t len)$/;"	f	file:
get_button_from_point	src/widgets/lv_btnmatrix.c	/^static uint16_t get_button_from_point(lv_obj_t * obj, lv_point_t * p)$/;"	f	file:
get_button_width	src/widgets/lv_btnmatrix.c	/^static uint8_t get_button_width(lv_btnmatrix_ctrl_t ctrl_bits)$/;"	f	file:
get_cell_col_align	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_cell_col_align(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_x_align(obj, 0); }$/;"	f	file:
get_cell_row_align	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_cell_row_align(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_y_align(obj, 0); }$/;"	f	file:
get_center	src/widgets/lv_arc.c	/^static void get_center(lv_obj_t * obj, lv_point_t * center, lv_coord_t * arc_r)$/;"	f	file:
get_col_dsc	src/extra/layouts/grid/lv_grid.c	/^static inline const lv_coord_t * get_col_dsc(lv_obj_t * obj) {return lv_obj_get_style_grid_column_dsc_array(obj, 0); }$/;"	f	file:
get_col_pos	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_col_pos(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_column_pos(obj, 0); }$/;"	f	file:
get_col_span	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_col_span(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_column_span(obj, 0); }$/;"	f	file:
get_day_of_week	src/extra/widgets/calendar/lv_calendar.c	/^static uint8_t get_day_of_week(uint32_t year, uint32_t month, uint32_t day)$/;"	f	file:
get_glyph_bitmap	src/font/lv_font.h	/^    const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_t *, uint32_t);$/;"	m	struct:_lv_font_t
get_glyph_dsc	src/font/lv_font.h	/^    bool (*get_glyph_dsc)(const struct _lv_font_t *, lv_font_glyph_dsc_t *, uint32_t letter, uint32_t letter_next);$/;"	m	struct:_lv_font_t
get_glyph_dsc_id	src/font/lv_font_fmt_txt.c	/^static uint32_t get_glyph_dsc_id(const lv_font_t * font, uint32_t letter)$/;"	f	file:
get_grid_col_align	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_grid_col_align(lv_obj_t * obj) {return lv_obj_get_style_grid_column_align(obj, 0); }$/;"	f	file:
get_grid_row_align	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_grid_row_align(lv_obj_t * obj) {return lv_obj_get_style_grid_row_align(obj, 0); }$/;"	f	file:
get_id_on_point	src/widgets/lv_dropdown.c	/^static uint16_t get_id_on_point(lv_obj_t * dropdown_obj, lv_coord_t y)$/;"	f	file:
get_indev	src/core/lv_group.c	/^static lv_indev_t * get_indev(const lv_group_t * g)$/;"	f	file:
get_index_from_x	src/extra/widgets/chart/lv_chart.c	/^static uint32_t get_index_from_x(lv_obj_t * obj, lv_coord_t x)$/;"	f	file:
get_instance_size	src/core/lv_obj_class.c	/^static uint32_t get_instance_size(const lv_obj_class_t * class_p)$/;"	f	file:
get_kern_value	src/font/lv_font_fmt_txt.c	/^static int8_t get_kern_value(const lv_font_t * font, uint32_t gid_left, uint32_t gid_right)$/;"	f	file:
get_knob_area	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static lv_area_t get_knob_area(lv_obj_t * obj)$/;"	f	file:
get_knob_area	src/widgets/lv_arc.c	/^static void get_knob_area(lv_obj_t * obj, const lv_point_t * center, lv_coord_t r, lv_area_t * knob_area)$/;"	f	file:
get_label	src/widgets/lv_dropdown.c	/^static lv_obj_t * get_label(const lv_obj_t * obj)$/;"	f	file:
get_label	src/widgets/lv_roller.c	/^static lv_obj_t * get_label(const lv_obj_t * obj)$/;"	f	file:
get_local_style	src/core/lv_obj_style.c	/^static lv_style_t * get_local_style(lv_obj_t * obj,  lv_style_selector_t selector)$/;"	f	file:
get_month_length	src/extra/widgets/calendar/lv_calendar.c	/^static uint8_t get_month_length(int32_t year, int32_t month)$/;"	f	file:
get_next_item	src/extra/layouts/flex/lv_flex.c	/^static lv_obj_t * get_next_item(lv_obj_t * cont, bool rev, int32_t * item_id)$/;"	f	file:
get_next_run	src/misc/lv_bidi.c	/^static lv_base_dir_t get_next_run(const char * txt, lv_base_dir_t base_dir, uint32_t max_len, uint32_t * len,$/;"	f	file:
get_pressed_cell	src/widgets/lv_table.c	/^static lv_res_t get_pressed_cell(lv_obj_t * obj, uint16_t * row, uint16_t * col)$/;"	f	file:
get_prop_core	src/core/lv_obj_style.c	/^static bool get_prop_core(const lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop, lv_style_value_t * v)$/;"	f	file:
get_rounded_area	src/draw/lv_draw_arc.c	/^static void get_rounded_area(int16_t angle, lv_coord_t radius, uint8_t thickness, lv_area_t * res_area)$/;"	f	file:
get_row_dsc	src/extra/layouts/grid/lv_grid.c	/^static inline const lv_coord_t * get_row_dsc(lv_obj_t * obj) {return lv_obj_get_style_grid_row_dsc_array(obj, 0); }$/;"	f	file:
get_row_height	src/widgets/lv_table.c	/^static lv_coord_t get_row_height(lv_obj_t * obj, uint16_t row_id, const lv_font_t * font,$/;"	f	file:
get_row_pos	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_row_pos(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_row_pos(obj, 0); }$/;"	f	file:
get_row_span	src/extra/layouts/grid/lv_grid.c	/^static inline uint8_t get_row_span(lv_obj_t * obj) {return lv_obj_get_style_grid_cell_row_span(obj, 0); }$/;"	f	file:
get_selected_label_width	src/widgets/lv_roller.c	/^static lv_coord_t get_selected_label_width(const lv_obj_t * obj)$/;"	f	file:
get_state	src/extra/widgets/imgbtn/lv_imgbtn.c	/^lv_imgbtn_state_t get_state(const lv_obj_t * imgbtn)$/;"	f
get_tick_gsc	src/extra/widgets/chart/lv_chart.c	/^lv_chart_tick_dsc_t * get_tick_gsc(lv_obj_t * obj, lv_chart_axis_t axis)$/;"	f
get_trans_style	src/core/lv_obj_style.c	/^static _lv_obj_style_t * get_trans_style(lv_obj_t * obj,  lv_style_selector_t selector)$/;"	f	file:
get_txt_coords	src/extra/widgets/span/lv_span.c	/^static void get_txt_coords(const lv_obj_t * obj, lv_area_t * area)$/;"	f	file:
get_txt_len	src/misc/lv_bidi.c	/^static uint32_t get_txt_len(const char * txt, uint32_t max_len)$/;"	f	file:
get_value_cb	src/misc/lv_anim.h	/^    lv_anim_get_value_cb_t get_value_cb; \/**< Get the current value in relative mode*\/$/;"	m	struct:_lv_anim_t
glyph_bitmap	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_fmt_txt.h	/^    const uint8_t * glyph_bitmap;$/;"	m	struct:__anon53
glyph_bitmap	src/font/lv_font_montserrat_10.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_12.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_12_subpx.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_14.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_16.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_18.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_20.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_22.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_24.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_26.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_28.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_28_compressed.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_30.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_32.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_34.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_36.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_38.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_40.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_42.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_44.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_46.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_48.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_montserrat_8.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_simsun_16_cjk.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_unscii_16.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_bitmap	src/font/lv_font_unscii_8.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_fmt_txt.h	/^    const lv_font_fmt_txt_glyph_dsc_t * glyph_dsc;$/;"	m	struct:__anon53
glyph_dsc	src/font/lv_font_montserrat_10.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_12.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_12_subpx.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_14.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_16.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_18.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_20.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_22.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_24.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_26.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_28.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_28_compressed.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_30.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_32.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_34.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_36.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_38.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_40.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_42.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_44.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_46.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_48.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_montserrat_8.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_simsun_16_cjk.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_unscii_16.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	src/font/lv_font_unscii_8.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	tests/lv_test_fonts/font_1.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	tests/lv_test_fonts/font_2.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_dsc	tests/lv_test_fonts/font_3.c	/^static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {$/;"	v	file:
glyph_id_format	src/font/lv_font_loader.c	/^    uint8_t glyph_id_format;$/;"	m	struct:font_header_bin	file:
glyph_id_ofs_list	src/font/lv_font_fmt_txt.h	/^    const void * glyph_id_ofs_list;$/;"	m	struct:__anon48
glyph_id_ofs_list_4	src/font/lv_font_simsun_16_cjk.c	/^static const uint8_t glyph_id_ofs_list_4[] = {$/;"	v	file:
glyph_id_ofs_list_5	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const uint8_t glyph_id_ofs_list_5[] = {$/;"	v	file:
glyph_id_start	src/font/lv_font_fmt_txt.h	/^    uint16_t glyph_id_start;$/;"	m	struct:__anon48
glyph_id_start	src/font/lv_font_loader.c	/^    uint16_t glyph_id_start;$/;"	m	struct:cmap_table_bin	file:
glyph_ids	src/font/lv_font_fmt_txt.h	/^    const void * glyph_ids;$/;"	m	struct:__anon49
glyph_ids_size	src/font/lv_font_fmt_txt.h	/^    uint32_t glyph_ids_size : 2;    \/*0: `glyph_ids` is stored as `uint8_t`; 1: as `uint16_t`*\/$/;"	m	struct:__anon49
gpu_fill_cb	src/hal/lv_hal_disp.h	/^    void (*gpu_fill_cb)(struct _lv_disp_drv_t * disp_drv, lv_color_t * dest_buf, lv_coord_t dest_width,$/;"	m	struct:_lv_disp_drv_t
gpu_wait_cb	src/hal/lv_hal_disp.h	/^    void (*gpu_wait_cb)(struct _lv_disp_drv_t * disp_drv);$/;"	m	struct:_lv_disp_drv_t
grad_get	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static inline lv_color_t grad_get(const lv_draw_rect_dsc_t * dsc, lv_coord_t s, lv_coord_t i)$/;"	f	file:
green	src/misc/lv_color.h	/^        uint16_t green : 6;$/;"	m	struct:__anon35::__anon36
green	src/misc/lv_color.h	/^        uint8_t green : 3;$/;"	m	struct:__anon33::__anon34
green	src/misc/lv_color.h	/^        uint8_t green;$/;"	m	struct:__anon37::__anon38
green_slider	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;$/;"	v	file:
grey_filter_cb	src/extra/themes/basic/lv_theme_basic.c	/^static lv_color_t grey_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t color, lv_opa_t opa)$/;"	f	file:
grey_filter_cb	src/extra/themes/default/lv_theme_default.c	/^static lv_color_t grey_filter_cb(const lv_color_filter_dsc_t * f, lv_color_t color, lv_opa_t opa)$/;"	f	file:
grid_abs	src/extra/layouts/grid/lv_grid.c	/^    lv_point_t grid_abs;$/;"	m	struct:__anon145	file:
grid_align	src/extra/layouts/grid/lv_grid.c	/^static lv_coord_t grid_align(lv_coord_t cont_size,  bool auto_size, uint8_t align, lv_coord_t gap, uint32_t track_num, lv_coord_t * size_array, lv_coord_t * pos_array, bool reverse)$/;"	f	file:
grid_h	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t grid_h;$/;"	m	struct:__anon146	file:
grid_update	src/extra/layouts/grid/lv_grid.c	/^static void grid_update(lv_obj_t * cont, void * user_data)$/;"	f	file:
grid_w	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t grid_w;$/;"	m	struct:__anon146	file:
group	src/hal/lv_hal_indev.h	/^    struct _lv_group_t * group;    \/**< Keypad destination group*\/$/;"	m	struct:_lv_indev_t	typeref:struct:_lv_indev_t::_lv_group_t
group_def	src/core/lv_obj_class.h	/^    uint32_t group_def : 2;            \/**< Value from ::lv_obj_class_group_def_t*\/$/;"	m	struct:_lv_obj_class_t
group_p	src/core/lv_obj.h	/^    lv_group_t * group_p;$/;"	m	struct:__anon186
grow	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t grow;$/;"	m	struct:__anon98	file:
grow_dsc	src/extra/layouts/flex/lv_flex.c	/^    grow_dsc_t * grow_dsc;$/;"	m	struct:__anon142	file:
grow_dsc_calc	src/extra/layouts/flex/lv_flex.c	/^    uint32_t grow_dsc_calc :1;$/;"	m	struct:__anon142	file:
grow_dsc_t	src/extra/layouts/flex/lv_flex.c	/^}grow_dsc_t;$/;"	t	typeref:struct:__anon141	file:
grow_item_cnt	src/extra/layouts/flex/lv_flex.c	/^    uint32_t grow_item_cnt;$/;"	m	struct:__anon142	file:
grow_value	src/extra/layouts/flex/lv_flex.c	/^    uint32_t grow_value;$/;"	m	struct:__anon141	file:
gylph_bitmap	tests/lv_test_fonts/font_1.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {$/;"	v	file:
gylph_bitmap	tests/lv_test_fonts/font_2.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {$/;"	v	file:
gylph_bitmap	tests/lv_test_fonts/font_3.c	/^static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {$/;"	v	file:
h	src/draw/lv_img_buf.h	/^    uint32_t h : 11; \/*Height of the image map*\/$/;"	m	struct:__anon63
h	src/draw/lv_img_buf.h	/^    uint32_t h : 11; \/*Height of the image map*\/$/;"	m	struct:__anon64
h	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t * h;$/;"	m	struct:__anon146	file:
h	src/misc/lv_color.h	/^    uint16_t h;$/;"	m	struct:__anon39
h	src/widgets/lv_img.h	/^    lv_coord_t h;          \/*Height of the image (Handled by the library)*\/$/;"	m	struct:__anon177
h_layout	src/core/lv_obj.h	/^    uint16_t h_layout   :1;$/;"	m	struct:_lv_obj_t
hal_init	tests/lv_test_main.c	/^static void hal_init(void)$/;"	f	file:
has_alpha	src/draw/lv_img_buf.h	/^        uint8_t has_alpha : 1;$/;"	m	struct:__anon66::__anon69
has_group	src/misc/lv_style.h	/^    uint8_t has_group;$/;"	m	struct:__anon20
hdiv_cnt	src/extra/widgets/chart/lv_chart.h	/^    uint16_t hdiv_cnt;      \/**< Number of horizontal division lines*\/$/;"	m	struct:__anon110
head	src/misc/lv_ll.h	/^    lv_ll_node_t * head;$/;"	m	struct:__anon10
header	src/draw/lv_img_buf.h	/^    lv_img_header_t header; \/**< A header describing the basics of the image*\/$/;"	m	struct:__anon65
header	src/draw/lv_img_decoder.h	/^    lv_img_header_t header;$/;"	m	struct:_lv_img_decoder_dsc_t
height	tests/lv_test_assert.c	/^    int width, height;$/;"	m	struct:__anon201	file:
height_def	src/core/lv_obj_class.h	/^    lv_coord_t height_def;$/;"	m	struct:_lv_obj_class_t
hex_char_to_num	src/draw/lv_draw_label.c	/^static uint8_t hex_char_to_num(char hex)$/;"	f	file:
hidden	src/extra/widgets/chart/lv_chart.h	/^    uint8_t hidden : 1;$/;"	m	struct:__anon107
highlight_update	src/extra/widgets/calendar/lv_calendar.c	/^static void highlight_update(lv_obj_t * obj)$/;"	f	file:
highlighted_dates	src/extra/widgets/calendar/lv_calendar.h	/^    lv_calendar_date_t * highlighted_dates; \/*Apply different style on these days (pointer to an array defined by the user)*\/$/;"	m	struct:__anon121
highlighted_dates_num	src/extra/widgets/calendar/lv_calendar.h	/^    uint16_t highlighted_dates_num;          \/*Number of elements in `highlighted_days`*\/$/;"	m	struct:__anon121
hint	src/widgets/lv_label.h	/^    lv_draw_label_hint_t hint;$/;"	m	struct:__anon168
hor_res	src/hal/lv_hal_disp.h	/^    lv_coord_t hor_res;         \/**< Horizontal resolution.*\/$/;"	m	struct:_lv_disp_drv_t
hsv	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    lv_color_hsv_t hsv;$/;"	m	struct:__anon112
i	src/misc/lv_math.h	/^    uint16_t i;$/;"	m	struct:__anon11
id	src/core/lv_obj_draw.h	/^    uint32_t id;                        \/**< The index of the part. E.g. a button's index on button matrix or table cell index.*\/$/;"	m	struct:__anon199
idle_last	src/misc/lv_timer.c	/^static uint8_t idle_last = 0;$/;"	v	file:
img	src/extra/widgets/animimg/lv_animimg.h	/^    lv_img_t img;$/;"	m	struct:__anon118
img	src/widgets/lv_canvas.h	/^    lv_img_t img;$/;"	m	struct:__anon159
img1	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * img1;$/;"	v	file:
img_caret_down	examples/assets/img_caret_down.c	/^const lv_img_dsc_t img_caret_down = {$/;"	v
img_caret_down_map	examples/assets/img_caret_down.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t img_caret_down_map[] = {$/;"	v
img_cogwheel_alpha16	examples/assets/img_cogwheel_alpha16.c	/^const lv_img_dsc_t img_cogwheel_alpha16 = {$/;"	v
img_cogwheel_alpha16_map	examples/assets/img_cogwheel_alpha16.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ALPHA16 uint8_t img_cogwheel_alpha16_map[] = {$/;"	v
img_cogwheel_argb	examples/assets/img_cogwheel_argb.c	/^const lv_img_dsc_t img_cogwheel_argb = {$/;"	v
img_cogwheel_argb_map	examples/assets/img_cogwheel_argb.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGB uint8_t img_cogwheel_argb_map[] = {$/;"	v
img_cogwheel_chroma_keyed	examples/assets/img_cogwheel_chroma_keyed.c	/^const lv_img_dsc_t img_cogwheel_chroma_keyed = {$/;"	v
img_cogwheel_chroma_keyed_map	examples/assets/img_cogwheel_chroma_keyed.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYED uint8_t img_cogwheel_chroma_keyed_map[] = {$/;"	v
img_cogwheel_indexed16	examples/assets/img_cogwheel_indexed16.c	/^const lv_img_dsc_t img_cogwheel_indexed16 = {$/;"	v
img_cogwheel_indexed16_map	examples/assets/img_cogwheel_indexed16.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED16 uint8_t img_cogwheel_indexed16_map[] = {$/;"	v
img_cogwheel_rgb	examples/assets/img_cogwheel_rgb.c	/^const lv_img_dsc_t img_cogwheel_rgb = {$/;"	v
img_cogwheel_rgb_map	examples/assets/img_cogwheel_rgb.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGB uint8_t img_cogwheel_rgb_map[] = {$/;"	v
img_data	src/draw/lv_img_decoder.h	/^    const uint8_t * img_data;$/;"	m	struct:_lv_img_decoder_dsc_t
img_dsc	src/core/lv_obj_draw.h	/^    lv_draw_img_dsc_t *  img_dsc;       \/**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for image-like parts*\/$/;"	m	struct:__anon199
img_dsc	src/draw/lv_img_buf.h	/^        lv_img_dsc_t img_dsc;$/;"	m	struct:__anon66::__anon69
img_hand	examples/assets/img_hand.c	/^const lv_img_dsc_t img_hand = {$/;"	v
img_hand_map	examples/assets/img_hand.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_HAND uint8_t img_hand_map[] = {$/;"	v
img_skew_strip	examples/assets/img_skew_strip.c	/^const lv_img_dsc_t img_skew_strip = {$/;"	v
img_skew_strip_map	examples/assets/img_skew_strip.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_SKEW_STRIP uint8_t img_skew_strip_map[] = {$/;"	v
img_src	src/draw/lv_draw_arc.h	/^    const void * img_src;$/;"	m	struct:__anon61
img_src_left	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    const void * img_src_left[_LV_IMGBTN_STATE_NUM];  \/*Store left side images to each state*\/$/;"	m	struct:__anon103
img_src_mid	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    const void * img_src_mid[_LV_IMGBTN_STATE_NUM];   \/*Store center images to each state*\/$/;"	m	struct:__anon103
img_src_right	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    const void * img_src_right[_LV_IMGBTN_STATE_NUM]; \/*Store right side images to each state*\/$/;"	m	struct:__anon103
img_star	examples/assets/img_star.c	/^const lv_img_dsc_t img_star = {$/;"	v
img_star_map	examples/assets/img_star.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_STAR uint8_t img_star_map[] = {$/;"	v
imgbtn_left	examples/assets/imgbtn_left.c	/^const lv_img_dsc_t imgbtn_left = {$/;"	v
imgbtn_left_map	examples/assets/imgbtn_left.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_LEFT uint8_t imgbtn_left_map[] = {$/;"	v
imgbtn_mid	examples/assets/imgbtn_mid.c	/^const lv_img_dsc_t imgbtn_mid = {$/;"	v
imgbtn_mid_map	examples/assets/imgbtn_mid.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_MID uint8_t imgbtn_mid_map[] = {$/;"	v
imgbtn_right	examples/assets/imgbtn_right.c	/^const lv_img_dsc_t imgbtn_right = {$/;"	v
imgbtn_right_map	examples/assets/imgbtn_right.c	/^const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_RIGHT uint8_t imgbtn_right_map[] = {$/;"	v
indent	src/extra/widgets/span/lv_span.h	/^    lv_coord_t indent;$/;"	m	struct:__anon135
indev_act	src/core/lv_indev.c	/^static lv_indev_t * indev_act;$/;"	v	file:
indev_button	examples/porting/lv_port_indev_template.c	/^lv_indev_t * indev_button;$/;"	v
indev_button_proc	src/core/lv_indev.c	/^static void indev_button_proc(lv_indev_t * i, lv_indev_data_t * data)$/;"	f	file:
indev_click_focus	src/core/lv_indev.c	/^static void indev_click_focus(_lv_indev_proc_t * proc)$/;"	f	file:
indev_encoder	examples/porting/lv_port_indev_template.c	/^lv_indev_t * indev_encoder;$/;"	v
indev_encoder_proc	src/core/lv_indev.c	/^static void indev_encoder_proc(lv_indev_t * i, lv_indev_data_t * data)$/;"	f	file:
indev_gesture	src/core/lv_indev.c	/^void indev_gesture(_lv_indev_proc_t * proc)$/;"	f
indev_keypad	examples/porting/lv_port_indev_template.c	/^lv_indev_t * indev_keypad;$/;"	v
indev_keypad_proc	src/core/lv_indev.c	/^static void indev_keypad_proc(lv_indev_t * i, lv_indev_data_t * data)$/;"	f	file:
indev_mouse	examples/porting/lv_port_indev_template.c	/^lv_indev_t * indev_mouse;$/;"	v
indev_obj_act	src/core/lv_indev.c	/^static lv_obj_t * indev_obj_act = NULL;$/;"	v	file:
indev_pointer_proc	src/core/lv_indev.c	/^static void indev_pointer_proc(lv_indev_t * i, lv_indev_data_t * data)$/;"	f	file:
indev_proc_press	src/core/lv_indev.c	/^static void indev_proc_press(_lv_indev_proc_t * proc)$/;"	f	file:
indev_proc_release	src/core/lv_indev.c	/^static void indev_proc_release(_lv_indev_proc_t * proc)$/;"	f	file:
indev_proc_reset_query_handler	src/core/lv_indev.c	/^static void indev_proc_reset_query_handler(lv_indev_t * indev)$/;"	f	file:
indev_reset_check	src/core/lv_indev.c	/^static bool indev_reset_check(_lv_indev_proc_t * proc)$/;"	f	file:
indev_touchpad	examples/porting/lv_port_indev_template.c	/^lv_indev_t * indev_touchpad;$/;"	v
index	src/extra/widgets/span/lv_span.c	/^    uint16_t        index;$/;"	m	struct:_snippet_stack	file:
index_change	src/extra/widgets/animimg/lv_animimg.c	/^static void index_change(lv_obj_t * obj, int32_t index)$/;"	f	file:
index_to_loc_format	src/font/lv_font_loader.c	/^    uint8_t index_to_loc_format;$/;"	m	struct:font_header_bin	file:
indic	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t indic;$/;"	m	struct:__anon98	file:
indic_angle_end	src/widgets/lv_arc.h	/^    uint16_t indic_angle_end;$/;"	m	struct:__anon166
indic_angle_start	src/widgets/lv_arc.h	/^    uint16_t indic_angle_start;$/;"	m	struct:__anon166
indic_area	src/widgets/lv_bar.h	/^    lv_area_t indic_area;       \/**< Save the indicator area. Might be used by derived types*\/$/;"	m	struct:__anon176
indicator_ll	src/extra/widgets/meter/lv_meter.h	/^    lv_ll_t indicator_ll;$/;"	m	struct:__anon131
inf_normalize	src/widgets/lv_roller.c	/^static void inf_normalize(lv_obj_t * obj)$/;"	f	file:
info_cb	src/draw/lv_img_decoder.h	/^    lv_img_decoder_info_f_t info_cb;$/;"	m	struct:_lv_img_decoder_t
info_ptr	tests/lv_test_assert.c	/^    png_infop info_ptr;$/;"	m	struct:__anon201	file:
init_bit_iterator	src/font/lv_font_loader.c	/^static bit_iterator_t init_bit_iterator(lv_fs_file_t * fp)$/;"	f	file:
init_scroll_limits	src/core/lv_indev_scroll.c	/^static void init_scroll_limits(_lv_indev_proc_t * proc)$/;"	f	file:
init_vg_buf	src/gpu/lv_gpu_nxp_vglite.c	/^static lv_res_t init_vg_buf(vg_lite_buffer_t * dst, uint32_t width, uint32_t height, uint32_t stride,$/;"	f	file:
inited	src/extra/themes/basic/lv_theme_basic.c	/^static bool inited;$/;"	v	file:
inited	src/extra/themes/default/lv_theme_default.c	/^static bool inited;$/;"	v	file:
inited	src/extra/themes/mono/lv_theme_mono.c	/^static bool inited;$/;"	v	file:
insert_free_block	src/misc/lv_tlsf.c	/^static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)$/;"	f	file:
insert_handler	src/widgets/lv_textarea.c	/^static lv_res_t insert_handler(lv_obj_t * obj, const char * txt)$/;"	f	file:
instance_size	src/core/lv_obj_class.h	/^    uint32_t instance_size : 16;$/;"	m	struct:_lv_obj_class_t
integrity_t	src/misc/lv_tlsf.c	/^typedef struct integrity_t$/;"	s	file:
integrity_t	src/misc/lv_tlsf.c	/^} integrity_t;$/;"	t	typeref:struct:integrity_t	file:
integrity_walker	src/misc/lv_tlsf.c	/^static void integrity_walker(void* ptr, size_t size, int used, void* user)$/;"	f	file:
intense_slider	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;$/;"	v	file:
inv	src/draw/lv_draw_mask.h	/^    uint8_t inv: 1;$/;"	m	struct:__anon77
inv	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t inv;$/;"	m	struct:__anon101	file:
inv_arc	src/extra/widgets/meter/lv_meter.c	/^static void inv_arc(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t old_value, int32_t new_value)$/;"	f	file:
inv_arc_area	src/widgets/lv_arc.c	/^static void inv_arc_area(lv_obj_t * obj, uint16_t start_angle, uint16_t end_angle, lv_part_t part)$/;"	f	file:
inv_area_joined	src/hal/lv_hal_disp.h	/^    uint8_t inv_area_joined[LV_INV_BUF_SIZE];$/;"	m	struct:_lv_disp_t
inv_areas	src/hal/lv_hal_disp.h	/^    lv_area_t inv_areas[LV_INV_BUF_SIZE];$/;"	m	struct:_lv_disp_t
inv_line	src/extra/widgets/meter/lv_meter.c	/^static void inv_line(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)$/;"	f	file:
inv_p	src/hal/lv_hal_disp.h	/^    uint16_t inv_p;$/;"	m	struct:_lv_disp_t
invalidate_button_area	src/widgets/lv_btnmatrix.c	/^static void invalidate_button_area(const lv_obj_t * obj, uint16_t btn_idx)$/;"	f	file:
invalidate_cache	src/gpu/lv_gpu_stm32_dma2d.c	/^static void invalidate_cache(void)$/;"	f	file:
invalidate_knob	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void invalidate_knob(lv_obj_t * obj)$/;"	f	file:
invalidate_layout_cb	src/hal/lv_hal_disp.c	/^static lv_obj_tree_walk_res_t invalidate_layout_cb(lv_obj_t * obj, void * user_data)$/;"	f	file:
invalidate_point	src/extra/widgets/chart/lv_chart.c	/^static void invalidate_point(lv_obj_t * obj, uint16_t i)$/;"	f	file:
is_break_char	src/extra/widgets/span/lv_span.c	/^static inline bool is_break_char(uint32_t letter)$/;"	f	file:
is_break_char	src/misc/lv_txt.c	/^static inline bool is_break_char(uint32_t letter)$/;"	f	file:
is_const	src/misc/lv_style.h	/^    uint16_t is_const :1;$/;"	m	struct:__anon20
is_leap_year	src/extra/widgets/calendar/lv_calendar.c	/^static uint8_t is_leap_year(uint32_t year)$/;"	f	file:
is_local	src/core/lv_obj_style.h	/^    uint32_t is_local :1;$/;"	m	struct:__anon196
is_trans	src/core/lv_obj_style.h	/^    uint32_t is_trans :1;$/;"	m	struct:__anon196
item	src/extra/layouts/flex/lv_flex.c	/^    lv_obj_t * item;$/;"	m	struct:__anon141	file:
item_cnt	src/extra/layouts/flex/lv_flex.c	/^    uint32_t item_cnt;$/;"	m	struct:__anon142	file:
item_repos	src/extra/layouts/grid/lv_grid.c	/^static void item_repos(lv_obj_t * item, _lv_grid_calc_t * c, item_repos_hint_t * hint)$/;"	f	file:
item_repos_hint_t	src/extra/layouts/grid/lv_grid.c	/^}item_repos_hint_t;$/;"	t	typeref:struct:__anon145	file:
kb	examples/widgets/textarea/lv_example_textarea_2.c	/^static lv_obj_t * kb;$/;"	v	file:
kb	examples/widgets/textarea/lv_example_textarea_3.c	/^static lv_obj_t * kb;$/;"	v	file:
kb_ctrl	src/extra/widgets/keyboard/lv_keyboard.c	/^static const lv_btnmatrix_ctrl_t * kb_ctrl[5] = {$/;"	v	file:
kb_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static const char * * kb_map[5] = {$/;"	v	file:
keep_pedantic_happy	examples/porting/lv_port_disp_template.c	/^typedef int keep_pedantic_happy;$/;"	t	file:
keep_pedantic_happy	examples/porting/lv_port_fs_template.c	/^typedef int keep_pedantic_happy;$/;"	t	file:
keep_pedantic_happy	examples/porting/lv_port_indev_template.c	/^typedef int keep_pedantic_happy;$/;"	t	file:
keep_pedantic_happy	src/widgets/lv_objx_templ.c	/^typedef int keep_pedantic_happy;$/;"	t	file:
kern_class_values	src/font/lv_font_montserrat_10.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_12.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_12_subpx.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_14.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_16.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_18.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_20.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_22.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_24.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_26.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_28.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_28_compressed.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_30.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_32.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_34.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_36.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_38.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_40.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_42.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_44.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_46.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_48.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	src/font/lv_font_montserrat_8.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	tests/lv_test_fonts/font_1.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_class_values	tests/lv_test_fonts/font_2.c	/^static const int8_t kern_class_values[] =$/;"	v	file:
kern_classes	src/font/lv_font_fmt_txt.h	/^    uint16_t kern_classes   : 1;$/;"	m	struct:__anon53
kern_classes	src/font/lv_font_montserrat_10.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_12.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_12_subpx.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_14.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_16.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_18.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_20.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_22.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_24.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_26.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_28.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_28_compressed.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_30.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_32.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_34.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_36.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_38.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_40.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_42.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_44.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_46.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_48.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	src/font/lv_font_montserrat_8.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	tests/lv_test_fonts/font_1.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_classes	tests/lv_test_fonts/font_2.c	/^static const lv_font_fmt_txt_kern_classes_t kern_classes =$/;"	v	file:
kern_dsc	src/font/lv_font_fmt_txt.h	/^    const void * kern_dsc;$/;"	m	struct:__anon53
kern_left_class_mapping	src/font/lv_font_montserrat_10.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_12.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_12_subpx.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_14.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_16.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_18.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_20.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_22.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_24.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_26.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_28.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_28_compressed.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_30.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_32.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_34.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_36.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_38.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_40.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_42.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_44.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_46.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_48.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	src/font/lv_font_montserrat_8.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	tests/lv_test_fonts/font_1.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_left_class_mapping	tests/lv_test_fonts/font_2.c	/^static const uint8_t kern_left_class_mapping[] =$/;"	v	file:
kern_pair_16_compare	src/font/lv_font_fmt_txt.c	/^static int32_t kern_pair_16_compare(const void * ref, const void * element)$/;"	f	file:
kern_pair_8_compare	src/font/lv_font_fmt_txt.c	/^static int32_t kern_pair_8_compare(const void * ref, const void * element)$/;"	f	file:
kern_right_class_mapping	src/font/lv_font_montserrat_10.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_12.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_12_subpx.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_14.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_16.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_18.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_20.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_22.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_24.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_26.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_28.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_28_compressed.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_30.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_32.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_34.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_36.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_38.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_40.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_42.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_44.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_46.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_48.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	src/font/lv_font_montserrat_8.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	tests/lv_test_fonts/font_1.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_right_class_mapping	tests/lv_test_fonts/font_2.c	/^static const uint8_t kern_right_class_mapping[] =$/;"	v	file:
kern_scale	src/font/lv_font_fmt_txt.h	/^    uint16_t kern_scale;$/;"	m	struct:__anon53
kerning_scale	src/font/lv_font_loader.c	/^    uint16_t kerning_scale;$/;"	m	struct:font_header_bin	file:
key	src/hal/lv_hal_indev.h	/^    uint32_t key;     \/**< For LV_INDEV_TYPE_KEYPAD the currently pressed key*\/$/;"	m	struct:__anon92
keyboard_btn_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t keyboard_btn_bg;$/;"	m	struct:__anon98	file:
keypad	src/hal/lv_hal_indev.h	/^        } keypad;$/;"	m	union:_lv_indev_proc_t::__anon93	typeref:struct:_lv_indev_proc_t::__anon93::__anon95
keypad_get_key	examples/porting/lv_port_indev_template.c	/^static uint32_t keypad_get_key(void)$/;"	f	file:
keypad_init	examples/porting/lv_port_indev_template.c	/^static void keypad_init(void)$/;"	f	file:
keypad_read	examples/porting/lv_port_indev_template.c	/^static void keypad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)$/;"	f	file:
knob	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t knob;$/;"	m	struct:__anon98	file:
knob	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    } knob;$/;"	m	struct:__anon112	typeref:struct:__anon112::__anon113
label	examples/get_started/lv_example_get_started_3.c	/^static lv_obj_t * label;$/;"	v	file:
label	src/widgets/lv_textarea.h	/^    lv_obj_t * label;            \/*Label of the text area*\/$/;"	m	struct:__anon160
label_color	src/extra/widgets/meter/lv_meter.h	/^    int16_t label_color;$/;"	m	struct:__anon123
label_dsc	src/core/lv_obj_draw.h	/^    lv_draw_label_dsc_t * label_dsc;    \/**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for text-like parts*\/$/;"	m	struct:__anon199
label_en	src/extra/widgets/chart/lv_chart.h	/^    uint32_t label_en  :1;$/;"	m	struct:__anon109
label_gap	src/extra/widgets/meter/lv_meter.h	/^    int16_t label_gap;$/;"	m	struct:__anon123
large_border	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t large_border;$/;"	m	struct:__anon101	file:
large_line_space	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t large_line_space;$/;"	m	struct:__anon101	file:
last_activity_time	src/hal/lv_hal_disp.h	/^    uint32_t last_activity_time;        \/**< Last time when there was activity on this display*\/$/;"	m	struct:_lv_disp_t
last_angle	src/widgets/lv_arc.h	/^    int16_t last_angle; 		\/*Last dragging angle of the arc*\/$/;"	m	struct:__anon166
last_area	src/hal/lv_hal_disp.h	/^    volatile uint32_t last_area         : 1; \/*1: the last area is being rendered*\/$/;"	m	struct:_lv_disp_draw_buf_t
last_change_time	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    uint32_t last_change_time;$/;"	m	struct:__anon112
last_click_time	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    uint32_t last_click_time;$/;"	m	struct:__anon112
last_glyph_id	src/font/lv_font_fmt_txt.h	/^    uint32_t last_glyph_id;$/;"	m	struct:__anon52
last_key	src/hal/lv_hal_indev.h	/^            uint32_t last_key;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon95
last_letter	src/font/lv_font_fmt_txt.h	/^    uint32_t last_letter;$/;"	m	struct:__anon52
last_obj	src/hal/lv_hal_indev.h	/^            struct _lv_obj_t * last_obj;     \/*The last object which was pressed*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94	typeref:struct:_lv_indev_proc_t::__anon93::__anon94::_lv_obj_t
last_part	src/hal/lv_hal_disp.h	/^    volatile uint32_t last_part         : 1; \/*1: the last part of the current area is being rendered*\/$/;"	m	struct:_lv_disp_draw_buf_t
last_point	src/hal/lv_hal_indev.h	/^            lv_point_t last_point; \/**< Last point of input device.*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
last_press_point	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    lv_point_t last_press_point;$/;"	m	struct:__anon112
last_pressed	src/hal/lv_hal_indev.h	/^            struct _lv_obj_t * last_pressed; \/*The lastly pressed object*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94	typeref:struct:_lv_indev_proc_t::__anon93::__anon94::_lv_obj_t
last_raw_point	src/hal/lv_hal_indev.h	/^            lv_point_t last_raw_point; \/**< Last point read from read_cb. *\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
last_run	src/misc/lv_timer.h	/^    uint32_t last_run; \/**< Last time the timer ran*\/$/;"	m	struct:_lv_timer_t
last_state	src/hal/lv_hal_indev.h	/^            lv_indev_state_t last_state;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon95
last_tick	src/widgets/lv_arc.h	/^    uint32_t last_tick; 		\/*Last dragging event timestamp of the arc*\/$/;"	m	struct:__anon166
last_timer_run	src/misc/lv_anim.c	/^static uint32_t last_timer_run;$/;"	v	file:
layout_cnt	src/core/lv_obj_pos.c	/^static uint32_t layout_cnt;$/;"	v	file:
layout_inv	src/core/lv_obj.h	/^    uint16_t layout_inv :1;$/;"	m	struct:_lv_obj_t
layout_update_core	src/core/lv_obj_pos.c	/^static void layout_update_core(lv_obj_t * obj)$/;"	f	file:
led	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t led;$/;"	m	struct:__anon98	file:
left_class_cnt	src/font/lv_font_fmt_txt.h	/^    uint8_t left_class_cnt;$/;"	m	struct:__anon50
left_class_mapping	src/font/lv_font_fmt_txt.h	/^    const uint8_t * left_class_mapping;   \/*Map the glyph_ids to classes: index -> glyph_id -> class_id*\/$/;"	m	struct:__anon50
left_knob_area	src/widgets/lv_slider.h	/^    lv_area_t left_knob_area;$/;"	m	struct:__anon158
left_knob_focus	src/widgets/lv_slider.h	/^    uint8_t left_knob_focus : 1; \/*1: with encoder now the right knob can be adjusted*\/$/;"	m	struct:__anon158
letter	src/misc/lv_fs.h	/^    char letter;$/;"	m	struct:_lv_fs_drv_t
letter_space	src/draw/lv_draw_label.h	/^    lv_coord_t letter_space;$/;"	m	struct:__anon58
letter_space	src/extra/widgets/span/lv_span.c	/^    lv_coord_t letter_space;$/;"	m	struct:__anon136	file:
life	src/draw/lv_img_cache.h	/^    int32_t life;$/;"	m	struct:__anon88
light	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t light;$/;"	m	struct:__anon97	file:
light	src/extra/themes/default/lv_theme_default.c	/^    uint8_t light :1;$/;"	m	struct:__anon99	file:
line	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t line;$/;"	m	struct:__anon98	file:
line_dsc	src/core/lv_obj_draw.h	/^    lv_draw_line_dsc_t * line_dsc;      \/**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for line-like parts*\/$/;"	m	struct:__anon199
line_h	src/extra/widgets/span/lv_span.c	/^    lv_coord_t line_h;$/;"	m	struct:__anon136	file:
line_height	src/font/lv_font.h	/^    lv_coord_t line_height;         \/**< The real line height where any text fits*\/$/;"	m	struct:_lv_font_t
line_mask_flat	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,$/;"	f	file:
line_mask_steep	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,$/;"	f	file:
line_space	src/draw/lv_draw_label.h	/^    lv_coord_t line_space;$/;"	m	struct:__anon58
line_space_large	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t line_space_large;$/;"	m	struct:__anon98	file:
line_start	src/draw/lv_draw_label.h	/^    int32_t line_start;$/;"	m	struct:_lv_draw_label_hint_t
list	src/widgets/lv_dropdown.h	/^    lv_obj_t * list;                \/**< The dropped down list*\/$/;"	m	struct:__anon172
list1	examples/widgets/list/lv_example_list_1.c	/^static lv_obj_t * list1;$/;"	v	file:
list_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t list_bg, list_btn, list_item_grow, list_label;$/;"	m	struct:__anon98	file:
list_btn	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t list_bg, list_btn, list_item_grow, list_label;$/;"	m	struct:__anon98	file:
list_item_grow	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t list_bg, list_btn, list_item_grow, list_label;$/;"	m	struct:__anon98	file:
list_label	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t list_bg, list_btn, list_item_grow, list_label;$/;"	m	struct:__anon98	file:
list_length	src/font/lv_font_fmt_txt.h	/^    uint16_t list_length;$/;"	m	struct:__anon48
list_release_handler	src/widgets/lv_dropdown.c	/^static lv_res_t list_release_handler(lv_obj_t * list_obj)$/;"	f	file:
load_cmaps	src/font/lv_font_loader.c	/^static int32_t load_cmaps(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc, uint32_t cmaps_start)$/;"	f	file:
load_cmaps_tables	src/font/lv_font_loader.c	/^static bool load_cmaps_tables(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc,$/;"	f	file:
load_glyph	src/font/lv_font_loader.c	/^static int32_t load_glyph(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc,$/;"	f	file:
load_kern	src/font/lv_font_loader.c	/^int32_t load_kern(lv_fs_file_t * fp, lv_font_fmt_txt_dsc_t * font_dsc, uint8_t format, uint32_t start)$/;"	f
local_grad	src/extra/widgets/meter/lv_meter.h	/^            uint8_t local_grad  :1;$/;"	m	struct:__anon125::__anon126::__anon130
long_mode	src/widgets/lv_label.h	/^    lv_label_long_mode_t long_mode : 3; \/*Determinate what to do with the long texts*\/$/;"	m	struct:__anon168
long_pr_sent	src/hal/lv_hal_indev.h	/^    uint8_t long_pr_sent : 1;$/;"	m	struct:_lv_indev_proc_t
long_press_repeat_time	src/hal/lv_hal_indev.h	/^    uint16_t long_press_repeat_time;$/;"	m	struct:_lv_indev_drv_t
long_press_time	src/hal/lv_hal_indev.h	/^    uint16_t long_press_time;$/;"	m	struct:_lv_indev_drv_t
longpr_rep_timestamp	src/hal/lv_hal_indev.h	/^    uint32_t longpr_rep_timestamp; \/**< Long press repeat time stamp*\/$/;"	m	struct:_lv_indev_proc_t
lv_align_t	src/misc/lv_area.h	/^typedef uint8_t lv_align_t;$/;"	t
lv_anim_count_running	src/misc/lv_anim.c	/^uint16_t lv_anim_count_running(void)$/;"	f
lv_anim_custom_del	src/misc/lv_anim.h	/^static inline bool lv_anim_custom_del(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)$/;"	f
lv_anim_custom_exec_cb_t	src/misc/lv_anim.h	/^typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);$/;"	t
lv_anim_del	src/misc/lv_anim.c	/^bool lv_anim_del(void * var, lv_anim_exec_xcb_t exec_cb)$/;"	f
lv_anim_del_all	src/misc/lv_anim.c	/^void lv_anim_del_all(void)$/;"	f
lv_anim_enable_t	src/misc/lv_anim.h	/^}lv_anim_enable_t;$/;"	t	typeref:enum:__anon22
lv_anim_exec_xcb_t	src/misc/lv_anim.h	/^typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);$/;"	t
lv_anim_get	src/misc/lv_anim.c	/^lv_anim_t * lv_anim_get(void * var, lv_anim_exec_xcb_t exec_cb)$/;"	f
lv_anim_get_delay	src/misc/lv_anim.h	/^static inline uint32_t lv_anim_get_delay(lv_anim_t * a)$/;"	f
lv_anim_get_value_cb_t	src/misc/lv_anim.h	/^typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);$/;"	t
lv_anim_init	src/misc/lv_anim.c	/^void lv_anim_init(lv_anim_t * a)$/;"	f
lv_anim_path_bounce	src/misc/lv_anim.c	/^int32_t lv_anim_path_bounce(const lv_anim_t * a)$/;"	f
lv_anim_path_cb_t	src/misc/lv_anim.h	/^typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);$/;"	t
lv_anim_path_ease_in	src/misc/lv_anim.c	/^int32_t lv_anim_path_ease_in(const lv_anim_t * a)$/;"	f
lv_anim_path_ease_in_out	src/misc/lv_anim.c	/^int32_t lv_anim_path_ease_in_out(const lv_anim_t * a)$/;"	f
lv_anim_path_ease_out	src/misc/lv_anim.c	/^int32_t lv_anim_path_ease_out(const lv_anim_t * a)$/;"	f
lv_anim_path_linear	src/misc/lv_anim.c	/^int32_t lv_anim_path_linear(const lv_anim_t * a)$/;"	f
lv_anim_path_overshoot	src/misc/lv_anim.c	/^int32_t lv_anim_path_overshoot(const lv_anim_t * a)$/;"	f
lv_anim_path_step	src/misc/lv_anim.c	/^int32_t lv_anim_path_step(const lv_anim_t * a)$/;"	f
lv_anim_ready_cb_t	src/misc/lv_anim.h	/^typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);$/;"	t
lv_anim_refr_now	src/misc/lv_anim.c	/^void lv_anim_refr_now(void)$/;"	f
lv_anim_set_custom_exec_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)$/;"	f
lv_anim_set_delay	src/misc/lv_anim.h	/^static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)$/;"	f
lv_anim_set_early_apply	src/misc/lv_anim.h	/^static inline void lv_anim_set_early_apply(lv_anim_t * a, bool en)$/;"	f
lv_anim_set_exec_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)$/;"	f
lv_anim_set_get_value_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)$/;"	f
lv_anim_set_path_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)$/;"	f
lv_anim_set_playback_delay	src/misc/lv_anim.h	/^static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)$/;"	f
lv_anim_set_playback_time	src/misc/lv_anim.h	/^static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)$/;"	f
lv_anim_set_ready_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)$/;"	f
lv_anim_set_repeat_count	src/misc/lv_anim.h	/^static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)$/;"	f
lv_anim_set_repeat_delay	src/misc/lv_anim.h	/^static inline void lv_anim_set_repeat_delay(lv_anim_t * a, uint32_t delay)$/;"	f
lv_anim_set_start_cb	src/misc/lv_anim.h	/^static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_ready_cb_t start_cb)$/;"	f
lv_anim_set_time	src/misc/lv_anim.h	/^static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)$/;"	f
lv_anim_set_values	src/misc/lv_anim.h	/^static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)$/;"	f
lv_anim_set_var	src/misc/lv_anim.h	/^static inline void lv_anim_set_var(lv_anim_t * a, void * var)$/;"	f
lv_anim_speed_to_time	src/misc/lv_anim.c	/^uint32_t lv_anim_speed_to_time(uint32_t speed, int32_t start, int32_t end)$/;"	f
lv_anim_start	src/misc/lv_anim.c	/^lv_anim_t * lv_anim_start(const lv_anim_t * a)$/;"	f
lv_anim_start_cb_t	src/misc/lv_anim.h	/^typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);$/;"	t
lv_anim_t	src/misc/lv_anim.h	/^} lv_anim_t;$/;"	t	typeref:struct:_lv_anim_t
lv_animimg_class	src/extra/widgets/animimg/lv_animimg.c	/^const lv_obj_class_t lv_animimg_class = {$/;"	v
lv_animimg_constructor	src/extra/widgets/animimg/lv_animimg.c	/^static void lv_animimg_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_animimg_create	src/extra/widgets/animimg/lv_animimg.c	/^lv_obj_t * lv_animimg_create(lv_obj_t * parent)$/;"	f
lv_animimg_part_t	src/extra/widgets/animimg/lv_animimg.h	/^typedef uint8_t lv_animimg_part_t;$/;"	t
lv_animimg_set_duration	src/extra/widgets/animimg/lv_animimg.c	/^void lv_animimg_set_duration(lv_obj_t * obj, uint32_t duration)$/;"	f
lv_animimg_set_repeat_count	src/extra/widgets/animimg/lv_animimg.c	/^void lv_animimg_set_repeat_count(lv_obj_t * obj, uint16_t count)$/;"	f
lv_animimg_set_src	src/extra/widgets/animimg/lv_animimg.c	/^void lv_animimg_set_src(lv_obj_t * obj,  lv_img_dsc_t * dsc[], uint8_t num)$/;"	f
lv_animimg_start	src/extra/widgets/animimg/lv_animimg.c	/^void lv_animimg_start(lv_obj_t * obj)$/;"	f
lv_animimg_t	src/extra/widgets/animimg/lv_animimg.h	/^} lv_animimg_t;$/;"	t	typeref:struct:__anon118
lv_ap_get_char_index	src/misc/lv_txt_ap.c	/^static uint32_t lv_ap_get_char_index(uint16_t c)$/;"	f	file:
lv_arc_class	src/widgets/lv_arc.c	/^const lv_obj_class_t lv_arc_class  = {$/;"	v
lv_arc_constructor	src/widgets/lv_arc.c	/^static void lv_arc_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_arc_create	src/widgets/lv_arc.c	/^lv_obj_t * lv_arc_create(lv_obj_t * parent)$/;"	f
lv_arc_draw	src/widgets/lv_arc.c	/^static void lv_arc_draw(lv_event_t * e)$/;"	f	file:
lv_arc_event	src/widgets/lv_arc.c	/^static void lv_arc_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_arc_get_angle_end	src/widgets/lv_arc.c	/^ uint16_t lv_arc_get_angle_end(lv_obj_t * obj)$/;"	f
lv_arc_get_angle_start	src/widgets/lv_arc.c	/^uint16_t lv_arc_get_angle_start(lv_obj_t * obj)$/;"	f
lv_arc_get_bg_angle_end	src/widgets/lv_arc.c	/^uint16_t lv_arc_get_bg_angle_end(lv_obj_t * obj)$/;"	f
lv_arc_get_bg_angle_start	src/widgets/lv_arc.c	/^uint16_t lv_arc_get_bg_angle_start(lv_obj_t * obj)$/;"	f
lv_arc_get_max_value	src/widgets/lv_arc.c	/^int16_t lv_arc_get_max_value(const lv_obj_t * obj)$/;"	f
lv_arc_get_min_value	src/widgets/lv_arc.c	/^int16_t lv_arc_get_min_value(const lv_obj_t * obj)$/;"	f
lv_arc_get_mode	src/widgets/lv_arc.c	/^lv_arc_mode_t lv_arc_get_mode(const lv_obj_t * obj)$/;"	f
lv_arc_get_value	src/widgets/lv_arc.c	/^int16_t lv_arc_get_value(const lv_obj_t * obj)$/;"	f
lv_arc_mode_t	src/widgets/lv_arc.h	/^typedef uint8_t lv_arc_mode_t;$/;"	t
lv_arc_set_angles	src/widgets/lv_arc.c	/^void lv_arc_set_angles(lv_obj_t * obj, uint16_t start, uint16_t end)$/;"	f
lv_arc_set_bg_angles	src/widgets/lv_arc.c	/^void lv_arc_set_bg_angles(lv_obj_t * obj, uint16_t start, uint16_t end)$/;"	f
lv_arc_set_bg_end_angle	src/widgets/lv_arc.c	/^void lv_arc_set_bg_end_angle(lv_obj_t * obj, uint16_t end)$/;"	f
lv_arc_set_bg_start_angle	src/widgets/lv_arc.c	/^void lv_arc_set_bg_start_angle(lv_obj_t * obj, uint16_t start)$/;"	f
lv_arc_set_change_rate	src/widgets/lv_arc.c	/^void lv_arc_set_change_rate(lv_obj_t * obj, uint16_t rate)$/;"	f
lv_arc_set_end_angle	src/widgets/lv_arc.c	/^void lv_arc_set_end_angle(lv_obj_t * obj, uint16_t end)$/;"	f
lv_arc_set_mode	src/widgets/lv_arc.c	/^void lv_arc_set_mode(lv_obj_t * obj, lv_arc_mode_t type)$/;"	f
lv_arc_set_range	src/widgets/lv_arc.c	/^void lv_arc_set_range(lv_obj_t * obj, int16_t min, int16_t max)$/;"	f
lv_arc_set_rotation	src/widgets/lv_arc.c	/^void lv_arc_set_rotation(lv_obj_t * obj, uint16_t rotation)$/;"	f
lv_arc_set_start_angle	src/widgets/lv_arc.c	/^void lv_arc_set_start_angle(lv_obj_t * obj, uint16_t start)$/;"	f
lv_arc_set_value	src/widgets/lv_arc.c	/^void lv_arc_set_value(lv_obj_t * obj, int16_t value)$/;"	f
lv_arc_t	src/widgets/lv_arc.h	/^}lv_arc_t;$/;"	t	typeref:struct:__anon166
lv_area_align	src/misc/lv_area.c	/^void lv_area_align(const lv_area_t * base, lv_area_t * to_align, lv_align_t align, lv_coord_t ofs_x, lv_coord_t ofs_y)$/;"	f
lv_area_copy	src/misc/lv_area.h	/^inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)$/;"	f
lv_area_get_height	src/misc/lv_area.h	/^static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)$/;"	f
lv_area_get_size	src/misc/lv_area.c	/^uint32_t lv_area_get_size(const lv_area_t * area_p)$/;"	f
lv_area_get_width	src/misc/lv_area.h	/^static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)$/;"	f
lv_area_increase	src/misc/lv_area.c	/^void lv_area_increase(lv_area_t * area, lv_coord_t w_extra, lv_coord_t h_extra)$/;"	f
lv_area_move	src/misc/lv_area.c	/^void lv_area_move(lv_area_t * area, lv_coord_t x_ofs, lv_coord_t y_ofs)$/;"	f
lv_area_set	src/misc/lv_area.c	/^void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2)$/;"	f
lv_area_set_height	src/misc/lv_area.c	/^void lv_area_set_height(lv_area_t * area_p, lv_coord_t h)$/;"	f
lv_area_set_width	src/misc/lv_area.c	/^void lv_area_set_width(lv_area_t * area_p, lv_coord_t w)$/;"	f
lv_area_t	src/misc/lv_area.h	/^} lv_area_t;$/;"	t	typeref:struct:__anon42
lv_async_call	src/misc/lv_async.c	/^lv_res_t lv_async_call(lv_async_cb_t async_xcb, void * user_data)$/;"	f
lv_async_cb_t	src/misc/lv_async.h	/^typedef void (*lv_async_cb_t)(void *);$/;"	t
lv_async_info_t	src/misc/lv_async.c	/^} lv_async_info_t;$/;"	t	typeref:struct:_lv_async_info_t	file:
lv_async_timer_cb	src/misc/lv_async.c	/^static void lv_async_timer_cb(lv_timer_t * timer)$/;"	f	file:
lv_atan2	src/misc/lv_math.c	/^uint16_t lv_atan2(int x, int y)$/;"	f
lv_bar_anim	src/widgets/lv_bar.c	/^static void lv_bar_anim(void * var, int32_t value)$/;"	f	file:
lv_bar_anim_ready	src/widgets/lv_bar.c	/^static void lv_bar_anim_ready(lv_anim_t * a)$/;"	f	file:
lv_bar_class	src/widgets/lv_bar.c	/^const lv_obj_class_t lv_bar_class = {$/;"	v
lv_bar_constructor	src/widgets/lv_bar.c	/^static void lv_bar_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_bar_create	src/widgets/lv_bar.c	/^lv_obj_t * lv_bar_create(lv_obj_t * parent)$/;"	f
lv_bar_destructor	src/widgets/lv_bar.c	/^static void lv_bar_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_bar_event	src/widgets/lv_bar.c	/^static void lv_bar_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_bar_get_max_value	src/widgets/lv_bar.c	/^int32_t lv_bar_get_max_value(const lv_obj_t * obj)$/;"	f
lv_bar_get_min_value	src/widgets/lv_bar.c	/^int32_t lv_bar_get_min_value(const lv_obj_t * obj)$/;"	f
lv_bar_get_mode	src/widgets/lv_bar.c	/^lv_bar_mode_t lv_bar_get_mode(lv_obj_t * obj)$/;"	f
lv_bar_get_start_value	src/widgets/lv_bar.c	/^int32_t lv_bar_get_start_value(const lv_obj_t * obj)$/;"	f
lv_bar_get_value	src/widgets/lv_bar.c	/^int32_t lv_bar_get_value(const lv_obj_t * obj)$/;"	f
lv_bar_init_anim	src/widgets/lv_bar.c	/^static void lv_bar_init_anim(lv_obj_t * obj, _lv_bar_anim_t * bar_anim)$/;"	f	file:
lv_bar_mode_t	src/widgets/lv_bar.h	/^typedef uint8_t lv_bar_mode_t;$/;"	t
lv_bar_set_mode	src/widgets/lv_bar.c	/^void lv_bar_set_mode(lv_obj_t * obj, lv_bar_mode_t mode)$/;"	f
lv_bar_set_range	src/widgets/lv_bar.c	/^void lv_bar_set_range(lv_obj_t * obj, int32_t min, int32_t max)$/;"	f
lv_bar_set_start_value	src/widgets/lv_bar.c	/^void lv_bar_set_start_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)$/;"	f
lv_bar_set_value	src/widgets/lv_bar.c	/^void lv_bar_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)$/;"	f
lv_bar_set_value_with_anim	src/widgets/lv_bar.c	/^static void lv_bar_set_value_with_anim(lv_obj_t * obj, int32_t new_value, int32_t * value_ptr,$/;"	f	file:
lv_bar_t	src/widgets/lv_bar.h	/^}lv_bar_t;$/;"	t	typeref:struct:__anon176
lv_base_dir_t	src/misc/lv_bidi.h	/^typedef uint8_t lv_base_dir_t;$/;"	t
lv_bezier3	src/misc/lv_math.c	/^uint32_t lv_bezier3(uint32_t t, uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3)$/;"	f
lv_bidi_get_letter_dir	src/misc/lv_bidi.c	/^static lv_base_dir_t lv_bidi_get_letter_dir(uint32_t letter)$/;"	f	file:
lv_bidi_get_next_paragraph	src/misc/lv_bidi.c	/^static uint32_t lv_bidi_get_next_paragraph(const char * txt)$/;"	f	file:
lv_bidi_letter_is_neutral	src/misc/lv_bidi.c	/^static bool lv_bidi_letter_is_neutral(uint32_t letter)$/;"	f	file:
lv_bidi_letter_is_rtl	src/misc/lv_bidi.c	/^static bool lv_bidi_letter_is_rtl(uint32_t letter)$/;"	f	file:
lv_bidi_letter_is_weak	src/misc/lv_bidi.c	/^static bool lv_bidi_letter_is_weak(uint32_t letter)$/;"	f	file:
lv_blend_mode_t	src/misc/lv_style.h	/^typedef uint8_t lv_blend_mode_t;$/;"	t
lv_border_side_t	src/misc/lv_style.h	/^typedef uint8_t lv_border_side_t;$/;"	t
lv_btn_class	src/widgets/lv_btn.c	/^const lv_obj_class_t lv_btn_class  = {$/;"	v
lv_btn_constructor	src/widgets/lv_btn.c	/^static void lv_btn_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_btn_create	src/widgets/lv_btn.c	/^lv_obj_t * lv_btn_create(lv_obj_t * parent)$/;"	f
lv_btn_t	src/widgets/lv_btn.h	/^}lv_btn_t;$/;"	t	typeref:struct:__anon170
lv_btnmatrix_btn_draw_cb_t	src/widgets/lv_btnmatrix.h	/^typedef bool (*lv_btnmatrix_btn_draw_cb_t)(lv_obj_t * btnm, uint32_t btn_id, const lv_area_t * draw_area, const lv_area_t * clip_area);$/;"	t
lv_btnmatrix_class	src/widgets/lv_btnmatrix.c	/^const lv_obj_class_t lv_btnmatrix_class = {$/;"	v
lv_btnmatrix_clear_btn_ctrl	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_clear_btn_ctrl(const lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)$/;"	f
lv_btnmatrix_clear_btn_ctrl_all	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_clear_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)$/;"	f
lv_btnmatrix_constructor	src/widgets/lv_btnmatrix.c	/^static void lv_btnmatrix_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_btnmatrix_create	src/widgets/lv_btnmatrix.c	/^lv_obj_t * lv_btnmatrix_create(lv_obj_t * parent)$/;"	f
lv_btnmatrix_ctrl_t	src/widgets/lv_btnmatrix.h	/^typedef uint16_t lv_btnmatrix_ctrl_t;$/;"	t
lv_btnmatrix_def_map	src/widgets/lv_btnmatrix.c	/^static const char * lv_btnmatrix_def_map[] = {"Btn1", "Btn2", "Btn3", "\\n", "Btn4", "Btn5", ""};$/;"	v	file:
lv_btnmatrix_destructor	src/widgets/lv_btnmatrix.c	/^static void lv_btnmatrix_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_btnmatrix_event	src/widgets/lv_btnmatrix.c	/^static void lv_btnmatrix_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_btnmatrix_get_btn_text	src/widgets/lv_btnmatrix.c	/^const char * lv_btnmatrix_get_btn_text(const lv_obj_t * obj, uint16_t btn_id)$/;"	f
lv_btnmatrix_get_map	src/widgets/lv_btnmatrix.c	/^const char ** lv_btnmatrix_get_map(const lv_obj_t * obj)$/;"	f
lv_btnmatrix_get_one_checked	src/widgets/lv_btnmatrix.c	/^bool lv_btnmatrix_get_one_checked(const lv_obj_t * obj)$/;"	f
lv_btnmatrix_get_selected_btn	src/widgets/lv_btnmatrix.c	/^uint16_t lv_btnmatrix_get_selected_btn(const lv_obj_t * obj)$/;"	f
lv_btnmatrix_has_btn_ctrl	src/widgets/lv_btnmatrix.c	/^bool lv_btnmatrix_has_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)$/;"	f
lv_btnmatrix_set_btn_ctrl	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_btn_ctrl(lv_obj_t * obj, uint16_t btn_id, lv_btnmatrix_ctrl_t ctrl)$/;"	f
lv_btnmatrix_set_btn_ctrl_all	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_btn_ctrl_all(lv_obj_t * obj, lv_btnmatrix_ctrl_t ctrl)$/;"	f
lv_btnmatrix_set_btn_width	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_btn_width(lv_obj_t * obj, uint16_t btn_id, uint8_t width)$/;"	f
lv_btnmatrix_set_ctrl_map	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_ctrl_map(lv_obj_t * obj, const lv_btnmatrix_ctrl_t ctrl_map[])$/;"	f
lv_btnmatrix_set_map	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_map(lv_obj_t * obj, const char * map[])$/;"	f
lv_btnmatrix_set_one_checked	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_one_checked(lv_obj_t * obj, bool en)$/;"	f
lv_btnmatrix_set_selected_btn	src/widgets/lv_btnmatrix.c	/^void lv_btnmatrix_set_selected_btn(lv_obj_t * obj, uint16_t btn_id)$/;"	f
lv_btnmatrix_t	src/widgets/lv_btnmatrix.h	/^} lv_btnmatrix_t;$/;"	t	typeref:struct:__anon156
lv_calendar_class	src/extra/widgets/calendar/lv_calendar.c	/^const lv_obj_class_t lv_calendar_class = {$/;"	v
lv_calendar_constructor	src/extra/widgets/calendar/lv_calendar.c	/^static void lv_calendar_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_calendar_create	src/extra/widgets/calendar/lv_calendar.c	/^lv_obj_t * lv_calendar_create(lv_obj_t * parent)$/;"	f
lv_calendar_date_t	src/extra/widgets/calendar/lv_calendar.h	/^} lv_calendar_date_t;$/;"	t	typeref:struct:__anon120
lv_calendar_get_highlighted_dates	src/extra/widgets/calendar/lv_calendar.c	/^lv_calendar_date_t * lv_calendar_get_highlighted_dates(const lv_obj_t * obj)$/;"	f
lv_calendar_get_highlighted_dates_num	src/extra/widgets/calendar/lv_calendar.c	/^uint16_t lv_calendar_get_highlighted_dates_num(const lv_obj_t * obj)$/;"	f
lv_calendar_get_pressed_date	src/extra/widgets/calendar/lv_calendar.c	/^lv_res_t lv_calendar_get_pressed_date(const lv_obj_t * obj, lv_calendar_date_t * date)$/;"	f
lv_calendar_get_showed_date	src/extra/widgets/calendar/lv_calendar.c	/^const lv_calendar_date_t * lv_calendar_get_showed_date(const lv_obj_t * obj)$/;"	f
lv_calendar_get_today_date	src/extra/widgets/calendar/lv_calendar.c	/^const lv_calendar_date_t * lv_calendar_get_today_date(const lv_obj_t * obj)$/;"	f
lv_calendar_header_arrow_create	src/extra/widgets/calendar/lv_calendar_header_arrow.c	/^lv_obj_t * lv_calendar_header_arrow_create(lv_obj_t * parent, lv_obj_t * calendar, lv_coord_t btn_size)$/;"	f
lv_calendar_header_dropdown_create	src/extra/widgets/calendar/lv_calendar_header_dropdown.c	/^lv_obj_t * lv_calendar_header_dropdown_create(lv_obj_t * parent, lv_obj_t * calendar)$/;"	f
lv_calendar_set_day_names	src/extra/widgets/calendar/lv_calendar.c	/^void lv_calendar_set_day_names(lv_obj_t * obj, const char * day_names[])$/;"	f
lv_calendar_set_highlighted_dates	src/extra/widgets/calendar/lv_calendar.c	/^void lv_calendar_set_highlighted_dates(lv_obj_t * obj, lv_calendar_date_t highlighted[], uint16_t date_num)$/;"	f
lv_calendar_set_showed_date	src/extra/widgets/calendar/lv_calendar.c	/^void lv_calendar_set_showed_date(lv_obj_t * obj, uint32_t year, uint32_t month)$/;"	f
lv_calendar_set_today_date	src/extra/widgets/calendar/lv_calendar.c	/^void lv_calendar_set_today_date(lv_obj_t * obj, uint32_t year, uint32_t month, uint32_t day)$/;"	f
lv_calendar_t	src/extra/widgets/calendar/lv_calendar.h	/^} lv_calendar_t;$/;"	t	typeref:struct:__anon121
lv_canvas_blur_hor	src/widgets/lv_canvas.c	/^void lv_canvas_blur_hor(lv_obj_t * obj, const lv_area_t * area, uint16_t r)$/;"	f
lv_canvas_blur_ver	src/widgets/lv_canvas.c	/^void lv_canvas_blur_ver(lv_obj_t * obj, const lv_area_t * area, uint16_t r)$/;"	f
lv_canvas_class	src/widgets/lv_canvas.c	/^const lv_obj_class_t lv_canvas_class = {$/;"	v
lv_canvas_constructor	src/widgets/lv_canvas.c	/^static void lv_canvas_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_canvas_copy_buf	src/widgets/lv_canvas.c	/^void lv_canvas_copy_buf(lv_obj_t * obj, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)$/;"	f
lv_canvas_create	src/widgets/lv_canvas.c	/^lv_obj_t * lv_canvas_create(lv_obj_t * parent)$/;"	f
lv_canvas_draw_arc	src/widgets/lv_canvas.c	/^void lv_canvas_draw_arc(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t r, int32_t start_angle,$/;"	f
lv_canvas_draw_img	src/widgets/lv_canvas.c	/^void lv_canvas_draw_img(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, const void * src,$/;"	f
lv_canvas_draw_line	src/widgets/lv_canvas.c	/^void lv_canvas_draw_line(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt,$/;"	f
lv_canvas_draw_polygon	src/widgets/lv_canvas.c	/^void lv_canvas_draw_polygon(lv_obj_t * canvas, const lv_point_t points[], uint32_t point_cnt,$/;"	f
lv_canvas_draw_rect	src/widgets/lv_canvas.c	/^void lv_canvas_draw_rect(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h,$/;"	f
lv_canvas_draw_text	src/widgets/lv_canvas.c	/^void lv_canvas_draw_text(lv_obj_t * canvas, lv_coord_t x, lv_coord_t y, lv_coord_t max_w,$/;"	f
lv_canvas_fill_bg	src/widgets/lv_canvas.c	/^void lv_canvas_fill_bg(lv_obj_t * canvas, lv_color_t color, lv_opa_t opa)$/;"	f
lv_canvas_get_img	src/widgets/lv_canvas.c	/^lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * obj)$/;"	f
lv_canvas_get_px	src/widgets/lv_canvas.c	/^lv_color_t lv_canvas_get_px(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)$/;"	f
lv_canvas_set_buffer	src/widgets/lv_canvas.c	/^void lv_canvas_set_buffer(lv_obj_t * obj, void * buf, lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)$/;"	f
lv_canvas_set_palette	src/widgets/lv_canvas.c	/^void lv_canvas_set_palette(lv_obj_t * obj, uint8_t id, lv_color_t c)$/;"	f
lv_canvas_set_px	src/widgets/lv_canvas.c	/^void lv_canvas_set_px(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_color_t c)$/;"	f
lv_canvas_t	src/widgets/lv_canvas.h	/^} lv_canvas_t;$/;"	t	typeref:struct:__anon159
lv_canvas_transform	src/widgets/lv_canvas.c	/^void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,$/;"	f
lv_chart_add_cursor	src/extra/widgets/chart/lv_chart.c	/^lv_chart_cursor_t  * lv_chart_add_cursor(lv_obj_t * obj, lv_color_t color, lv_dir_t dir)$/;"	f
lv_chart_add_series	src/extra/widgets/chart/lv_chart.c	/^lv_chart_series_t * lv_chart_add_series(lv_obj_t * obj, lv_color_t color, lv_chart_axis_t axis)$/;"	f
lv_chart_axis_t	src/extra/widgets/chart/lv_chart.h	/^typedef uint8_t lv_chart_axis_t;$/;"	t
lv_chart_class	src/extra/widgets/chart/lv_chart.c	/^const lv_obj_class_t lv_chart_class = {$/;"	v
lv_chart_constructor	src/extra/widgets/chart/lv_chart.c	/^static void lv_chart_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_chart_create	src/extra/widgets/chart/lv_chart.c	/^lv_obj_t * lv_chart_create(lv_obj_t * parent)$/;"	f
lv_chart_cursor_t	src/extra/widgets/chart/lv_chart.h	/^} lv_chart_cursor_t;$/;"	t	typeref:struct:__anon108
lv_chart_destructor	src/extra/widgets/chart/lv_chart.c	/^static void lv_chart_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_chart_event	src/extra/widgets/chart/lv_chart.c	/^static void lv_chart_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_chart_get_cursor_point	src/extra/widgets/chart/lv_chart.c	/^lv_point_t lv_chart_get_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor)$/;"	f
lv_chart_get_point_count	src/extra/widgets/chart/lv_chart.c	/^uint16_t lv_chart_get_point_count(const lv_obj_t * obj)$/;"	f
lv_chart_get_point_pos_by_id	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_get_point_pos_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_point_t * p_out)$/;"	f
lv_chart_get_pressed_point	src/extra/widgets/chart/lv_chart.c	/^uint32_t lv_chart_get_pressed_point(const lv_obj_t * obj)$/;"	f
lv_chart_get_series_next	src/extra/widgets/chart/lv_chart.c	/^lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * obj, const lv_chart_series_t * ser)$/;"	f
lv_chart_get_type	src/extra/widgets/chart/lv_chart.c	/^lv_chart_type_t lv_chart_get_type(const lv_obj_t * obj)$/;"	f
lv_chart_get_x_array	src/extra/widgets/chart/lv_chart.c	/^lv_coord_t * lv_chart_get_x_array(const lv_obj_t * obj, lv_chart_series_t * ser)$/;"	f
lv_chart_get_x_start_point	src/extra/widgets/chart/lv_chart.c	/^uint16_t lv_chart_get_x_start_point(const lv_obj_t * obj, lv_chart_series_t * ser)$/;"	f
lv_chart_get_y_array	src/extra/widgets/chart/lv_chart.c	/^lv_coord_t * lv_chart_get_y_array(const lv_obj_t * obj, lv_chart_series_t * ser)$/;"	f
lv_chart_get_zoom_x	src/extra/widgets/chart/lv_chart.c	/^uint16_t lv_chart_get_zoom_x(const lv_obj_t * obj)$/;"	f
lv_chart_get_zoom_y	src/extra/widgets/chart/lv_chart.c	/^uint16_t lv_chart_get_zoom_y(const lv_obj_t * obj)$/;"	f
lv_chart_hide_series	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_hide_series(lv_obj_t * chart, lv_chart_series_t * series, bool hide)$/;"	f
lv_chart_refresh	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_refresh(lv_obj_t * obj)$/;"	f
lv_chart_remove_series	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_remove_series(lv_obj_t * obj, lv_chart_series_t * series)$/;"	f
lv_chart_series_t	src/extra/widgets/chart/lv_chart.h	/^} lv_chart_series_t;$/;"	t	typeref:struct:__anon107
lv_chart_set_all_value	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_all_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)$/;"	f
lv_chart_set_axis_tick	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_axis_tick(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t major_len, lv_coord_t minor_len, lv_coord_t major_cnt, lv_coord_t minor_cnt, bool label_en, lv_coord_t draw_size)$/;"	f
lv_chart_set_cursor_point	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_cursor_point(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_chart_series_t * ser, uint16_t point_id)$/;"	f
lv_chart_set_cursor_pos	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_cursor_pos(lv_obj_t * chart, lv_chart_cursor_t * cursor, lv_point_t * pos)$/;"	f
lv_chart_set_div_line_count	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_div_line_count(lv_obj_t * obj, uint8_t hdiv, uint8_t vdiv)$/;"	f
lv_chart_set_ext_x_array	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_ext_x_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])$/;"	f
lv_chart_set_ext_y_array	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_ext_y_array(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t array[])$/;"	f
lv_chart_set_next_value	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_next_value(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t value)$/;"	f
lv_chart_set_next_value2	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_next_value2(lv_obj_t * obj, lv_chart_series_t * ser, lv_coord_t x_value, lv_coord_t y_value)$/;"	f
lv_chart_set_point_count	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_point_count(lv_obj_t * obj, uint16_t cnt)$/;"	f
lv_chart_set_range	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_range(lv_obj_t * obj, lv_chart_axis_t axis, lv_coord_t min, lv_coord_t max)$/;"	f
lv_chart_set_series_color	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_series_color(lv_obj_t * chart, lv_chart_series_t * series, lv_color_t color)$/;"	f
lv_chart_set_type	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_type(lv_obj_t * obj, lv_chart_type_t type)$/;"	f
lv_chart_set_update_mode	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_update_mode(lv_obj_t * obj, lv_chart_update_mode_t update_mode)$/;"	f
lv_chart_set_value_by_id	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_value_by_id(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t value)$/;"	f
lv_chart_set_value_by_id2	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_value_by_id2(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id, lv_coord_t x_value, lv_coord_t y_value)$/;"	f
lv_chart_set_x_start_point	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_x_start_point(lv_obj_t * obj, lv_chart_series_t * ser, uint16_t id)$/;"	f
lv_chart_set_zoom_x	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_zoom_x(lv_obj_t * obj, uint16_t zoom_x)$/;"	f
lv_chart_set_zoom_y	src/extra/widgets/chart/lv_chart.c	/^void lv_chart_set_zoom_y(lv_obj_t * obj, uint16_t zoom_y)$/;"	f
lv_chart_t	src/extra/widgets/chart/lv_chart.h	/^}lv_chart_t;$/;"	t	typeref:struct:__anon110
lv_chart_tick_dsc_t	src/extra/widgets/chart/lv_chart.h	/^}lv_chart_tick_dsc_t;$/;"	t	typeref:struct:__anon109
lv_chart_type_t	src/extra/widgets/chart/lv_chart.h	/^typedef uint8_t lv_chart_type_t;$/;"	t
lv_chart_update_mode_t	src/extra/widgets/chart/lv_chart.h	/^typedef uint8_t lv_chart_update_mode_t;$/;"	t
lv_checkbox_class	src/widgets/lv_checkbox.c	/^const lv_obj_class_t lv_checkbox_class = {$/;"	v
lv_checkbox_constructor	src/widgets/lv_checkbox.c	/^static void lv_checkbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_checkbox_create	src/widgets/lv_checkbox.c	/^lv_obj_t * lv_checkbox_create(lv_obj_t * parent)$/;"	f
lv_checkbox_destructor	src/widgets/lv_checkbox.c	/^static void lv_checkbox_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_checkbox_draw	src/widgets/lv_checkbox.c	/^static void lv_checkbox_draw(lv_event_t * e)$/;"	f	file:
lv_checkbox_event	src/widgets/lv_checkbox.c	/^static void lv_checkbox_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_checkbox_get_text	src/widgets/lv_checkbox.c	/^const char * lv_checkbox_get_text(const lv_obj_t * obj)$/;"	f
lv_checkbox_set_text	src/widgets/lv_checkbox.c	/^void lv_checkbox_set_text(lv_obj_t * obj, const char * txt)$/;"	f
lv_checkbox_set_text_static	src/widgets/lv_checkbox.c	/^void lv_checkbox_set_text_static(lv_obj_t * obj, const char * txt)$/;"	f
lv_checkbox_t	src/widgets/lv_checkbox.h	/^}lv_checkbox_t;$/;"	t	typeref:struct:__anon152
lv_clamp_height	src/core/lv_obj_pos.c	/^lv_coord_t lv_clamp_height(lv_coord_t height, lv_coord_t min_height, lv_coord_t max_height, lv_coord_t ref_height)$/;"	f
lv_clamp_width	src/core/lv_obj_pos.c	/^lv_coord_t lv_clamp_width(lv_coord_t width, lv_coord_t min_width, lv_coord_t max_width, lv_coord_t ref_width)$/;"	f
lv_color16_t	src/misc/lv_color.h	/^} lv_color16_t;$/;"	t	typeref:union:__anon35
lv_color1_t	src/misc/lv_color.h	/^} lv_color1_t;$/;"	t	typeref:union:__anon31
lv_color32_t	src/misc/lv_color.h	/^} lv_color32_t;$/;"	t	typeref:union:__anon37
lv_color8_t	src/misc/lv_color.h	/^} lv_color8_t;$/;"	t	typeref:union:__anon33
lv_color_black	src/misc/lv_color.h	/^static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}$/;"	f
lv_color_brightness	src/misc/lv_color.h	/^static inline uint8_t lv_color_brightness(lv_color_t color)$/;"	f
lv_color_change_lightness	src/misc/lv_color.c	/^lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl)$/;"	f
lv_color_chroma_key	src/misc/lv_color.h	/^static inline lv_color_t lv_color_chroma_key(void)$/;"	f
lv_color_darken	src/misc/lv_color.c	/^lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl)$/;"	f
lv_color_fill	src/misc/lv_color.c	/^LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)$/;"	f
lv_color_filter_cb_t	src/misc/lv_color.h	/^typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_opa_t);$/;"	t
lv_color_filter_dsc_init	src/misc/lv_color.h	/^static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)$/;"	f
lv_color_filter_dsc_t	src/misc/lv_color.h	/^}lv_color_filter_dsc_t;$/;"	t	typeref:struct:_lv_color_filter_dsc_t
lv_color_hex	src/misc/lv_color.h	/^static inline lv_color_t lv_color_hex(uint32_t c)$/;"	f
lv_color_hex3	src/misc/lv_color.h	/^static inline lv_color_t lv_color_hex3(uint32_t c)$/;"	f
lv_color_hsv_t	src/misc/lv_color.h	/^} lv_color_hsv_t;$/;"	t	typeref:struct:__anon39
lv_color_hsv_to_rgb	src/misc/lv_color.c	/^lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v)$/;"	f
lv_color_int_t	src/misc/lv_color.h	/^typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;$/;"	t
lv_color_lighten	src/misc/lv_color.c	/^lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl)$/;"	f
lv_color_make	src/misc/lv_color.h	/^static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)$/;"	f
lv_color_mix	src/misc/lv_color.h	/^LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t mix)$/;"	f
lv_color_mix_premult	src/misc/lv_color.h	/^LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color_t c2, uint8_t mix)$/;"	f
lv_color_mix_with_alpha	src/misc/lv_color.h	/^LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_opa,$/;"	f
lv_color_premult	src/misc/lv_color.h	/^LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out)$/;"	f
lv_color_rgb_to_hsv	src/misc/lv_color.c	/^lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8)$/;"	f
lv_color_t	src/misc/lv_color.h	/^typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;$/;"	t
lv_color_to1	src/misc/lv_color.h	/^static inline uint8_t lv_color_to1(lv_color_t color)$/;"	f
lv_color_to16	src/misc/lv_color.h	/^static inline uint16_t lv_color_to16(lv_color_t color)$/;"	f
lv_color_to32	src/misc/lv_color.h	/^static inline uint32_t lv_color_to32(lv_color_t color)$/;"	f
lv_color_to8	src/misc/lv_color.h	/^static inline uint8_t lv_color_to8(lv_color_t color)$/;"	f
lv_color_to_hsv	src/misc/lv_color.c	/^lv_color_hsv_t lv_color_to_hsv(lv_color_t color)$/;"	f
lv_color_white	src/misc/lv_color.h	/^static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}$/;"	f
lv_colorwheel_class	src/extra/widgets/colorwheel/lv_colorwheel.c	/^const lv_obj_class_t lv_colorwheel_class = {.instance_size = sizeof(lv_colorwheel_t), .base_class = &lv_obj_class,$/;"	v
lv_colorwheel_constructor	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void lv_colorwheel_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_colorwheel_create	src/extra/widgets/colorwheel/lv_colorwheel.c	/^lv_obj_t * lv_colorwheel_create(lv_obj_t * parent, bool knob_recolor)$/;"	f
lv_colorwheel_event	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void lv_colorwheel_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_colorwheel_get_color_mode	src/extra/widgets/colorwheel/lv_colorwheel.c	/^lv_colorwheel_mode_t lv_colorwheel_get_color_mode(lv_obj_t * obj)$/;"	f
lv_colorwheel_get_color_mode_fixed	src/extra/widgets/colorwheel/lv_colorwheel.c	/^bool lv_colorwheel_get_color_mode_fixed(lv_obj_t * obj)$/;"	f
lv_colorwheel_get_hsv	src/extra/widgets/colorwheel/lv_colorwheel.c	/^lv_color_hsv_t lv_colorwheel_get_hsv(lv_obj_t * obj)$/;"	f
lv_colorwheel_get_rgb	src/extra/widgets/colorwheel/lv_colorwheel.c	/^lv_color_t lv_colorwheel_get_rgb(lv_obj_t * obj)$/;"	f
lv_colorwheel_mode_t	src/extra/widgets/colorwheel/lv_colorwheel.h	/^typedef uint8_t lv_colorwheel_mode_t;$/;"	t
lv_colorwheel_set_hsv	src/extra/widgets/colorwheel/lv_colorwheel.c	/^bool lv_colorwheel_set_hsv(lv_obj_t * obj, lv_color_hsv_t hsv)$/;"	f
lv_colorwheel_set_mode	src/extra/widgets/colorwheel/lv_colorwheel.c	/^void lv_colorwheel_set_mode(lv_obj_t * obj, lv_colorwheel_mode_t mode)$/;"	f
lv_colorwheel_set_mode_fixed	src/extra/widgets/colorwheel/lv_colorwheel.c	/^void lv_colorwheel_set_mode_fixed(lv_obj_t * obj, bool fixed)$/;"	f
lv_colorwheel_set_rgb	src/extra/widgets/colorwheel/lv_colorwheel.c	/^bool lv_colorwheel_set_rgb(lv_obj_t * obj, lv_color_t color)$/;"	f
lv_colorwheel_t	src/extra/widgets/colorwheel/lv_colorwheel.h	/^} lv_colorwheel_t;$/;"	t	typeref:struct:__anon112
lv_coord_t	src/misc/lv_area.h	/^typedef int16_t lv_coord_t;$/;"	t
lv_coord_t	src/misc/lv_area.h	/^typedef int32_t lv_coord_t;$/;"	t
lv_cover_check_info_t	src/core/lv_event.h	/^} lv_cover_check_info_t;$/;"	t	typeref:struct:__anon193
lv_cover_res_t	src/core/lv_obj_draw.h	/^}lv_cover_res_t;$/;"	t	typeref:enum:__anon198
lv_deinit	src/core/lv_obj.c	/^void lv_deinit(void)$/;"	f
lv_dir_t	src/misc/lv_area.h	/^typedef uint8_t lv_dir_t;$/;"	t
lv_disp_clean_dcache	src/core/lv_disp.c	/^void lv_disp_clean_dcache(lv_disp_t * disp)$/;"	f
lv_disp_dpx	src/core/lv_disp.h	/^static inline lv_coord_t lv_disp_dpx(const lv_disp_t * disp, lv_coord_t n)$/;"	f
lv_disp_draw_buf_init	src/hal/lv_hal_disp.c	/^void lv_disp_draw_buf_init(lv_disp_draw_buf_t * draw_buf, void * buf1, void * buf2, uint32_t size_in_px_cnt)$/;"	f
lv_disp_draw_buf_t	src/hal/lv_hal_disp.h	/^} lv_disp_draw_buf_t;$/;"	t	typeref:struct:_lv_disp_draw_buf_t
lv_disp_drv_init	src/hal/lv_hal_disp.c	/^void lv_disp_drv_init(lv_disp_drv_t * driver)$/;"	f
lv_disp_drv_register	src/hal/lv_hal_disp.c	/^lv_disp_t * lv_disp_drv_register(lv_disp_drv_t * driver)$/;"	f
lv_disp_drv_t	src/hal/lv_hal_disp.h	/^} lv_disp_drv_t;$/;"	t	typeref:struct:_lv_disp_drv_t
lv_disp_drv_update	src/hal/lv_hal_disp.c	/^void lv_disp_drv_update(lv_disp_t * disp, lv_disp_drv_t * new_drv)$/;"	f
lv_disp_flush_is_last	src/hal/lv_hal_disp.c	/^LV_ATTRIBUTE_FLUSH_READY bool lv_disp_flush_is_last(lv_disp_drv_t * disp_drv)$/;"	f
lv_disp_flush_ready	src/hal/lv_hal_disp.c	/^LV_ATTRIBUTE_FLUSH_READY void lv_disp_flush_ready(lv_disp_drv_t * disp_drv)$/;"	f
lv_disp_get_antialiasing	src/hal/lv_hal_disp.c	/^bool lv_disp_get_antialiasing(lv_disp_t * disp)$/;"	f
lv_disp_get_default	src/hal/lv_hal_disp.c	/^lv_disp_t * lv_disp_get_default(void)$/;"	f
lv_disp_get_dpi	src/hal/lv_hal_disp.c	/^lv_coord_t lv_disp_get_dpi(const lv_disp_t * disp)$/;"	f
lv_disp_get_draw_buf	src/hal/lv_hal_disp.c	/^lv_disp_draw_buf_t * lv_disp_get_draw_buf(lv_disp_t * disp)$/;"	f
lv_disp_get_hor_res	src/hal/lv_hal_disp.c	/^lv_coord_t lv_disp_get_hor_res(lv_disp_t * disp)$/;"	f
lv_disp_get_inactive_time	src/core/lv_disp.c	/^uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp)$/;"	f
lv_disp_get_layer_sys	src/core/lv_disp.c	/^lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp)$/;"	f
lv_disp_get_layer_top	src/core/lv_disp.c	/^lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp)$/;"	f
lv_disp_get_next	src/hal/lv_hal_disp.c	/^lv_disp_t * lv_disp_get_next(lv_disp_t * disp)$/;"	f
lv_disp_get_rotation	src/hal/lv_hal_disp.c	/^lv_disp_rot_t lv_disp_get_rotation(lv_disp_t * disp)$/;"	f
lv_disp_get_scr_act	src/core/lv_disp.c	/^lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp)$/;"	f
lv_disp_get_scr_prev	src/core/lv_disp.c	/^lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp)$/;"	f
lv_disp_get_theme	src/core/lv_disp.c	/^lv_theme_t * lv_disp_get_theme(lv_disp_t * disp)$/;"	f
lv_disp_get_ver_res	src/hal/lv_hal_disp.c	/^lv_coord_t lv_disp_get_ver_res(lv_disp_t * disp)$/;"	f
lv_disp_load_scr	src/core/lv_disp.c	/^void lv_disp_load_scr(lv_obj_t * scr)$/;"	f
lv_disp_remove	src/hal/lv_hal_disp.c	/^void lv_disp_remove(lv_disp_t * disp)$/;"	f
lv_disp_rot_t	src/hal/lv_hal_disp.h	/^} lv_disp_rot_t;$/;"	t	typeref:enum:__anon96
lv_disp_set_bg_color	src/core/lv_disp.c	/^void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color)$/;"	f
lv_disp_set_bg_image	src/core/lv_disp.c	/^void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src)$/;"	f
lv_disp_set_bg_opa	src/core/lv_disp.c	/^void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa)$/;"	f
lv_disp_set_default	src/hal/lv_hal_disp.c	/^void lv_disp_set_default(lv_disp_t * disp)$/;"	f
lv_disp_set_rotation	src/hal/lv_hal_disp.c	/^void lv_disp_set_rotation(lv_disp_t * disp, lv_disp_rot_t rotation)$/;"	f
lv_disp_set_theme	src/core/lv_disp.c	/^void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th)$/;"	f
lv_disp_t	src/hal/lv_hal_disp.h	/^} lv_disp_t;$/;"	t	typeref:struct:_lv_disp_t
lv_disp_trig_activity	src/core/lv_disp.c	/^void lv_disp_trig_activity(lv_disp_t * disp)$/;"	f
lv_dpx	src/core/lv_disp.h	/^static inline lv_coord_t lv_dpx(lv_coord_t n)$/;"	f
lv_draw_arc	src/draw/lv_draw_arc.c	/^void lv_draw_arc(lv_coord_t center_x, lv_coord_t center_y, uint16_t radius,  uint16_t start_angle, uint16_t end_angle,$/;"	f
lv_draw_arc_dsc_init	src/draw/lv_draw_arc.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_arc_dsc_init(lv_draw_arc_dsc_t * dsc)$/;"	f
lv_draw_arc_dsc_t	src/draw/lv_draw_arc.h	/^} lv_draw_arc_dsc_t;$/;"	t	typeref:struct:__anon61
lv_draw_arc_get_area	src/draw/lv_draw_arc.c	/^void lv_draw_arc_get_area(lv_coord_t x, lv_coord_t y, uint16_t radius,  uint16_t start_angle, uint16_t end_angle, lv_coord_t w, bool rounded, lv_area_t * area)$/;"	f
lv_draw_img	src/draw/lv_draw_img.c	/^void lv_draw_img(const lv_area_t * coords, const lv_area_t * mask, const void * src, const lv_draw_img_dsc_t * dsc)$/;"	f
lv_draw_img_dsc_init	src/draw/lv_draw_img.c	/^void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)$/;"	f
lv_draw_img_dsc_t	src/draw/lv_draw_img.h	/^} lv_draw_img_dsc_t;$/;"	t	typeref:struct:__anon87
lv_draw_label	src/draw/lv_draw_label.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_label(const lv_area_t * coords, const lv_area_t * mask,$/;"	f
lv_draw_label_dsc_init	src/draw/lv_draw_label.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_label_dsc_init(lv_draw_label_dsc_t * dsc)$/;"	f
lv_draw_label_dsc_t	src/draw/lv_draw_label.h	/^} lv_draw_label_dsc_t;$/;"	t	typeref:struct:__anon58
lv_draw_label_hint_t	src/draw/lv_draw_label.h	/^} lv_draw_label_hint_t;$/;"	t	typeref:struct:_lv_draw_label_hint_t
lv_draw_letter	src/draw/lv_draw_label.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_letter(const lv_point_t * pos_p, const lv_area_t * clip_area,$/;"	f
lv_draw_line	src/draw/lv_draw_line.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_line(const lv_point_t * point1, const lv_point_t * point2, const lv_area_t * clip,$/;"	f
lv_draw_line_dsc_init	src/draw/lv_draw_line.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_line_dsc_init(lv_draw_line_dsc_t * dsc)$/;"	f
lv_draw_line_dsc_t	src/draw/lv_draw_line.h	/^} lv_draw_line_dsc_t;$/;"	t	typeref:struct:__anon71
lv_draw_map	src/draw/lv_draw_img.c	/^LV_ATTRIBUTE_FAST_MEM static void lv_draw_map(const lv_area_t * map_area, const lv_area_t * clip_area,$/;"	f	file:
lv_draw_mask_add	src/draw/lv_draw_mask.c	/^int16_t lv_draw_mask_add(void * param, void * custom_id)$/;"	f
lv_draw_mask_angle	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t abs_x,$/;"	f	file:
lv_draw_mask_angle_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_angle_init(lv_draw_mask_angle_param_t * param, lv_coord_t vertex_x, lv_coord_t vertex_y,$/;"	f
lv_draw_mask_angle_param_t	src/draw/lv_draw_mask.h	/^} lv_draw_mask_angle_param_t;$/;"	t	typeref:struct:__anon79
lv_draw_mask_apply	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,$/;"	f
lv_draw_mask_fade	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t abs_x,$/;"	f	file:
lv_draw_mask_fade_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_fade_init(lv_draw_mask_fade_param_t * param, const lv_area_t * coords, lv_opa_t opa_top,$/;"	f
lv_draw_mask_fade_param_t	src/draw/lv_draw_mask.h	/^} lv_draw_mask_fade_param_t;$/;"	t	typeref:struct:__anon83
lv_draw_mask_get_cnt	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM uint8_t lv_draw_mask_get_cnt(void)$/;"	f
lv_draw_mask_get_cnt	src/draw/lv_draw_mask.h	/^static inline  uint8_t lv_draw_mask_get_cnt(void) {$/;"	f
lv_draw_mask_line	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t abs_x,$/;"	f	file:
lv_draw_mask_line_angle_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_line_angle_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t py, int16_t angle,$/;"	f
lv_draw_mask_line_param_t	src/draw/lv_draw_mask.h	/^} lv_draw_mask_line_param_t;$/;"	t	typeref:struct:__anon77
lv_draw_mask_line_points_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_line_points_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t p1y, lv_coord_t p2x,$/;"	f
lv_draw_mask_line_side_t	src/draw/lv_draw_mask.h	/^typedef uint8_t lv_draw_mask_line_side_t;$/;"	t
lv_draw_mask_map	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t abs_x,$/;"	f	file:
lv_draw_mask_map_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_map_init(lv_draw_mask_map_param_t * param, const lv_area_t * coords, const lv_opa_t * map)$/;"	f
lv_draw_mask_map_param_t	src/draw/lv_draw_mask.h	/^} lv_draw_mask_map_param_t;$/;"	t	typeref:struct:_lv_draw_mask_map_param_t
lv_draw_mask_radius	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t abs_x,$/;"	f	file:
lv_draw_mask_radius_init	src/draw/lv_draw_mask.c	/^void lv_draw_mask_radius_init(lv_draw_mask_radius_param_t * param, const lv_area_t * rect, lv_coord_t radius, bool inv)$/;"	f
lv_draw_mask_radius_param_t	src/draw/lv_draw_mask.h	/^} lv_draw_mask_radius_param_t;$/;"	t	typeref:struct:__anon81
lv_draw_mask_remove_custom	src/draw/lv_draw_mask.c	/^void * lv_draw_mask_remove_custom(void * custom_id)$/;"	f
lv_draw_mask_remove_id	src/draw/lv_draw_mask.c	/^void * lv_draw_mask_remove_id(int16_t id)$/;"	f
lv_draw_mask_res_t	src/draw/lv_draw_mask.h	/^typedef uint8_t lv_draw_mask_res_t;$/;"	t
lv_draw_mask_type_t	src/draw/lv_draw_mask.h	/^typedef uint8_t lv_draw_mask_type_t;$/;"	t
lv_draw_mask_xcb_t	src/draw/lv_draw_mask.h	/^typedef lv_draw_mask_res_t (*lv_draw_mask_xcb_t)(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,$/;"	t
lv_draw_polygon	src/draw/lv_draw_triangle.c	/^void lv_draw_polygon(const lv_point_t points[], uint16_t point_cnt, const lv_area_t * clip_area,$/;"	f
lv_draw_rect	src/draw/lv_draw_rect.c	/^void lv_draw_rect(const lv_area_t * coords, const lv_area_t * clip, const lv_draw_rect_dsc_t * dsc)$/;"	f
lv_draw_rect_dsc_init	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM void lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc)$/;"	f
lv_draw_rect_dsc_t	src/draw/lv_draw_rect.h	/^} lv_draw_rect_dsc_t;$/;"	t	typeref:struct:__anon86
lv_draw_span	src/extra/widgets/span/lv_span.c	/^static void lv_draw_span(lv_obj_t * obj, const lv_area_t * coords, const lv_area_t * mask)$/;"	f	file:
lv_draw_triangle	src/draw/lv_draw_triangle.c	/^void lv_draw_triangle(const lv_point_t points[], const lv_area_t * clip_area, const lv_draw_rect_dsc_t * draw_dsc)$/;"	f
lv_dropdown_add_option	src/widgets/lv_dropdown.c	/^void lv_dropdown_add_option(lv_obj_t * obj, const char * option, uint32_t pos)$/;"	f
lv_dropdown_class	src/widgets/lv_dropdown.c	/^const lv_obj_class_t lv_dropdown_class = {$/;"	v
lv_dropdown_clear_options	src/widgets/lv_dropdown.c	/^void lv_dropdown_clear_options(lv_obj_t * obj)$/;"	f
lv_dropdown_close	src/widgets/lv_dropdown.c	/^void lv_dropdown_close(lv_obj_t * obj)$/;"	f
lv_dropdown_constructor	src/widgets/lv_dropdown.c	/^static void lv_dropdown_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_dropdown_create	src/widgets/lv_dropdown.c	/^lv_obj_t * lv_dropdown_create(lv_obj_t * parent)$/;"	f
lv_dropdown_destructor	src/widgets/lv_dropdown.c	/^static void lv_dropdown_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_dropdown_event	src/widgets/lv_dropdown.c	/^static void lv_dropdown_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_dropdown_get_dir	src/widgets/lv_dropdown.c	/^lv_dir_t lv_dropdown_get_dir(const lv_obj_t * obj)$/;"	f
lv_dropdown_get_list	src/widgets/lv_dropdown.c	/^lv_obj_t * lv_dropdown_get_list(lv_obj_t * obj)$/;"	f
lv_dropdown_get_option_cnt	src/widgets/lv_dropdown.c	/^uint16_t lv_dropdown_get_option_cnt(const lv_obj_t * obj)$/;"	f
lv_dropdown_get_options	src/widgets/lv_dropdown.c	/^const char * lv_dropdown_get_options(const lv_obj_t * obj)$/;"	f
lv_dropdown_get_selected	src/widgets/lv_dropdown.c	/^uint16_t lv_dropdown_get_selected(const lv_obj_t * obj)$/;"	f
lv_dropdown_get_selected_highlight	src/widgets/lv_dropdown.c	/^bool lv_dropdown_get_selected_highlight(lv_obj_t * obj)$/;"	f
lv_dropdown_get_selected_str	src/widgets/lv_dropdown.c	/^void lv_dropdown_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)$/;"	f
lv_dropdown_get_symbol	src/widgets/lv_dropdown.c	/^const char * lv_dropdown_get_symbol(lv_obj_t * obj)$/;"	f
lv_dropdown_get_text	src/widgets/lv_dropdown.c	/^const char * lv_dropdown_get_text(lv_obj_t * obj)$/;"	f
lv_dropdown_list_create	src/widgets/lv_dropdown.c	/^static lv_obj_t * lv_dropdown_list_create(lv_obj_t * parent)$/;"	f	file:
lv_dropdown_list_event	src/widgets/lv_dropdown.c	/^static void lv_dropdown_list_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_dropdown_list_t	src/widgets/lv_dropdown.h	/^}lv_dropdown_list_t;$/;"	t	typeref:struct:__anon173
lv_dropdown_open	src/widgets/lv_dropdown.c	/^void lv_dropdown_open(lv_obj_t * dropdown_obj)$/;"	f
lv_dropdown_set_dir	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_dir(lv_obj_t * obj, lv_dir_t dir)$/;"	f
lv_dropdown_set_options	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_options(lv_obj_t * obj, const char * options)$/;"	f
lv_dropdown_set_options_static	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_options_static(lv_obj_t * obj, const char * options)$/;"	f
lv_dropdown_set_selected	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_selected(lv_obj_t * obj, uint16_t sel_opt)$/;"	f
lv_dropdown_set_selected_highlight	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_selected_highlight(lv_obj_t * obj, bool en)$/;"	f
lv_dropdown_set_symbol	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_symbol(lv_obj_t * obj, const void * symbol)$/;"	f
lv_dropdown_set_text	src/widgets/lv_dropdown.c	/^void lv_dropdown_set_text(lv_obj_t * obj, const char * txt)$/;"	f
lv_dropdown_t	src/widgets/lv_dropdown.h	/^}lv_dropdown_t;$/;"	t	typeref:struct:__anon172
lv_dropdownlist_class	src/widgets/lv_dropdown.c	/^const lv_obj_class_t lv_dropdownlist_class = {$/;"	v
lv_dropdownlist_constructor	src/widgets/lv_dropdown.c	/^static void lv_dropdownlist_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_dropdownlist_destructor	src/widgets/lv_dropdown.c	/^static void lv_dropdownlist_destructor(const lv_obj_class_t * class_p, lv_obj_t * list_obj)$/;"	f	file:
lv_event_cb_t	src/core/lv_event.h	/^typedef void (*lv_event_cb_t)(lv_event_t * e);$/;"	t
lv_event_code_t	src/core/lv_event.h	/^}lv_event_code_t;$/;"	t	typeref:enum:__anon191
lv_event_dsc_t	src/core/lv_event.c	/^}lv_event_dsc_t;$/;"	t	typeref:struct:_lv_event_dsc_t	file:
lv_event_get_clip_area	src/core/lv_event.c	/^const lv_area_t * lv_event_get_clip_area(lv_event_t * e)$/;"	f
lv_event_get_code	src/core/lv_event.c	/^lv_event_code_t lv_event_get_code(lv_event_t * e)$/;"	f
lv_event_get_cover_area	src/core/lv_event.c	/^const lv_area_t * lv_event_get_cover_area(lv_event_t * e)$/;"	f
lv_event_get_current_target	src/core/lv_event.c	/^lv_obj_t * lv_event_get_current_target(lv_event_t * e)$/;"	f
lv_event_get_draw_part_dsc	src/core/lv_event.c	/^lv_obj_draw_part_dsc_t * lv_event_get_draw_part_dsc(lv_event_t * e)$/;"	f
lv_event_get_hit_test_info	src/core/lv_event.c	/^lv_hit_test_info_t * lv_event_get_hit_test_info(lv_event_t * e)$/;"	f
lv_event_get_indev	src/core/lv_event.c	/^lv_indev_t * lv_event_get_indev(lv_event_t * e)$/;"	f
lv_event_get_key	src/core/lv_event.c	/^uint32_t lv_event_get_key(lv_event_t * e)$/;"	f
lv_event_get_old_size	src/core/lv_event.c	/^const lv_area_t * lv_event_get_old_size(lv_event_t * e)$/;"	f
lv_event_get_param	src/core/lv_event.c	/^void * lv_event_get_param(lv_event_t * e)$/;"	f
lv_event_get_scroll_anim	src/core/lv_event.c	/^lv_anim_t * lv_event_get_scroll_anim(lv_event_t * e)$/;"	f
lv_event_get_self_size_info	src/core/lv_event.c	/^lv_point_t * lv_event_get_self_size_info(lv_event_t * e)$/;"	f
lv_event_get_target	src/core/lv_event.c	/^lv_obj_t * lv_event_get_target(lv_event_t * e)$/;"	f
lv_event_get_user_data	src/core/lv_event.c	/^void * lv_event_get_user_data(lv_event_t * e)$/;"	f
lv_event_register_id	src/core/lv_event.c	/^uint32_t lv_event_register_id(void)$/;"	f
lv_event_send	src/core/lv_event.c	/^lv_res_t lv_event_send(lv_obj_t * obj, lv_event_code_t event_code, void * param)$/;"	f
lv_event_set_cover_res	src/core/lv_event.c	/^void lv_event_set_cover_res(lv_event_t * e, lv_cover_res_t res)$/;"	f
lv_event_set_ext_draw_size	src/core/lv_event.c	/^void lv_event_set_ext_draw_size(lv_event_t * e, lv_coord_t size)$/;"	f
lv_event_t	src/core/lv_event.h	/^}lv_event_t;$/;"	t	typeref:struct:_lv_event_t
lv_example_anim_1	examples/anim/lv_example_anim_1.c	/^void lv_example_anim_1(void)$/;"	f
lv_example_anim_2	examples/anim/lv_example_anim_2.c	/^void lv_example_anim_2(void)$/;"	f
lv_example_animimg_1	examples/widgets/animimg/lv_example_animimg_1.c	/^void lv_example_animimg_1(void)$/;"	f
lv_example_arc_1	examples/widgets/arc/lv_example_arc_1.c	/^void lv_example_arc_1(void)$/;"	f
lv_example_arc_2	examples/widgets/arc/lv_example_arc_2.c	/^void lv_example_arc_2(void)$/;"	f
lv_example_bar_1	examples/widgets/bar/lv_example_bar_1.c	/^void lv_example_bar_1(void)$/;"	f
lv_example_bar_2	examples/widgets/bar/lv_example_bar_2.c	/^void lv_example_bar_2(void)$/;"	f
lv_example_bar_3	examples/widgets/bar/lv_example_bar_3.c	/^void lv_example_bar_3(void)$/;"	f
lv_example_bar_4	examples/widgets/bar/lv_example_bar_4.c	/^void lv_example_bar_4(void)$/;"	f
lv_example_bar_5	examples/widgets/bar/lv_example_bar_5.c	/^void lv_example_bar_5(void)$/;"	f
lv_example_bar_6	examples/widgets/bar/lv_example_bar_6.c	/^void lv_example_bar_6(void)$/;"	f
lv_example_btn_1	examples/widgets/btn/lv_example_btn_1.c	/^void lv_example_btn_1(void)$/;"	f
lv_example_btn_2	examples/widgets/btn/lv_example_btn_2.c	/^void lv_example_btn_2(void)$/;"	f
lv_example_btn_3	examples/widgets/btn/lv_example_btn_3.c	/^void lv_example_btn_3(void)$/;"	f
lv_example_btnmatrix_1	examples/widgets/btnmatrix/lv_example_btnmatrix_1.c	/^void lv_example_btnmatrix_1(void)$/;"	f
lv_example_btnmatrix_2	examples/widgets/btnmatrix/lv_example_btnmatrix_2.c	/^void lv_example_btnmatrix_2(void)$/;"	f
lv_example_btnmatrix_3	examples/widgets/btnmatrix/lv_example_btnmatrix_3.c	/^void lv_example_btnmatrix_3(void)$/;"	f
lv_example_calendar_1	examples/widgets/calendar/lv_example_calendar_1.c	/^void lv_example_calendar_1(void)$/;"	f
lv_example_canvas_1	examples/widgets/canvas/lv_example_canvas_1.c	/^void lv_example_canvas_1(void)$/;"	f
lv_example_canvas_2	examples/widgets/canvas/lv_example_canvas_2.c	/^void lv_example_canvas_2(void)$/;"	f
lv_example_chart_1	examples/widgets/chart/lv_example_chart_1.c	/^void lv_example_chart_1(void)$/;"	f
lv_example_chart_2	examples/widgets/chart/lv_example_chart_2.c	/^void lv_example_chart_2(void)$/;"	f
lv_example_chart_3	examples/widgets/chart/lv_example_chart_3.c	/^void lv_example_chart_3(void)$/;"	f
lv_example_chart_4	examples/widgets/chart/lv_example_chart_4.c	/^void lv_example_chart_4(void)$/;"	f
lv_example_chart_5	examples/widgets/chart/lv_example_chart_5.c	/^void lv_example_chart_5(void)$/;"	f
lv_example_chart_6	examples/widgets/chart/lv_example_chart_6.c	/^void lv_example_chart_6(void)$/;"	f
lv_example_chart_7	examples/widgets/chart/lv_example_chart_7.c	/^void lv_example_chart_7(void)$/;"	f
lv_example_checkbox_1	examples/widgets/checkbox/lv_example_checkbox_1.c	/^void lv_example_checkbox_1(void)$/;"	f
lv_example_colorwheel_1	examples/widgets/colorwheel/lv_example_colorwheel_1.c	/^void lv_example_colorwheel_1(void)$/;"	f
lv_example_dropdown_1	examples/widgets/dropdown/lv_example_dropdown_1.c	/^void lv_example_dropdown_1(void)$/;"	f
lv_example_dropdown_2	examples/widgets/dropdown/lv_example_dropdown_2.c	/^void lv_example_dropdown_2(void)$/;"	f
lv_example_dropdown_3	examples/widgets/dropdown/lv_example_dropdown_3.c	/^void lv_example_dropdown_3(void)$/;"	f
lv_example_event_1	examples/event/lv_example_event_1.c	/^void lv_example_event_1(void)$/;"	f
lv_example_event_2	examples/event/lv_example_event_2.c	/^void lv_example_event_2(void)$/;"	f
lv_example_event_3	examples/event/lv_example_event_3.c	/^void lv_example_event_3(void)$/;"	f
lv_example_flex_1	examples/layouts/flex/lv_example_flex_1.c	/^void lv_example_flex_1(void)$/;"	f
lv_example_flex_2	examples/layouts/flex/lv_example_flex_2.c	/^void lv_example_flex_2(void)$/;"	f
lv_example_flex_3	examples/layouts/flex/lv_example_flex_3.c	/^void lv_example_flex_3(void)$/;"	f
lv_example_flex_4	examples/layouts/flex/lv_example_flex_4.c	/^void lv_example_flex_4(void)$/;"	f
lv_example_flex_5	examples/layouts/flex/lv_example_flex_5.c	/^void lv_example_flex_5(void)$/;"	f
lv_example_flex_6	examples/layouts/flex/lv_example_flex_6.c	/^void lv_example_flex_6(void)$/;"	f
lv_example_get_started_1	examples/get_started/lv_example_get_started_1.c	/^void lv_example_get_started_1(void)$/;"	f
lv_example_get_started_2	examples/get_started/lv_example_get_started_2.c	/^void lv_example_get_started_2(void)$/;"	f
lv_example_get_started_3	examples/get_started/lv_example_get_started_3.c	/^void lv_example_get_started_3(void)$/;"	f
lv_example_grid_1	examples/layouts/grid/lv_example_grid_1.c	/^void lv_example_grid_1(void)$/;"	f
lv_example_grid_2	examples/layouts/grid/lv_example_grid_2.c	/^void lv_example_grid_2(void)$/;"	f
lv_example_grid_3	examples/layouts/grid/lv_example_grid_3.c	/^void lv_example_grid_3(void)$/;"	f
lv_example_grid_4	examples/layouts/grid/lv_example_grid_4.c	/^void lv_example_grid_4(void)$/;"	f
lv_example_grid_5	examples/layouts/grid/lv_example_grid_5.c	/^void lv_example_grid_5(void)$/;"	f
lv_example_grid_6	examples/layouts/grid/lv_example_grid_6.c	/^void lv_example_grid_6(void)$/;"	f
lv_example_img_1	examples/widgets/img/lv_example_img_1.c	/^void lv_example_img_1(void)$/;"	f
lv_example_img_2	examples/widgets/img/lv_example_img_2.c	/^void lv_example_img_2(void)$/;"	f
lv_example_img_3	examples/widgets/img/lv_example_img_3.c	/^void lv_example_img_3(void)$/;"	f
lv_example_img_4	examples/widgets/img/lv_example_img_4.c	/^void lv_example_img_4(void)$/;"	f
lv_example_imgbtn_1	examples/widgets/imgbtn/lv_example_imgbtn_1.c	/^void lv_example_imgbtn_1(void)$/;"	f
lv_example_keyboard_1	examples/widgets/keyboard/lv_example_keyboard_1.c	/^void lv_example_keyboard_1(void)$/;"	f
lv_example_label_1	examples/widgets/label/lv_example_label_1.c	/^void lv_example_label_1(void)$/;"	f
lv_example_label_2	examples/widgets/label/lv_example_label_2.c	/^void lv_example_label_2(void)$/;"	f
lv_example_label_3	examples/widgets/label/lv_example_label_3.c	/^void lv_example_label_3(void)$/;"	f
lv_example_led_1	examples/widgets/led/lv_example_led_1.c	/^void lv_example_led_1(void)$/;"	f
lv_example_line_1	examples/widgets/line/lv_example_line_1.c	/^void lv_example_line_1(void)$/;"	f
lv_example_list_1	examples/widgets/list/lv_example_list_1.c	/^void lv_example_list_1(void)$/;"	f
lv_example_meter_1	examples/widgets/meter/lv_example_meter_1.c	/^void lv_example_meter_1(void)$/;"	f
lv_example_meter_2	examples/widgets/meter/lv_example_meter_2.c	/^void lv_example_meter_2(void)$/;"	f
lv_example_meter_3	examples/widgets/meter/lv_example_meter_3.c	/^void lv_example_meter_3(void)$/;"	f
lv_example_meter_4	examples/widgets/meter/lv_example_meter_4.c	/^void lv_example_meter_4(void)$/;"	f
lv_example_msgbox_1	examples/widgets/msgbox/lv_example_msgbox_1.c	/^void lv_example_msgbox_1(void)$/;"	f
lv_example_obj_1	examples/widgets/obj/lv_example_obj_1.c	/^void lv_example_obj_1(void)$/;"	f
lv_example_obj_2	examples/widgets/obj/lv_example_obj_2.c	/^void lv_example_obj_2(void)$/;"	f
lv_example_roller_1	examples/widgets/roller/lv_example_roller_1.c	/^void lv_example_roller_1(void)$/;"	f
lv_example_roller_2	examples/widgets/roller/lv_example_roller_2.c	/^void lv_example_roller_2(void)$/;"	f
lv_example_roller_3	examples/widgets/roller/lv_example_roller_3.c	/^void lv_example_roller_3(void)$/;"	f
lv_example_scroll_1	examples/scroll/lv_example_scroll_1.c	/^void lv_example_scroll_1(void)$/;"	f
lv_example_scroll_2	examples/scroll/lv_example_scroll_2.c	/^void lv_example_scroll_2(void)$/;"	f
lv_example_scroll_3	examples/scroll/lv_example_scroll_3.c	/^void lv_example_scroll_3(void)$/;"	f
lv_example_scroll_4	examples/scroll/lv_example_scroll_4.c	/^void lv_example_scroll_4(void)$/;"	f
lv_example_scroll_5	examples/scroll/lv_example_scroll_5.c	/^void lv_example_scroll_5(void)$/;"	f
lv_example_scroll_6	examples/scroll/lv_example_scroll_6.c	/^void lv_example_scroll_6(void)$/;"	f
lv_example_slider_1	examples/widgets/slider/lv_example_slider_1.c	/^void lv_example_slider_1(void)$/;"	f
lv_example_slider_2	examples/widgets/slider/lv_example_slider_2.c	/^void lv_example_slider_2(void)$/;"	f
lv_example_slider_3	examples/widgets/slider/lv_example_slider_3.c	/^void lv_example_slider_3(void)$/;"	f
lv_example_span_1	examples/widgets/span/lv_example_span_1.c	/^void lv_example_span_1(void)$/;"	f
lv_example_spinbox_1	examples/widgets/spinbox/lv_example_spinbox_1.c	/^void lv_example_spinbox_1(void)$/;"	f
lv_example_spinner_1	examples/widgets/spinner/lv_example_spinner_1.c	/^void lv_example_spinner_1(void)$/;"	f
lv_example_style_1	examples/styles/lv_example_style_1.c	/^void lv_example_style_1(void)$/;"	f
lv_example_style_10	examples/styles/lv_example_style_10.c	/^void lv_example_style_10(void)$/;"	f
lv_example_style_11	examples/styles/lv_example_style_11.c	/^void lv_example_style_11(void)$/;"	f
lv_example_style_12	examples/styles/lv_example_style_12.c	/^void lv_example_style_12(void)$/;"	f
lv_example_style_13	examples/styles/lv_example_style_13.c	/^void lv_example_style_13(void)$/;"	f
lv_example_style_14	examples/styles/lv_example_style_14.c	/^void lv_example_style_14(void)$/;"	f
lv_example_style_2	examples/styles/lv_example_style_2.c	/^void lv_example_style_2(void)$/;"	f
lv_example_style_3	examples/styles/lv_example_style_3.c	/^void lv_example_style_3(void)$/;"	f
lv_example_style_4	examples/styles/lv_example_style_4.c	/^void lv_example_style_4(void)$/;"	f
lv_example_style_5	examples/styles/lv_example_style_5.c	/^void lv_example_style_5(void)$/;"	f
lv_example_style_6	examples/styles/lv_example_style_6.c	/^void lv_example_style_6(void)$/;"	f
lv_example_style_7	examples/styles/lv_example_style_7.c	/^void lv_example_style_7(void)$/;"	f
lv_example_style_8	examples/styles/lv_example_style_8.c	/^void lv_example_style_8(void)$/;"	f
lv_example_style_9	examples/styles/lv_example_style_9.c	/^void lv_example_style_9(void)$/;"	f
lv_example_switch_1	examples/widgets/switch/lv_example_switch_1.c	/^void lv_example_switch_1(void)$/;"	f
lv_example_table_1	examples/widgets/table/lv_example_table_1.c	/^void lv_example_table_1(void)$/;"	f
lv_example_table_2	examples/widgets/table/lv_example_table_2.c	/^void lv_example_table_2(void)$/;"	f
lv_example_tabview_1	examples/widgets/tabview/lv_example_tabview_1.c	/^void lv_example_tabview_1(void)$/;"	f
lv_example_tabview_2	examples/widgets/tabview/lv_example_tabview_2.c	/^void lv_example_tabview_2(void)$/;"	f
lv_example_textarea_1	examples/widgets/textarea/lv_example_textarea_1.c	/^void lv_example_textarea_1(void)$/;"	f
lv_example_textarea_2	examples/widgets/textarea/lv_example_textarea_2.c	/^void lv_example_textarea_2(void)$/;"	f
lv_example_textarea_3	examples/widgets/textarea/lv_example_textarea_3.c	/^void lv_example_textarea_3(void)$/;"	f
lv_example_tileview_1	examples/widgets/tileview/lv_example_tileview_1.c	/^void lv_example_tileview_1(void)$/;"	f
lv_example_win_1	examples/widgets/win/lv_example_win_1.c	/^void lv_example_win_1(void)$/;"	f
lv_extra_init	src/extra/lv_extra.c	/^void lv_extra_init(void)$/;"	f
lv_flex_align_t	src/extra/layouts/flex/lv_flex.h	/^}lv_flex_align_t;$/;"	t	typeref:enum:__anon143
lv_flex_flow_t	src/extra/layouts/flex/lv_flex.h	/^}lv_flex_flow_t;$/;"	t	typeref:enum:__anon144
lv_flex_init	src/extra/layouts/flex/lv_flex.c	/^void lv_flex_init(void)$/;"	f
lv_font_default	src/font/lv_font.h	/^static inline const lv_font_t * lv_font_default(void)$/;"	f
lv_font_dejavu_16_persian_hebrew	src/font/lv_font_dejavu_16_persian_hebrew.c	/^const lv_font_t lv_font_dejavu_16_persian_hebrew = {$/;"	v
lv_font_fmt_txt_bitmap_format_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_bitmap_format_t;$/;"	t	typeref:enum:__anon51
lv_font_fmt_txt_cmap_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_cmap_t;$/;"	t	typeref:struct:__anon48
lv_font_fmt_txt_cmap_type_t	src/font/lv_font_fmt_txt.h	/^typedef uint8_t lv_font_fmt_txt_cmap_type_t;$/;"	t
lv_font_fmt_txt_dsc_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_dsc_t;$/;"	t	typeref:struct:__anon53
lv_font_fmt_txt_glyph_cache_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_glyph_cache_t;$/;"	t	typeref:struct:__anon52
lv_font_fmt_txt_glyph_dsc_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_glyph_dsc_t;$/;"	t	typeref:struct:__anon46
lv_font_fmt_txt_kern_classes_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_kern_classes_t;$/;"	t	typeref:struct:__anon50
lv_font_fmt_txt_kern_pair_t	src/font/lv_font_fmt_txt.h	/^} lv_font_fmt_txt_kern_pair_t;$/;"	t	typeref:struct:__anon49
lv_font_free	src/font/lv_font_loader.c	/^void lv_font_free(lv_font_t * font)$/;"	f
lv_font_get_bitmap_fmt_txt	src/font/lv_font_fmt_txt.c	/^const uint8_t * lv_font_get_bitmap_fmt_txt(const lv_font_t * font, uint32_t unicode_letter)$/;"	f
lv_font_get_glyph_bitmap	src/font/lv_font.c	/^const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter)$/;"	f
lv_font_get_glyph_dsc	src/font/lv_font.c	/^bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter,$/;"	f
lv_font_get_glyph_dsc_fmt_txt	src/font/lv_font_fmt_txt.c	/^bool lv_font_get_glyph_dsc_fmt_txt(const lv_font_t * font, lv_font_glyph_dsc_t * dsc_out, uint32_t unicode_letter,$/;"	f
lv_font_get_glyph_width	src/font/lv_font.c	/^uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next)$/;"	f
lv_font_get_line_height	src/font/lv_font.h	/^static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)$/;"	f
lv_font_glyph_dsc_t	src/font/lv_font.h	/^} lv_font_glyph_dsc_t;$/;"	t	typeref:struct:__anon56
lv_font_load	src/font/lv_font_loader.c	/^lv_font_t * lv_font_load(const char * font_name)$/;"	f
lv_font_montserrat_10	src/font/lv_font_montserrat_10.c	/^const lv_font_t lv_font_montserrat_10 = {$/;"	v
lv_font_montserrat_12	src/font/lv_font_montserrat_12.c	/^const lv_font_t lv_font_montserrat_12 = {$/;"	v
lv_font_montserrat_12_subpx	src/font/lv_font_montserrat_12_subpx.c	/^const lv_font_t lv_font_montserrat_12_subpx = {$/;"	v
lv_font_montserrat_14	src/font/lv_font_montserrat_14.c	/^const lv_font_t lv_font_montserrat_14 = {$/;"	v
lv_font_montserrat_16	src/font/lv_font_montserrat_16.c	/^const lv_font_t lv_font_montserrat_16 = {$/;"	v
lv_font_montserrat_18	src/font/lv_font_montserrat_18.c	/^const lv_font_t lv_font_montserrat_18 = {$/;"	v
lv_font_montserrat_20	src/font/lv_font_montserrat_20.c	/^const lv_font_t lv_font_montserrat_20 = {$/;"	v
lv_font_montserrat_22	src/font/lv_font_montserrat_22.c	/^const lv_font_t lv_font_montserrat_22 = {$/;"	v
lv_font_montserrat_24	src/font/lv_font_montserrat_24.c	/^const lv_font_t lv_font_montserrat_24 = {$/;"	v
lv_font_montserrat_26	src/font/lv_font_montserrat_26.c	/^const lv_font_t lv_font_montserrat_26 = {$/;"	v
lv_font_montserrat_28	src/font/lv_font_montserrat_28.c	/^const lv_font_t lv_font_montserrat_28 = {$/;"	v
lv_font_montserrat_28_compressed	src/font/lv_font_montserrat_28_compressed.c	/^const lv_font_t lv_font_montserrat_28_compressed = {$/;"	v
lv_font_montserrat_30	src/font/lv_font_montserrat_30.c	/^const lv_font_t lv_font_montserrat_30 = {$/;"	v
lv_font_montserrat_32	src/font/lv_font_montserrat_32.c	/^const lv_font_t lv_font_montserrat_32 = {$/;"	v
lv_font_montserrat_34	src/font/lv_font_montserrat_34.c	/^const lv_font_t lv_font_montserrat_34 = {$/;"	v
lv_font_montserrat_36	src/font/lv_font_montserrat_36.c	/^const lv_font_t lv_font_montserrat_36 = {$/;"	v
lv_font_montserrat_38	src/font/lv_font_montserrat_38.c	/^const lv_font_t lv_font_montserrat_38 = {$/;"	v
lv_font_montserrat_40	src/font/lv_font_montserrat_40.c	/^const lv_font_t lv_font_montserrat_40 = {$/;"	v
lv_font_montserrat_42	src/font/lv_font_montserrat_42.c	/^const lv_font_t lv_font_montserrat_42 = {$/;"	v
lv_font_montserrat_44	src/font/lv_font_montserrat_44.c	/^const lv_font_t lv_font_montserrat_44 = {$/;"	v
lv_font_montserrat_46	src/font/lv_font_montserrat_46.c	/^const lv_font_t lv_font_montserrat_46 = {$/;"	v
lv_font_montserrat_48	src/font/lv_font_montserrat_48.c	/^const lv_font_t lv_font_montserrat_48 = {$/;"	v
lv_font_montserrat_8	src/font/lv_font_montserrat_8.c	/^const lv_font_t lv_font_montserrat_8 = {$/;"	v
lv_font_simsun_16_cjk	src/font/lv_font_simsun_16_cjk.c	/^const lv_font_t lv_font_simsun_16_cjk = {$/;"	v
lv_font_subpx_t	src/font/lv_font.h	/^typedef uint8_t lv_font_subpx_t;$/;"	t
lv_font_t	src/font/lv_font.h	/^} lv_font_t;$/;"	t	typeref:struct:_lv_font_t
lv_font_unscii_16	src/font/lv_font_unscii_16.c	/^const lv_font_t lv_font_unscii_16 = {$/;"	v
lv_font_unscii_8	src/font/lv_font_unscii_8.c	/^const lv_font_t lv_font_unscii_8 = {$/;"	v
lv_fs_close	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_close(lv_fs_file_t * file_p)$/;"	f
lv_fs_dir_close	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_dir_close(lv_fs_dir_t * rddir_p)$/;"	f
lv_fs_dir_open	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_dir_open(lv_fs_dir_t * rddir_p, const char * path)$/;"	f
lv_fs_dir_read	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_dir_read(lv_fs_dir_t * rddir_p, char * fn)$/;"	f
lv_fs_dir_t	src/misc/lv_fs.h	/^} lv_fs_dir_t;$/;"	t	typeref:struct:__anon9
lv_fs_drv_init	src/misc/lv_fs.c	/^void lv_fs_drv_init(lv_fs_drv_t * drv)$/;"	f
lv_fs_drv_register	src/misc/lv_fs.c	/^void lv_fs_drv_register(lv_fs_drv_t * drv_p)$/;"	f
lv_fs_drv_t	src/misc/lv_fs.h	/^} lv_fs_drv_t;$/;"	t	typeref:struct:_lv_fs_drv_t
lv_fs_file_t	src/misc/lv_fs.h	/^} lv_fs_file_t;$/;"	t	typeref:struct:__anon8
lv_fs_get_drv	src/misc/lv_fs.c	/^lv_fs_drv_t * lv_fs_get_drv(char letter)$/;"	f
lv_fs_get_ext	src/misc/lv_fs.c	/^const char * lv_fs_get_ext(const char * fn)$/;"	f
lv_fs_get_last	src/misc/lv_fs.c	/^const char * lv_fs_get_last(const char * path)$/;"	f
lv_fs_get_letters	src/misc/lv_fs.c	/^char * lv_fs_get_letters(char * buf)$/;"	f
lv_fs_get_real_path	src/misc/lv_fs.c	/^static const char * lv_fs_get_real_path(const char * path)$/;"	f	file:
lv_fs_is_ready	src/misc/lv_fs.c	/^bool lv_fs_is_ready(char letter)$/;"	f
lv_fs_mode_t	src/misc/lv_fs.h	/^typedef uint8_t lv_fs_mode_t;$/;"	t
lv_fs_open	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_open(lv_fs_file_t * file_p, const char * path, lv_fs_mode_t mode)$/;"	f
lv_fs_read	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_read(lv_fs_file_t * file_p, void * buf, uint32_t btr, uint32_t * br)$/;"	f
lv_fs_res_t	src/misc/lv_fs.h	/^typedef uint8_t lv_fs_res_t;$/;"	t
lv_fs_seek	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_seek(lv_fs_file_t * file_p, uint32_t pos, lv_fs_whence_t whence)$/;"	f
lv_fs_tell	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_tell(lv_fs_file_t * file_p, uint32_t * pos)$/;"	f
lv_fs_up	src/misc/lv_fs.c	/^char * lv_fs_up(char * path)$/;"	f
lv_fs_whence_t	src/misc/lv_fs.h	/^}lv_fs_whence_t;$/;"	t	typeref:enum:__anon7
lv_fs_write	src/misc/lv_fs.c	/^lv_fs_res_t lv_fs_write(lv_fs_file_t * file_p, const void * buf, uint32_t btw, uint32_t * bw)$/;"	f
lv_get_snippet	src/extra/widgets/span/lv_span.c	/^static lv_snippet_t * lv_get_snippet(uint16_t index)$/;"	f	file:
lv_get_snippet_cnt	src/extra/widgets/span/lv_span.c	/^static uint16_t lv_get_snippet_cnt()$/;"	f	file:
lv_gpu_nxp_invalidate_cache	src/gpu/lv_gpu_nxp_pxp.c	/^static void lv_gpu_nxp_invalidate_cache(uint32_t address, uint32_t width, uint32_t height, uint32_t stride,$/;"	f	file:
lv_gpu_nxp_pxp_blit	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_blit(lv_color_t * dest, lv_coord_t dest_width, const lv_color_t * src, lv_coord_t src_width,$/;"	f
lv_gpu_nxp_pxp_blit_recolor	src/gpu/lv_gpu_nxp_pxp.c	/^static void lv_gpu_nxp_pxp_blit_recolor(lv_color_t * dest, lv_coord_t dest_width, const lv_color_t * src,$/;"	f	file:
lv_gpu_nxp_pxp_deinit	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_deinit(void)$/;"	f
lv_gpu_nxp_pxp_disable_color_key	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_disable_color_key(void)$/;"	f
lv_gpu_nxp_pxp_disable_recolor	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_disable_recolor(void)$/;"	f
lv_gpu_nxp_pxp_enable_color_key	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_enable_color_key(void)$/;"	f
lv_gpu_nxp_pxp_enable_recolor	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_enable_recolor(lv_color_t color, lv_opa_t opa)$/;"	f
lv_gpu_nxp_pxp_fill	src/gpu/lv_gpu_nxp_pxp.c	/^void lv_gpu_nxp_pxp_fill(lv_color_t * dest_buf, lv_coord_t dest_width, const lv_area_t * fill_area, lv_color_t color,$/;"	f
lv_gpu_nxp_pxp_init	src/gpu/lv_gpu_nxp_pxp.c	/^lv_res_t lv_gpu_nxp_pxp_init(lv_nxp_pxp_cfg_t * cfg)$/;"	f
lv_gpu_nxp_pxp_run	src/gpu/lv_gpu_nxp_pxp.c	/^static void lv_gpu_nxp_pxp_run(void)$/;"	f	file:
lv_gpu_nxp_vglite_blit	src/gpu/lv_gpu_nxp_vglite.c	/^lv_res_t lv_gpu_nxp_vglite_blit(lv_gpu_nxp_vglite_blit_info_t * blit)$/;"	f
lv_gpu_nxp_vglite_blit_info_t	src/gpu/lv_gpu_nxp_vglite.h	/^} lv_gpu_nxp_vglite_blit_info_t;$/;"	t	typeref:struct:__anon149
lv_gpu_nxp_vglite_fill	src/gpu/lv_gpu_nxp_vglite.c	/^lv_res_t lv_gpu_nxp_vglite_fill(lv_color_t * dest_buf, lv_coord_t dest_width, lv_coord_t dest_height,$/;"	f
lv_gpu_stm32_dma2d_blend	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_blend(lv_color_t * buf, lv_coord_t buf_w, const lv_color_t * map, lv_opa_t opa,$/;"	f
lv_gpu_stm32_dma2d_copy	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_copy(lv_color_t * buf, lv_coord_t buf_w, const lv_color_t * map, lv_coord_t map_w,$/;"	f
lv_gpu_stm32_dma2d_fill	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_fill(lv_color_t * buf, lv_coord_t buf_w, lv_color_t color, lv_coord_t fill_w, lv_coord_t fill_h)$/;"	f
lv_gpu_stm32_dma2d_fill_mask	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_fill_mask(lv_color_t * buf, lv_coord_t buf_w, lv_color_t color, const lv_opa_t * mask,$/;"	f
lv_gpu_stm32_dma2d_init	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_init(void)$/;"	f
lv_gpu_stm32_dma2d_wait_cb	src/gpu/lv_gpu_stm32_dma2d.c	/^void lv_gpu_stm32_dma2d_wait_cb(lv_disp_drv_t * drv)$/;"	f
lv_grad_dir_t	src/misc/lv_style.h	/^typedef uint8_t lv_grad_dir_t;$/;"	t
lv_grid_align_t	src/extra/layouts/grid/lv_grid.h	/^}lv_grid_align_t;$/;"	t	typeref:enum:__anon147
lv_grid_fr	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_grid_fr(uint8_t x)$/;"	f
lv_grid_init	src/extra/layouts/grid/lv_grid.c	/^void lv_grid_init(void)$/;"	f
lv_group_add_obj	src/core/lv_group.c	/^void lv_group_add_obj(lv_group_t * group, lv_obj_t * obj)$/;"	f
lv_group_create	src/core/lv_group.c	/^lv_group_t * lv_group_create(void)$/;"	f
lv_group_del	src/core/lv_group.c	/^void lv_group_del(lv_group_t * group)$/;"	f
lv_group_focus_cb_t	src/core/lv_group.h	/^typedef void (*lv_group_focus_cb_t)(struct _lv_group_t *);$/;"	t
lv_group_focus_freeze	src/core/lv_group.c	/^void lv_group_focus_freeze(lv_group_t * group, bool en)$/;"	f
lv_group_focus_next	src/core/lv_group.c	/^void lv_group_focus_next(lv_group_t * group)$/;"	f
lv_group_focus_obj	src/core/lv_group.c	/^void lv_group_focus_obj(lv_obj_t * obj)$/;"	f
lv_group_focus_prev	src/core/lv_group.c	/^void lv_group_focus_prev(lv_group_t * group)$/;"	f
lv_group_get_default	src/core/lv_group.c	/^lv_group_t * lv_group_get_default(void)$/;"	f
lv_group_get_editing	src/core/lv_group.c	/^bool lv_group_get_editing(const lv_group_t * group)$/;"	f
lv_group_get_focus_cb	src/core/lv_group.c	/^lv_group_focus_cb_t lv_group_get_focus_cb(const lv_group_t * group)$/;"	f
lv_group_get_focused	src/core/lv_group.c	/^lv_obj_t * lv_group_get_focused(const lv_group_t * group)$/;"	f
lv_group_get_obj_count	src/core/lv_group.c	/^uint32_t lv_group_get_obj_count(lv_group_t * group)$/;"	f
lv_group_get_wrap	src/core/lv_group.c	/^bool lv_group_get_wrap(lv_group_t * group)$/;"	f
lv_group_refocus	src/core/lv_group.c	/^static void lv_group_refocus(lv_group_t * g)$/;"	f	file:
lv_group_refocus_policy_t	src/core/lv_group.h	/^}lv_group_refocus_policy_t;$/;"	t	typeref:enum:__anon190
lv_group_remove_all_objs	src/core/lv_group.c	/^void lv_group_remove_all_objs(lv_group_t * group)$/;"	f
lv_group_remove_obj	src/core/lv_group.c	/^void lv_group_remove_obj(lv_obj_t * obj)$/;"	f
lv_group_send_data	src/core/lv_group.c	/^lv_res_t lv_group_send_data(lv_group_t * group, uint32_t c)$/;"	f
lv_group_set_default	src/core/lv_group.c	/^void lv_group_set_default(lv_group_t * group)$/;"	f
lv_group_set_editing	src/core/lv_group.c	/^void lv_group_set_editing(lv_group_t * group, bool edit)$/;"	f
lv_group_set_focus_cb	src/core/lv_group.c	/^void lv_group_set_focus_cb(lv_group_t * group, lv_group_focus_cb_t focus_cb)$/;"	f
lv_group_set_refocus_policy	src/core/lv_group.c	/^void lv_group_set_refocus_policy(lv_group_t * group, lv_group_refocus_policy_t policy)$/;"	f
lv_group_set_wrap	src/core/lv_group.c	/^void lv_group_set_wrap(lv_group_t * group, bool en)$/;"	f
lv_group_t	src/core/lv_group.h	/^} lv_group_t;$/;"	t	typeref:struct:_lv_group_t
lv_hit_test_info_t	src/core/lv_event.h	/^} lv_hit_test_info_t;$/;"	t	typeref:struct:__anon192
lv_img_buf_alloc	src/draw/lv_img_buf.c	/^lv_img_dsc_t * lv_img_buf_alloc(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)$/;"	f
lv_img_buf_free	src/draw/lv_img_buf.c	/^void lv_img_buf_free(lv_img_dsc_t * dsc)$/;"	f
lv_img_buf_get_img_size	src/draw/lv_img_buf.c	/^uint32_t lv_img_buf_get_img_size(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)$/;"	f
lv_img_buf_get_px_alpha	src/draw/lv_img_buf.c	/^lv_opa_t lv_img_buf_get_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y)$/;"	f
lv_img_buf_get_px_color	src/draw/lv_img_buf.c	/^lv_color_t lv_img_buf_get_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t color)$/;"	f
lv_img_buf_set_palette	src/draw/lv_img_buf.c	/^void lv_img_buf_set_palette(lv_img_dsc_t * dsc, uint8_t id, lv_color_t c)$/;"	f
lv_img_buf_set_px_alpha	src/draw/lv_img_buf.c	/^void lv_img_buf_set_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)$/;"	f
lv_img_buf_set_px_color	src/draw/lv_img_buf.c	/^void lv_img_buf_set_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)$/;"	f
lv_img_cache_invalidate_src	src/draw/lv_img_cache.c	/^void lv_img_cache_invalidate_src(const void * src)$/;"	f
lv_img_cache_match	src/draw/lv_img_cache.c	/^static bool lv_img_cache_match(const void * src1, const void * src2)$/;"	f	file:
lv_img_cache_set_size	src/draw/lv_img_cache.c	/^void lv_img_cache_set_size(uint16_t new_entry_cnt)$/;"	f
lv_img_cf_get_px_size	src/draw/lv_draw_img.c	/^uint8_t lv_img_cf_get_px_size(lv_img_cf_t cf)$/;"	f
lv_img_cf_has_alpha	src/draw/lv_draw_img.c	/^bool lv_img_cf_has_alpha(lv_img_cf_t cf)$/;"	f
lv_img_cf_is_chroma_keyed	src/draw/lv_draw_img.c	/^bool lv_img_cf_is_chroma_keyed(lv_img_cf_t cf)$/;"	f
lv_img_cf_t	src/draw/lv_img_buf.h	/^typedef uint8_t lv_img_cf_t;$/;"	t
lv_img_class	src/widgets/lv_img.c	/^const lv_obj_class_t lv_img_class = {$/;"	v
lv_img_constructor	src/widgets/lv_img.c	/^static void lv_img_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_img_create	src/widgets/lv_img.c	/^lv_obj_t * lv_img_create(lv_obj_t * parent)$/;"	f
lv_img_decoder_built_in_close	src/draw/lv_img_decoder.c	/^void lv_img_decoder_built_in_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)$/;"	f
lv_img_decoder_built_in_data_t	src/draw/lv_img_decoder.c	/^} lv_img_decoder_built_in_data_t;$/;"	t	typeref:struct:__anon70	file:
lv_img_decoder_built_in_info	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_built_in_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t * header)$/;"	f
lv_img_decoder_built_in_line_alpha	src/draw/lv_img_decoder.c	/^static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,$/;"	f	file:
lv_img_decoder_built_in_line_indexed	src/draw/lv_img_decoder.c	/^static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,$/;"	f	file:
lv_img_decoder_built_in_line_true_color	src/draw/lv_img_decoder.c	/^static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y,$/;"	f	file:
lv_img_decoder_built_in_open	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_built_in_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)$/;"	f
lv_img_decoder_built_in_read_line	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_built_in_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, lv_coord_t x,$/;"	f
lv_img_decoder_close	src/draw/lv_img_decoder.c	/^void lv_img_decoder_close(lv_img_decoder_dsc_t * dsc)$/;"	f
lv_img_decoder_close_f_t	src/draw/lv_img_decoder.h	/^typedef void (*lv_img_decoder_close_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc);$/;"	t
lv_img_decoder_create	src/draw/lv_img_decoder.c	/^lv_img_decoder_t * lv_img_decoder_create(void)$/;"	f
lv_img_decoder_delete	src/draw/lv_img_decoder.c	/^void lv_img_decoder_delete(lv_img_decoder_t * decoder)$/;"	f
lv_img_decoder_dsc_t	src/draw/lv_img_decoder.h	/^} lv_img_decoder_dsc_t;$/;"	t	typeref:struct:_lv_img_decoder_dsc_t
lv_img_decoder_get_info	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_get_info(const void * src, lv_img_header_t * header)$/;"	f
lv_img_decoder_info_f_t	src/draw/lv_img_decoder.h	/^typedef lv_res_t (*lv_img_decoder_info_f_t)(struct _lv_img_decoder_t * decoder, const void * src,$/;"	t
lv_img_decoder_open	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_open(lv_img_decoder_dsc_t * dsc, const void * src, lv_color_t color, int32_t frame_id)$/;"	f
lv_img_decoder_open_f_t	src/draw/lv_img_decoder.h	/^typedef lv_res_t (*lv_img_decoder_open_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc);$/;"	t
lv_img_decoder_read_line	src/draw/lv_img_decoder.c	/^lv_res_t lv_img_decoder_read_line(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_t len, uint8_t * buf)$/;"	f
lv_img_decoder_read_line_f_t	src/draw/lv_img_decoder.h	/^typedef lv_res_t (*lv_img_decoder_read_line_f_t)(struct _lv_img_decoder_t * decoder, struct _lv_img_decoder_dsc_t * dsc,$/;"	t
lv_img_decoder_set_close_cb	src/draw/lv_img_decoder.c	/^void lv_img_decoder_set_close_cb(lv_img_decoder_t * decoder, lv_img_decoder_close_f_t close_cb)$/;"	f
lv_img_decoder_set_info_cb	src/draw/lv_img_decoder.c	/^void lv_img_decoder_set_info_cb(lv_img_decoder_t * decoder, lv_img_decoder_info_f_t info_cb)$/;"	f
lv_img_decoder_set_open_cb	src/draw/lv_img_decoder.c	/^void lv_img_decoder_set_open_cb(lv_img_decoder_t * decoder, lv_img_decoder_open_f_t open_cb)$/;"	f
lv_img_decoder_set_read_line_cb	src/draw/lv_img_decoder.c	/^void lv_img_decoder_set_read_line_cb(lv_img_decoder_t * decoder, lv_img_decoder_read_line_f_t read_line_cb)$/;"	f
lv_img_decoder_t	src/draw/lv_img_decoder.h	/^} lv_img_decoder_t;$/;"	t	typeref:struct:_lv_img_decoder_t
lv_img_destructor	src/widgets/lv_img.c	/^static void lv_img_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_img_draw_core	src/draw/lv_draw_img.c	/^LV_ATTRIBUTE_FAST_MEM static lv_res_t lv_img_draw_core(const lv_area_t * coords, const lv_area_t * clip_area,$/;"	f	file:
lv_img_dsc_t	src/draw/lv_img_buf.h	/^} lv_img_dsc_t;$/;"	t	typeref:struct:__anon65
lv_img_event	src/widgets/lv_img.c	/^static void lv_img_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_img_get_angle	src/widgets/lv_img.c	/^uint16_t lv_img_get_angle(lv_obj_t * obj)$/;"	f
lv_img_get_antialias	src/widgets/lv_img.c	/^bool lv_img_get_antialias(lv_obj_t * obj)$/;"	f
lv_img_get_offset_x	src/widgets/lv_img.c	/^lv_coord_t lv_img_get_offset_x(lv_obj_t * obj)$/;"	f
lv_img_get_offset_y	src/widgets/lv_img.c	/^lv_coord_t lv_img_get_offset_y(lv_obj_t * obj)$/;"	f
lv_img_get_pivot	src/widgets/lv_img.c	/^void lv_img_get_pivot(lv_obj_t * obj, lv_point_t * pivot)$/;"	f
lv_img_get_src	src/widgets/lv_img.c	/^const void * lv_img_get_src(lv_obj_t * obj)$/;"	f
lv_img_get_zoom	src/widgets/lv_img.c	/^uint16_t lv_img_get_zoom(lv_obj_t * obj)$/;"	f
lv_img_header_t	src/draw/lv_img_buf.h	/^} lv_img_header_t;$/;"	t	typeref:struct:__anon63
lv_img_header_t	src/draw/lv_img_buf.h	/^} lv_img_header_t;$/;"	t	typeref:struct:__anon64
lv_img_set_angle	src/widgets/lv_img.c	/^void lv_img_set_angle(lv_obj_t * obj, int16_t angle)$/;"	f
lv_img_set_antialias	src/widgets/lv_img.c	/^void lv_img_set_antialias(lv_obj_t * obj, bool antialias)$/;"	f
lv_img_set_offset_x	src/widgets/lv_img.c	/^void lv_img_set_offset_x(lv_obj_t * obj, lv_coord_t x)$/;"	f
lv_img_set_offset_y	src/widgets/lv_img.c	/^void lv_img_set_offset_y(lv_obj_t * obj, lv_coord_t y)$/;"	f
lv_img_set_pivot	src/widgets/lv_img.c	/^void lv_img_set_pivot(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)$/;"	f
lv_img_set_src	src/widgets/lv_img.c	/^void lv_img_set_src(lv_obj_t * obj, const void * src)$/;"	f
lv_img_set_zoom	src/widgets/lv_img.c	/^void lv_img_set_zoom(lv_obj_t * obj, uint16_t zoom)$/;"	f
lv_img_src_get_type	src/draw/lv_draw_img.c	/^lv_img_src_t lv_img_src_get_type(const void * src)$/;"	f
lv_img_src_t	src/draw/lv_img_decoder.h	/^typedef uint8_t lv_img_src_t;$/;"	t
lv_img_t	src/widgets/lv_img.h	/^} lv_img_t;$/;"	t	typeref:struct:__anon177
lv_img_transform_dsc_t	src/draw/lv_img_buf.h	/^} lv_img_transform_dsc_t;$/;"	t	typeref:struct:__anon66
lv_imgbtn_class	src/extra/widgets/imgbtn/lv_imgbtn.c	/^const lv_obj_class_t lv_imgbtn_class = {$/;"	v
lv_imgbtn_constructor	src/extra/widgets/imgbtn/lv_imgbtn.c	/^static void lv_imgbtn_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_imgbtn_create	src/extra/widgets/imgbtn/lv_imgbtn.c	/^lv_obj_t * lv_imgbtn_create(lv_obj_t * parent)$/;"	f
lv_imgbtn_event	src/extra/widgets/imgbtn/lv_imgbtn.c	/^static void lv_imgbtn_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_imgbtn_get_src_left	src/extra/widgets/imgbtn/lv_imgbtn.c	/^const void * lv_imgbtn_get_src_left(lv_obj_t * obj, lv_imgbtn_state_t state)$/;"	f
lv_imgbtn_get_src_middle	src/extra/widgets/imgbtn/lv_imgbtn.c	/^const void * lv_imgbtn_get_src_middle(lv_obj_t * obj, lv_imgbtn_state_t state)$/;"	f
lv_imgbtn_get_src_right	src/extra/widgets/imgbtn/lv_imgbtn.c	/^const void * lv_imgbtn_get_src_right(lv_obj_t * obj, lv_imgbtn_state_t state)$/;"	f
lv_imgbtn_set_src	src/extra/widgets/imgbtn/lv_imgbtn.c	/^void lv_imgbtn_set_src(lv_obj_t * obj, lv_imgbtn_state_t state, const void * src_left, const void * src_mid,$/;"	f
lv_imgbtn_state_t	src/extra/widgets/imgbtn/lv_imgbtn.h	/^}lv_imgbtn_state_t;$/;"	t	typeref:enum:__anon102
lv_imgbtn_t	src/extra/widgets/imgbtn/lv_imgbtn.h	/^} lv_imgbtn_t;$/;"	t	typeref:struct:__anon103
lv_indev_data_t	src/hal/lv_hal_indev.h	/^} lv_indev_data_t;$/;"	t	typeref:struct:__anon92
lv_indev_drv_init	src/hal/lv_hal_indev.c	/^void lv_indev_drv_init(lv_indev_drv_t * driver)$/;"	f
lv_indev_drv_register	src/hal/lv_hal_indev.c	/^lv_indev_t * lv_indev_drv_register(lv_indev_drv_t * driver)$/;"	f
lv_indev_drv_t	src/hal/lv_hal_indev.h	/^} lv_indev_drv_t;$/;"	t	typeref:struct:_lv_indev_drv_t
lv_indev_drv_update	src/hal/lv_hal_indev.c	/^void lv_indev_drv_update(lv_indev_t * indev, lv_indev_drv_t * new_drv)$/;"	f
lv_indev_enable	src/core/lv_indev.c	/^void lv_indev_enable(lv_indev_t * indev, bool en)$/;"	f
lv_indev_get_act	src/core/lv_indev.c	/^lv_indev_t * lv_indev_get_act(void)$/;"	f
lv_indev_get_gesture_dir	src/core/lv_indev.c	/^lv_dir_t lv_indev_get_gesture_dir(const lv_indev_t * indev)$/;"	f
lv_indev_get_key	src/core/lv_indev.c	/^uint32_t lv_indev_get_key(const lv_indev_t * indev)$/;"	f
lv_indev_get_next	src/hal/lv_hal_indev.c	/^lv_indev_t * lv_indev_get_next(lv_indev_t * indev)$/;"	f
lv_indev_get_obj_act	src/core/lv_indev.c	/^lv_obj_t * lv_indev_get_obj_act(void)$/;"	f
lv_indev_get_point	src/core/lv_indev.c	/^void lv_indev_get_point(const lv_indev_t * indev, lv_point_t * point)$/;"	f
lv_indev_get_read_timer	src/core/lv_indev.c	/^lv_timer_t * lv_indev_get_read_timer(lv_disp_t * indev)$/;"	f
lv_indev_get_scroll_dir	src/core/lv_indev.c	/^lv_dir_t lv_indev_get_scroll_dir(const lv_indev_t * indev)$/;"	f
lv_indev_get_scroll_obj	src/core/lv_indev.c	/^lv_obj_t * lv_indev_get_scroll_obj(const lv_indev_t * indev)$/;"	f
lv_indev_get_type	src/core/lv_indev.c	/^lv_indev_type_t lv_indev_get_type(const lv_indev_t * indev)$/;"	f
lv_indev_get_vect	src/core/lv_indev.c	/^void lv_indev_get_vect(const lv_indev_t * indev, lv_point_t * point)$/;"	f
lv_indev_read_timer_cb	src/core/lv_indev.c	/^void lv_indev_read_timer_cb(lv_timer_t * timer)$/;"	f
lv_indev_reset	src/core/lv_indev.c	/^void lv_indev_reset(lv_indev_t * indev, lv_obj_t * obj)$/;"	f
lv_indev_reset_long_press	src/core/lv_indev.c	/^void lv_indev_reset_long_press(lv_indev_t * indev)$/;"	f
lv_indev_scroll_get_snap_dist	src/core/lv_indev_scroll.c	/^void lv_indev_scroll_get_snap_dist(lv_obj_t * obj, lv_point_t * p)$/;"	f
lv_indev_scroll_throw_predict	src/core/lv_indev_scroll.c	/^lv_coord_t lv_indev_scroll_throw_predict(lv_indev_t * indev, lv_dir_t dir)$/;"	f
lv_indev_search_obj	src/core/lv_indev.c	/^lv_obj_t * lv_indev_search_obj(lv_obj_t * obj, lv_point_t * point)$/;"	f
lv_indev_set_button_points	src/core/lv_indev.c	/^void lv_indev_set_button_points(lv_indev_t * indev, const lv_point_t points[])$/;"	f
lv_indev_set_cursor	src/core/lv_indev.c	/^void lv_indev_set_cursor(lv_indev_t * indev, lv_obj_t * cur_obj)$/;"	f
lv_indev_set_group	src/core/lv_indev.c	/^void lv_indev_set_group(lv_indev_t * indev, lv_group_t * group)$/;"	f
lv_indev_state_t	src/hal/lv_hal_indev.h	/^} lv_indev_state_t;$/;"	t	typeref:enum:__anon91
lv_indev_t	src/hal/lv_hal_indev.h	/^} lv_indev_t;$/;"	t	typeref:struct:_lv_indev_t
lv_indev_type_t	src/hal/lv_hal_indev.h	/^} lv_indev_type_t;$/;"	t	typeref:enum:__anon90
lv_indev_wait_release	src/core/lv_indev.c	/^void lv_indev_wait_release(lv_indev_t * indev)$/;"	f
lv_init	src/core/lv_obj.c	/^void lv_init(void)$/;"	f
lv_initialized	src/core/lv_obj.c	/^static bool lv_initialized = false;$/;"	v	file:
lv_key_t	src/core/lv_group.h	/^typedef uint8_t lv_key_t;$/;"	t
lv_keyboard_class	src/extra/widgets/keyboard/lv_keyboard.c	/^const lv_obj_class_t lv_keyboard_class = {$/;"	v
lv_keyboard_constructor	src/extra/widgets/keyboard/lv_keyboard.c	/^static void lv_keyboard_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_keyboard_create	src/extra/widgets/keyboard/lv_keyboard.c	/^lv_obj_t * lv_keyboard_create(lv_obj_t * parent)$/;"	f
lv_keyboard_def_event_cb	src/extra/widgets/keyboard/lv_keyboard.c	/^void lv_keyboard_def_event_cb(lv_event_t * e)$/;"	f
lv_keyboard_get_map_array	src/extra/widgets/keyboard/lv_keyboard.h	/^static inline const char ** lv_keyboard_get_map_array(const lv_obj_t * kb)$/;"	f
lv_keyboard_get_mode	src/extra/widgets/keyboard/lv_keyboard.c	/^lv_keyboard_mode_t lv_keyboard_get_mode(const lv_obj_t * obj)$/;"	f
lv_keyboard_get_textarea	src/extra/widgets/keyboard/lv_keyboard.c	/^lv_obj_t * lv_keyboard_get_textarea(const lv_obj_t * obj)$/;"	f
lv_keyboard_mode_t	src/extra/widgets/keyboard/lv_keyboard.h	/^typedef uint8_t lv_keyboard_mode_t;$/;"	t
lv_keyboard_set_map	src/extra/widgets/keyboard/lv_keyboard.c	/^void lv_keyboard_set_map(lv_obj_t * obj, lv_keyboard_mode_t mode, const char * map[], const lv_btnmatrix_ctrl_t ctrl_map[])$/;"	f
lv_keyboard_set_mode	src/extra/widgets/keyboard/lv_keyboard.c	/^void lv_keyboard_set_mode(lv_obj_t * obj, lv_keyboard_mode_t mode)$/;"	f
lv_keyboard_set_textarea	src/extra/widgets/keyboard/lv_keyboard.c	/^void lv_keyboard_set_textarea(lv_obj_t * obj, lv_obj_t * ta)$/;"	f
lv_keyboard_t	src/extra/widgets/keyboard/lv_keyboard.h	/^} lv_keyboard_t;$/;"	t	typeref:struct:__anon138
lv_keyboard_update_map	src/extra/widgets/keyboard/lv_keyboard.c	/^static void lv_keyboard_update_map(lv_obj_t * obj)$/;"	f	file:
lv_label_class	src/widgets/lv_label.c	/^const lv_obj_class_t lv_label_class = {$/;"	v
lv_label_constructor	src/widgets/lv_label.c	/^static void lv_label_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_label_create	src/widgets/lv_label.c	/^lv_obj_t * lv_label_create(lv_obj_t * parent)$/;"	f
lv_label_cut_text	src/widgets/lv_label.c	/^void lv_label_cut_text(lv_obj_t * obj, uint32_t pos, uint32_t cnt)$/;"	f
lv_label_destructor	src/widgets/lv_label.c	/^static void lv_label_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_label_dot_tmp_free	src/widgets/lv_label.c	/^static void lv_label_dot_tmp_free(lv_obj_t * obj)$/;"	f	file:
lv_label_event	src/widgets/lv_label.c	/^static void lv_label_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_label_get_dot_tmp	src/widgets/lv_label.c	/^static char * lv_label_get_dot_tmp(lv_obj_t * obj)$/;"	f	file:
lv_label_get_letter_on	src/widgets/lv_label.c	/^uint32_t lv_label_get_letter_on(const lv_obj_t * obj, lv_point_t * pos_in)$/;"	f
lv_label_get_letter_pos	src/widgets/lv_label.c	/^void lv_label_get_letter_pos(const lv_obj_t * obj, uint32_t char_id, lv_point_t * pos)$/;"	f
lv_label_get_long_mode	src/widgets/lv_label.c	/^lv_label_long_mode_t lv_label_get_long_mode(const lv_obj_t * obj)$/;"	f
lv_label_get_recolor	src/widgets/lv_label.c	/^bool lv_label_get_recolor(const lv_obj_t * obj)$/;"	f
lv_label_get_text	src/widgets/lv_label.c	/^char * lv_label_get_text(const lv_obj_t * obj)$/;"	f
lv_label_get_text_selection_end	src/widgets/lv_label.c	/^uint32_t lv_label_get_text_selection_end(const lv_obj_t * obj)$/;"	f
lv_label_get_text_selection_start	src/widgets/lv_label.c	/^uint32_t lv_label_get_text_selection_start(const lv_obj_t * obj)$/;"	f
lv_label_ins_text	src/widgets/lv_label.c	/^void lv_label_ins_text(lv_obj_t * obj, uint32_t pos, const char * txt)$/;"	f
lv_label_is_char_under_pos	src/widgets/lv_label.c	/^bool lv_label_is_char_under_pos(const lv_obj_t * obj, lv_point_t * pos)$/;"	f
lv_label_long_mode_t	src/widgets/lv_label.h	/^typedef uint8_t lv_label_long_mode_t;$/;"	t
lv_label_refr_text	src/widgets/lv_label.c	/^static void lv_label_refr_text(lv_obj_t * obj)$/;"	f	file:
lv_label_revert_dots	src/widgets/lv_label.c	/^static void lv_label_revert_dots(lv_obj_t * obj)$/;"	f	file:
lv_label_set_dot_tmp	src/widgets/lv_label.c	/^static bool lv_label_set_dot_tmp(lv_obj_t * obj, char * data, uint32_t len)$/;"	f	file:
lv_label_set_long_mode	src/widgets/lv_label.c	/^void lv_label_set_long_mode(lv_obj_t * obj, lv_label_long_mode_t long_mode)$/;"	f
lv_label_set_recolor	src/widgets/lv_label.c	/^void lv_label_set_recolor(lv_obj_t * obj, bool en)$/;"	f
lv_label_set_text	src/widgets/lv_label.c	/^void lv_label_set_text(lv_obj_t * obj, const char * text)$/;"	f
lv_label_set_text_fmt	src/widgets/lv_label.c	/^void lv_label_set_text_fmt(lv_obj_t * obj, const char * fmt, ...)$/;"	f
lv_label_set_text_sel_end	src/widgets/lv_label.c	/^void lv_label_set_text_sel_end(lv_obj_t * obj, uint32_t index)$/;"	f
lv_label_set_text_sel_start	src/widgets/lv_label.c	/^void lv_label_set_text_sel_start(lv_obj_t * obj, uint32_t index)$/;"	f
lv_label_set_text_static	src/widgets/lv_label.c	/^void lv_label_set_text_static(lv_obj_t * obj, const char * text)$/;"	f
lv_label_t	src/widgets/lv_label.h	/^}lv_label_t;$/;"	t	typeref:struct:__anon168
lv_layer_sys	src/core/lv_disp.h	/^static inline lv_obj_t * lv_layer_sys(void)$/;"	f
lv_layer_top	src/core/lv_disp.h	/^static inline lv_obj_t * lv_layer_top(void)$/;"	f
lv_layout_dsc_t	src/core/lv_obj_pos.h	/^}lv_layout_dsc_t;$/;"	t	typeref:struct:__anon200
lv_layout_register	src/core/lv_obj_pos.c	/^uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data)$/;"	f
lv_layout_update_cb_t	src/core/lv_obj_pos.h	/^typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);$/;"	t
lv_led_class	src/extra/widgets/led/lv_led.c	/^const lv_obj_class_t lv_led_class  = {$/;"	v
lv_led_constructor	src/extra/widgets/led/lv_led.c	/^static void lv_led_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_led_create	src/extra/widgets/led/lv_led.c	/^lv_obj_t * lv_led_create(lv_obj_t * parent)$/;"	f
lv_led_event	src/extra/widgets/led/lv_led.c	/^static void lv_led_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_led_get_brightness	src/extra/widgets/led/lv_led.c	/^uint8_t lv_led_get_brightness(const lv_obj_t * obj)$/;"	f
lv_led_off	src/extra/widgets/led/lv_led.c	/^void lv_led_off(lv_obj_t * led)$/;"	f
lv_led_on	src/extra/widgets/led/lv_led.c	/^void lv_led_on(lv_obj_t * led)$/;"	f
lv_led_set_brightness	src/extra/widgets/led/lv_led.c	/^void lv_led_set_brightness(lv_obj_t * obj, uint8_t bright)$/;"	f
lv_led_set_color	src/extra/widgets/led/lv_led.c	/^void lv_led_set_color(lv_obj_t * obj, lv_color_t color)$/;"	f
lv_led_t	src/extra/widgets/led/lv_led.h	/^} lv_led_t;$/;"	t	typeref:struct:__anon122
lv_led_toggle	src/extra/widgets/led/lv_led.c	/^void lv_led_toggle(lv_obj_t * obj)$/;"	f
lv_line_class	src/widgets/lv_line.c	/^const lv_obj_class_t lv_line_class = {$/;"	v
lv_line_constructor	src/widgets/lv_line.c	/^static void lv_line_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_line_create	src/widgets/lv_line.c	/^lv_obj_t * lv_line_create(lv_obj_t * parent)$/;"	f
lv_line_event	src/widgets/lv_line.c	/^static void lv_line_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_line_get_y_invert	src/widgets/lv_line.c	/^bool lv_line_get_y_invert(const lv_obj_t * obj)$/;"	f
lv_line_set_points	src/widgets/lv_line.c	/^void lv_line_set_points(lv_obj_t * obj, const lv_point_t points[], uint16_t point_num)$/;"	f
lv_line_set_y_invert	src/widgets/lv_line.c	/^void lv_line_set_y_invert(lv_obj_t * obj, bool en)$/;"	f
lv_line_t	src/widgets/lv_line.h	/^} lv_line_t;$/;"	t	typeref:struct:__anon171
lv_list_add_btn	src/extra/widgets/list/lv_list.c	/^lv_obj_t * lv_list_add_btn(lv_obj_t * list, const char * icon, const char * txt)$/;"	f
lv_list_add_text	src/extra/widgets/list/lv_list.c	/^lv_obj_t * lv_list_add_text(lv_obj_t * list, const char * txt)$/;"	f
lv_list_btn_class	src/extra/widgets/list/lv_list.c	/^const lv_obj_class_t lv_list_btn_class = {$/;"	v
lv_list_class	src/extra/widgets/list/lv_list.c	/^const lv_obj_class_t lv_list_class = {$/;"	v
lv_list_create	src/extra/widgets/list/lv_list.c	/^lv_obj_t * lv_list_create(lv_obj_t * parent)$/;"	f
lv_list_get_btn_text	src/extra/widgets/list/lv_list.c	/^const char * lv_list_get_btn_text(lv_obj_t * list, lv_obj_t * btn)$/;"	f
lv_list_text_class	src/extra/widgets/list/lv_list.c	/^const lv_obj_class_t lv_list_text_class = {$/;"	v
lv_ll_node_t	src/misc/lv_ll.h	/^typedef uint8_t lv_ll_node_t;$/;"	t
lv_ll_t	src/misc/lv_ll.h	/^} lv_ll_t;$/;"	t	typeref:struct:__anon10
lv_log	src/misc/lv_log.c	/^void lv_log(const char * buf)$/;"	f
lv_log_level_t	src/misc/lv_log.h	/^typedef int8_t lv_log_level_t;$/;"	t
lv_log_print_g_cb_t	src/misc/lv_log.h	/^typedef void (*lv_log_print_g_cb_t)(const char *buf);$/;"	t
lv_log_register_print_cb	src/misc/lv_log.c	/^void lv_log_register_print_cb(lv_log_print_g_cb_t print_cb)$/;"	f
lv_map	src/misc/lv_math.c	/^int32_t lv_map(int32_t x, int32_t min_in, int32_t max_in, int32_t min_out, int32_t max_out)$/;"	f
lv_mem_alloc	src/misc/lv_mem.c	/^void * lv_mem_alloc(size_t size)$/;"	f
lv_mem_buf_arr_t	src/misc/lv_mem.h	/^typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];$/;"	t
lv_mem_buf_free_all	src/misc/lv_mem.c	/^void lv_mem_buf_free_all(void)$/;"	f
lv_mem_buf_get	src/misc/lv_mem.c	/^void * lv_mem_buf_get(uint32_t size)$/;"	f
lv_mem_buf_release	src/misc/lv_mem.c	/^void lv_mem_buf_release(void * p)$/;"	f
lv_mem_buf_t	src/misc/lv_mem.h	/^} lv_mem_buf_t;$/;"	t	typeref:struct:__anon24
lv_mem_deinit	src/misc/lv_mem.c	/^void lv_mem_deinit(void)$/;"	f
lv_mem_free	src/misc/lv_mem.c	/^void lv_mem_free(void * data)$/;"	f
lv_mem_init	src/misc/lv_mem.c	/^void lv_mem_init(void)$/;"	f
lv_mem_monitor	src/misc/lv_mem.c	/^void lv_mem_monitor(lv_mem_monitor_t * mon_p)$/;"	f
lv_mem_monitor_t	src/misc/lv_mem.h	/^} lv_mem_monitor_t;$/;"	t	typeref:struct:__anon23
lv_mem_realloc	src/misc/lv_mem.c	/^void * lv_mem_realloc(void * data_p, size_t new_size)$/;"	f
lv_mem_test	src/misc/lv_mem.c	/^lv_res_t lv_mem_test(void)$/;"	f
lv_mem_walker	src/misc/lv_mem.c	/^static void lv_mem_walker(void * ptr, size_t size, int used, void * user)$/;"	f	file:
lv_memcpy	src/misc/lv_mem.c	/^LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len)$/;"	f
lv_memcpy	src/misc/lv_mem.h	/^static inline void * lv_memcpy(void * dst, const void * src, size_t len)$/;"	f
lv_memcpy_small	src/misc/lv_mem.h	/^LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)$/;"	f
lv_memcpy_small	src/misc/lv_mem.h	/^static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)$/;"	f
lv_memset	src/misc/lv_mem.c	/^LV_ATTRIBUTE_FAST_MEM void lv_memset(void * dst, uint8_t v, size_t len)$/;"	f
lv_memset	src/misc/lv_mem.h	/^static inline void lv_memset(void * dst, uint8_t v, size_t len)$/;"	f
lv_memset_00	src/misc/lv_mem.c	/^LV_ATTRIBUTE_FAST_MEM void lv_memset_00(void * dst, size_t len)$/;"	f
lv_memset_00	src/misc/lv_mem.h	/^static inline void lv_memset_00(void * dst, size_t len)$/;"	f
lv_memset_ff	src/misc/lv_mem.c	/^LV_ATTRIBUTE_FAST_MEM void lv_memset_ff(void * dst, size_t len)$/;"	f
lv_memset_ff	src/misc/lv_mem.h	/^static inline void lv_memset_ff(void * dst, size_t len)$/;"	f
lv_meter_add_arc	src/extra/widgets/meter/lv_meter.c	/^lv_meter_indicator_t * lv_meter_add_arc(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width, lv_color_t color, int16_t r_mod)$/;"	f
lv_meter_add_needle_img	src/extra/widgets/meter/lv_meter.c	/^lv_meter_indicator_t * lv_meter_add_needle_img(lv_obj_t * obj, lv_meter_scale_t * scale, const void * src, lv_coord_t pivot_x, lv_coord_t pivot_y)$/;"	f
lv_meter_add_needle_line	src/extra/widgets/meter/lv_meter.c	/^lv_meter_indicator_t * lv_meter_add_needle_line(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t width, lv_color_t color, int16_t r_mod)$/;"	f
lv_meter_add_scale	src/extra/widgets/meter/lv_meter.c	/^lv_meter_scale_t * lv_meter_add_scale(lv_obj_t * obj)$/;"	f
lv_meter_add_scale_lines	src/extra/widgets/meter/lv_meter.c	/^lv_meter_indicator_t * lv_meter_add_scale_lines(lv_obj_t * obj, lv_meter_scale_t * scale, lv_color_t color_start, lv_color_t color_end, bool local, int16_t width_mod)$/;"	f
lv_meter_class	src/extra/widgets/meter/lv_meter.c	/^const lv_obj_class_t lv_meter_class = {$/;"	v
lv_meter_constructor	src/extra/widgets/meter/lv_meter.c	/^static void lv_meter_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_meter_create	src/extra/widgets/meter/lv_meter.c	/^lv_obj_t * lv_meter_create(lv_obj_t * parent)$/;"	f
lv_meter_destructor	src/extra/widgets/meter/lv_meter.c	/^static void lv_meter_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_meter_event	src/extra/widgets/meter/lv_meter.c	/^static void lv_meter_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_meter_indicator_t	src/extra/widgets/meter/lv_meter.h	/^}lv_meter_indicator_t;$/;"	t	typeref:struct:__anon125
lv_meter_indicator_type_t	src/extra/widgets/meter/lv_meter.h	/^}lv_meter_indicator_type_t;$/;"	t	typeref:enum:__anon124
lv_meter_scale_t	src/extra/widgets/meter/lv_meter.h	/^}lv_meter_scale_t;$/;"	t	typeref:struct:__anon123
lv_meter_set_indicator_end_value	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_indicator_end_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)$/;"	f
lv_meter_set_indicator_start_value	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_indicator_start_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)$/;"	f
lv_meter_set_indicator_value	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_indicator_value(lv_obj_t * obj, lv_meter_indicator_t * indic, int32_t value)$/;"	f
lv_meter_set_scale_major_ticks	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_scale_major_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t nth, uint16_t width, uint16_t len, lv_color_t color, int16_t label_gap)$/;"	f
lv_meter_set_scale_range	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_scale_range(lv_obj_t * obj, lv_meter_scale_t * scale, int32_t min, int32_t max, uint32_t angle_range, uint32_t rotation)$/;"	f
lv_meter_set_scale_ticks	src/extra/widgets/meter/lv_meter.c	/^void lv_meter_set_scale_ticks(lv_obj_t * obj, lv_meter_scale_t * scale, uint16_t cnt, uint16_t width, uint16_t len, lv_color_t color)$/;"	f
lv_meter_t	src/extra/widgets/meter/lv_meter.h	/^} lv_meter_t;$/;"	t	typeref:struct:__anon131
lv_msgbox_class	src/extra/widgets/msgbox/lv_msgbox.c	/^const lv_obj_class_t lv_msgbox_class = {.base_class = &lv_obj_class};$/;"	v
lv_msgbox_close	src/extra/widgets/msgbox/lv_msgbox.c	/^void lv_msgbox_close(lv_obj_t * mbox)$/;"	f
lv_msgbox_create	src/extra/widgets/msgbox/lv_msgbox.c	/^lv_obj_t * lv_msgbox_create(lv_obj_t * parent, const char * title, const char * txt, const char * btn_txts[], bool add_close_btn)$/;"	f
lv_msgbox_get_active_btn_text	src/extra/widgets/msgbox/lv_msgbox.c	/^const char * lv_msgbox_get_active_btn_text(lv_obj_t * mbox)$/;"	f
lv_msgbox_get_btns	src/extra/widgets/msgbox/lv_msgbox.c	/^lv_obj_t * lv_msgbox_get_btns(lv_obj_t * mbox)$/;"	f
lv_msgbox_get_close_btn	src/extra/widgets/msgbox/lv_msgbox.c	/^lv_obj_t * lv_msgbox_get_close_btn(lv_obj_t * mbox)$/;"	f
lv_msgbox_get_text	src/extra/widgets/msgbox/lv_msgbox.c	/^lv_obj_t * lv_msgbox_get_text(lv_obj_t * mbox)$/;"	f
lv_msgbox_get_title	src/extra/widgets/msgbox/lv_msgbox.c	/^lv_obj_t * lv_msgbox_get_title(lv_obj_t * mbox)$/;"	f
lv_nxp_pxp_cfg_t	src/gpu/lv_gpu_nxp_pxp.h	/^} lv_nxp_pxp_cfg_t;$/;"	t	typeref:struct:__anon148
lv_obj_add_event_cb	src/core/lv_event.c	/^struct _lv_event_dsc_t * lv_obj_add_event_cb(lv_obj_t * obj, lv_event_cb_t event_cb, lv_event_code_t filter, void * user_data)$/;"	f
lv_obj_add_flag	src/core/lv_obj.c	/^void lv_obj_add_flag(lv_obj_t * obj, lv_obj_flag_t f)$/;"	f
lv_obj_add_state	src/core/lv_obj.c	/^void lv_obj_add_state(lv_obj_t * obj, lv_state_t state)$/;"	f
lv_obj_add_style	src/core/lv_obj_style.c	/^void lv_obj_add_style(lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)$/;"	f
lv_obj_align	src/core/lv_obj_pos.c	/^void lv_obj_align(lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)$/;"	f
lv_obj_align_to	src/core/lv_obj_pos.c	/^void lv_obj_align_to(lv_obj_t * obj, const lv_obj_t * base, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs)$/;"	f
lv_obj_allocate_spec_attr	src/core/lv_obj.c	/^void lv_obj_allocate_spec_attr(lv_obj_t * obj)$/;"	f
lv_obj_area_is_visible	src/core/lv_obj_pos.c	/^bool lv_obj_area_is_visible(const lv_obj_t * obj, lv_area_t * area)$/;"	f
lv_obj_calculate_ext_draw_size	src/core/lv_obj_draw.c	/^lv_coord_t lv_obj_calculate_ext_draw_size(lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_center	src/core/lv_obj_pos.h	/^static inline void lv_obj_center(struct _lv_obj_t * obj)$/;"	f
lv_obj_check_type	src/core/lv_obj.c	/^bool lv_obj_check_type(const lv_obj_t * obj, const lv_obj_class_t * class_p)$/;"	f
lv_obj_class	src/core/lv_obj.c	/^const lv_obj_class_t lv_obj_class = {$/;"	v
lv_obj_class_create_obj	src/core/lv_obj_class.c	/^lv_obj_t * lv_obj_class_create_obj(const lv_obj_class_t * class_p, lv_obj_t * parent)$/;"	f
lv_obj_class_editable_t	src/core/lv_obj_class.h	/^}lv_obj_class_editable_t;$/;"	t	typeref:enum:__anon181
lv_obj_class_event_cb_t	src/core/lv_obj_class.h	/^typedef void (*lv_obj_class_event_cb_t)(struct _lv_obj_class_t * class_p, struct _lv_event_t * e);$/;"	t
lv_obj_class_group_def_t	src/core/lv_obj_class.h	/^}lv_obj_class_group_def_t;$/;"	t	typeref:enum:__anon182
lv_obj_class_init_obj	src/core/lv_obj_class.c	/^void lv_obj_class_init_obj(lv_obj_t * obj)$/;"	f
lv_obj_class_t	src/core/lv_obj_class.h	/^}lv_obj_class_t;$/;"	t	typeref:struct:_lv_obj_class_t
lv_obj_clean	src/core/lv_obj_tree.c	/^void lv_obj_clean(lv_obj_t * obj)$/;"	f
lv_obj_clear_flag	src/core/lv_obj.c	/^void lv_obj_clear_flag(lv_obj_t * obj, lv_obj_flag_t f)$/;"	f
lv_obj_clear_state	src/core/lv_obj.c	/^void lv_obj_clear_state(lv_obj_t * obj, lv_state_t state)$/;"	f
lv_obj_construct	src/core/lv_obj_class.c	/^static void lv_obj_construct(lv_obj_t * obj)$/;"	f	file:
lv_obj_constructor	src/core/lv_obj.c	/^static void lv_obj_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_obj_create	src/core/lv_obj.c	/^lv_obj_t * lv_obj_create(lv_obj_t * parent)$/;"	f
lv_obj_del	src/core/lv_obj_tree.c	/^void lv_obj_del(lv_obj_t * obj)$/;"	f
lv_obj_del_anim_ready_cb	src/core/lv_obj_tree.c	/^void lv_obj_del_anim_ready_cb(lv_anim_t * a)$/;"	f
lv_obj_del_async	src/core/lv_obj_tree.c	/^void lv_obj_del_async(lv_obj_t * obj)$/;"	f
lv_obj_del_async_cb	src/core/lv_obj_tree.c	/^static void lv_obj_del_async_cb(void * obj)$/;"	f	file:
lv_obj_destructor	src/core/lv_obj.c	/^static void lv_obj_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_obj_dpx	src/core/lv_obj.h	/^static inline lv_coord_t lv_obj_dpx(const lv_obj_t * obj, lv_coord_t n)$/;"	f
lv_obj_draw	src/core/lv_obj.c	/^static void lv_obj_draw(lv_event_t * e)$/;"	f	file:
lv_obj_draw_dsc_init	src/core/lv_obj_draw.c	/^void lv_obj_draw_dsc_init(lv_obj_draw_part_dsc_t * dsc, const lv_area_t * clip_area)$/;"	f
lv_obj_draw_part_dsc_t	src/core/lv_obj_draw.h	/^}lv_obj_draw_part_dsc_t;$/;"	t	typeref:struct:__anon199
lv_obj_enable_style_refresh	src/core/lv_obj_style.c	/^void lv_obj_enable_style_refresh(bool en)$/;"	f
lv_obj_event	src/core/lv_obj.c	/^static void lv_obj_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_obj_event_base	src/core/lv_event.c	/^lv_res_t lv_obj_event_base(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f
lv_obj_fade_in	src/core/lv_obj_style.c	/^void lv_obj_fade_in(lv_obj_t * obj, uint32_t time, uint32_t delay)$/;"	f
lv_obj_fade_out	src/core/lv_obj_style.c	/^void lv_obj_fade_out(lv_obj_t * obj, uint32_t time, uint32_t delay)$/;"	f
lv_obj_flag_t	src/core/lv_obj.h	/^typedef uint32_t lv_obj_flag_t;$/;"	t
lv_obj_get_child	src/core/lv_obj_tree.c	/^lv_obj_t * lv_obj_get_child(const lv_obj_t * obj, int32_t id)$/;"	f
lv_obj_get_child_cnt	src/core/lv_obj_tree.c	/^uint32_t lv_obj_get_child_cnt(const lv_obj_t * obj)$/;"	f
lv_obj_get_child_id	src/core/lv_obj_tree.c	/^uint32_t lv_obj_get_child_id(const lv_obj_t * obj)$/;"	f
lv_obj_get_class	src/core/lv_obj.c	/^const lv_obj_class_t * lv_obj_get_class(const lv_obj_t * obj)$/;"	f
lv_obj_get_click_area	src/core/lv_obj_pos.c	/^void lv_obj_get_click_area(const lv_obj_t * obj, lv_area_t * area)$/;"	f
lv_obj_get_content_coords	src/core/lv_obj_pos.c	/^void lv_obj_get_content_coords(const lv_obj_t * obj, lv_area_t * area)$/;"	f
lv_obj_get_content_height	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_content_height(const lv_obj_t * obj)$/;"	f
lv_obj_get_content_width	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_content_width(const lv_obj_t * obj)$/;"	f
lv_obj_get_coords	src/core/lv_obj_pos.c	/^void lv_obj_get_coords(const lv_obj_t * obj, lv_area_t * coords)$/;"	f
lv_obj_get_disp	src/core/lv_obj_tree.c	/^lv_disp_t * lv_obj_get_disp(const lv_obj_t * obj)$/;"	f
lv_obj_get_event_dsc	src/core/lv_event.c	/^static lv_event_dsc_t * lv_obj_get_event_dsc(const lv_obj_t * obj, uint32_t id)$/;"	f	file:
lv_obj_get_group	src/core/lv_obj.c	/^void * lv_obj_get_group(const lv_obj_t * obj)$/;"	f
lv_obj_get_height	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_height(const lv_obj_t * obj)$/;"	f
lv_obj_get_local_style_prop	src/core/lv_obj_style.c	/^lv_res_t lv_obj_get_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t * value, lv_style_selector_t selector)$/;"	f
lv_obj_get_parent	src/core/lv_obj_tree.c	/^lv_obj_t * lv_obj_get_parent(const lv_obj_t * obj)$/;"	f
lv_obj_get_screen	src/core/lv_obj_tree.c	/^lv_obj_t * lv_obj_get_screen(const lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_bottom	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_bottom(lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_dir	src/core/lv_obj_scroll.c	/^lv_dir_t lv_obj_get_scroll_dir(const lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_end	src/core/lv_obj_scroll.c	/^void lv_obj_get_scroll_end(struct _lv_obj_t  * obj, lv_point_t * end)$/;"	f
lv_obj_get_scroll_left	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_left(lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_right	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_right(lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_snap_x	src/core/lv_obj_scroll.c	/^lv_scroll_snap_t lv_obj_get_scroll_snap_x(const lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_snap_y	src/core/lv_obj_scroll.c	/^lv_scroll_snap_t lv_obj_get_scroll_snap_y(const lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_top	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_top(lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_x	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_x(const lv_obj_t * obj)$/;"	f
lv_obj_get_scroll_y	src/core/lv_obj_scroll.c	/^lv_coord_t lv_obj_get_scroll_y(const lv_obj_t * obj)$/;"	f
lv_obj_get_scrollbar_area	src/core/lv_obj_scroll.c	/^void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)$/;"	f
lv_obj_get_scrollbar_mode	src/core/lv_obj_scroll.c	/^lv_scrollbar_mode_t lv_obj_get_scrollbar_mode(const lv_obj_t * obj)$/;"	f
lv_obj_get_self_height	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_self_height(const lv_obj_t * obj)$/;"	f
lv_obj_get_self_width	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_self_width(const lv_obj_t * obj)$/;"	f
lv_obj_get_state	src/core/lv_obj.c	/^lv_state_t lv_obj_get_state(const lv_obj_t * obj)$/;"	f
lv_obj_get_style_align	src/core/lv_obj_style_gen.h	/^static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_anim_speed	src/core/lv_obj_style_gen.h	/^static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_anim_time	src/core/lv_obj_style_gen.h	/^static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_img_src	src/core/lv_obj_style_gen.h	/^static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_rounded	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_arc_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_base_dir	src/core/lv_obj_style_gen.h	/^static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_grad_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_grad_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_grad_dir	src/core/lv_obj_style_gen.h	/^static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_grad_stop	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_recolor	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_recolor_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_recolor_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_src	src/core/lv_obj_style_gen.h	/^static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_img_tiled	src/core/lv_obj_style_gen.h	/^static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_main_stop	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_bg_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_blend_mode	src/core/lv_obj_style_gen.h	/^static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_post	src/core/lv_obj_style_gen.h	/^static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_side	src/core/lv_obj_style_gen.h	/^static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_border_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_clip_corner	src/core/lv_obj_style_gen.h	/^static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_color_filter_dsc	src/core/lv_obj_style_gen.h	/^static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_color_filter_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_flex_cross_place	src/extra/layouts/flex/lv_flex.h	/^static inline lv_flex_align_t lv_obj_get_style_flex_cross_place(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_flex_flow	src/extra/layouts/flex/lv_flex.h	/^static inline lv_flex_flow_t lv_obj_get_style_flex_flow(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_flex_grow	src/extra/layouts/flex/lv_flex.h	/^static inline uint8_t lv_obj_get_style_flex_grow(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_flex_main_place	src/extra/layouts/flex/lv_flex.h	/^static inline lv_flex_align_t lv_obj_get_style_flex_main_place(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_flex_track_place	src/extra/layouts/flex/lv_flex.h	/^static inline lv_flex_align_t lv_obj_get_style_flex_track_place(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_column_pos	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_column_pos(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_column_span	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_column_span(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_row_pos	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_row_pos(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_row_span	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_row_span(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_x_align	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_x_align(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_cell_y_align	src/extra/layouts/grid/lv_grid.h	/^static inline lv_coord_t lv_obj_get_style_grid_cell_y_align(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_column_align	src/extra/layouts/grid/lv_grid.h	/^static inline lv_grid_align_t lv_obj_get_style_grid_column_align(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_column_dsc_array	src/extra/layouts/grid/lv_grid.h	/^static inline const lv_coord_t * lv_obj_get_style_grid_column_dsc_array(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_row_align	src/extra/layouts/grid/lv_grid.h	/^static inline lv_grid_align_t lv_obj_get_style_grid_row_align(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_grid_row_dsc_array	src/extra/layouts/grid/lv_grid.h	/^static inline const lv_coord_t * lv_obj_get_style_grid_row_dsc_array(const lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_height	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_img_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_img_recolor	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_img_recolor_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_img_recolor_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_layout	src/core/lv_obj_style_gen.h	/^static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_dash_gap	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_dash_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_rounded	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_line_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_max_height	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_max_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_min_height	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_min_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_outline_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_outline_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_outline_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_outline_pad	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_outline_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_bottom	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_column	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_left	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_right	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_row	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_pad_top	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_prop	src/core/lv_obj_style.c	/^lv_style_value_t lv_obj_get_style_prop(const lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop)$/;"	f
lv_obj_get_style_radius	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_ofs_x	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_ofs_y	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_spread	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_shadow_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_align	src/core/lv_obj_style_gen.h	/^static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_color	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_color_filtered	src/core/lv_obj_style_gen.h	/^static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_decor	src/core/lv_obj_style_gen.h	/^static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_font	src/core/lv_obj_style_gen.h	/^static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_letter_space	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_line_space	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_text_opa	src/core/lv_obj_style_gen.h	/^static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_transform_angle	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_transform_height	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_transform_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_transform_zoom	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_transition	src/core/lv_obj_style_gen.h	/^static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_translate_x	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_translate_y	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_width	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_x	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_style_y	src/core/lv_obj_style_gen.h	/^static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)$/;"	f
lv_obj_get_user_data	src/core/lv_obj.h	/^static inline void * lv_obj_get_user_data(lv_obj_t * obj)$/;"	f
lv_obj_get_width	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_width(const lv_obj_t * obj)$/;"	f
lv_obj_get_x	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_x(const lv_obj_t * obj)$/;"	f
lv_obj_get_x2	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_x2(const lv_obj_t * obj)$/;"	f
lv_obj_get_y	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_y(const lv_obj_t * obj)$/;"	f
lv_obj_get_y2	src/core/lv_obj_pos.c	/^lv_coord_t lv_obj_get_y2(const lv_obj_t * obj)$/;"	f
lv_obj_has_class	src/core/lv_obj.c	/^bool lv_obj_has_class(const lv_obj_t * obj, const lv_obj_class_t * class_p)$/;"	f
lv_obj_has_flag	src/core/lv_obj.c	/^bool lv_obj_has_flag(const lv_obj_t * obj, lv_obj_flag_t f)$/;"	f
lv_obj_has_flag_any	src/core/lv_obj.c	/^bool lv_obj_has_flag_any(const lv_obj_t * obj, lv_obj_flag_t f)$/;"	f
lv_obj_has_state	src/core/lv_obj.c	/^bool lv_obj_has_state(const lv_obj_t * obj, lv_state_t state)$/;"	f
lv_obj_hit_test	src/core/lv_obj_pos.c	/^bool lv_obj_hit_test(lv_obj_t * obj, const lv_point_t * point)$/;"	f
lv_obj_init_draw_arc_dsc	src/core/lv_obj_draw.c	/^void lv_obj_init_draw_arc_dsc(lv_obj_t * obj, uint32_t part, lv_draw_arc_dsc_t * draw_dsc)$/;"	f
lv_obj_init_draw_img_dsc	src/core/lv_obj_draw.c	/^void lv_obj_init_draw_img_dsc(lv_obj_t * obj, uint32_t part, lv_draw_img_dsc_t * draw_dsc)$/;"	f
lv_obj_init_draw_label_dsc	src/core/lv_obj_draw.c	/^void lv_obj_init_draw_label_dsc(lv_obj_t * obj, uint32_t part, lv_draw_label_dsc_t * draw_dsc)$/;"	f
lv_obj_init_draw_line_dsc	src/core/lv_obj_draw.c	/^void lv_obj_init_draw_line_dsc(lv_obj_t * obj, uint32_t part, lv_draw_line_dsc_t * draw_dsc)$/;"	f
lv_obj_init_draw_rect_dsc	src/core/lv_obj_draw.c	/^void lv_obj_init_draw_rect_dsc(lv_obj_t * obj, uint32_t part, lv_draw_rect_dsc_t * draw_dsc)$/;"	f
lv_obj_invalidate	src/core/lv_obj_pos.c	/^void lv_obj_invalidate(const lv_obj_t * obj)$/;"	f
lv_obj_invalidate_area	src/core/lv_obj_pos.c	/^void lv_obj_invalidate_area(const lv_obj_t * obj, const lv_area_t * area)$/;"	f
lv_obj_is_editable	src/core/lv_obj_class.c	/^bool lv_obj_is_editable(lv_obj_t * obj)$/;"	f
lv_obj_is_group_def	src/core/lv_obj_class.c	/^bool lv_obj_is_group_def(lv_obj_t * obj)$/;"	f
lv_obj_is_layout_positioned	src/core/lv_obj_pos.c	/^bool lv_obj_is_layout_positioned(const lv_obj_t * obj)$/;"	f
lv_obj_is_scrolling	src/core/lv_obj_scroll.c	/^bool lv_obj_is_scrolling(const lv_obj_t * obj)$/;"	f
lv_obj_is_valid	src/core/lv_obj.c	/^bool lv_obj_is_valid(const lv_obj_t * obj)$/;"	f
lv_obj_is_visible	src/core/lv_obj_pos.c	/^bool lv_obj_is_visible(const lv_obj_t * obj)$/;"	f
lv_obj_mark_layout_as_dirty	src/core/lv_obj_pos.c	/^void lv_obj_mark_layout_as_dirty(lv_obj_t * obj)$/;"	f
lv_obj_move_background	src/core/lv_obj_tree.c	/^void lv_obj_move_background(lv_obj_t * obj)$/;"	f
lv_obj_move_children_by	src/core/lv_obj_pos.c	/^void lv_obj_move_children_by(lv_obj_t * obj, lv_coord_t x_diff, lv_coord_t y_diff, bool ignore_floating)$/;"	f
lv_obj_move_foreground	src/core/lv_obj_tree.c	/^void lv_obj_move_foreground(lv_obj_t * obj)$/;"	f
lv_obj_move_to	src/core/lv_obj_pos.c	/^void lv_obj_move_to(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)$/;"	f
lv_obj_readjust_scroll	src/core/lv_obj_scroll.c	/^void lv_obj_readjust_scroll(lv_obj_t * obj, lv_anim_enable_t anim_en)$/;"	f
lv_obj_refr_pos	src/core/lv_obj_pos.c	/^void lv_obj_refr_pos(lv_obj_t * obj)$/;"	f
lv_obj_refr_size	src/core/lv_obj_pos.c	/^bool lv_obj_refr_size(lv_obj_t * obj)$/;"	f
lv_obj_refresh_ext_draw_size	src/core/lv_obj_draw.c	/^void lv_obj_refresh_ext_draw_size(lv_obj_t * obj)$/;"	f
lv_obj_refresh_self_size	src/core/lv_obj_pos.c	/^bool lv_obj_refresh_self_size(lv_obj_t * obj)$/;"	f
lv_obj_refresh_style	src/core/lv_obj_style.c	/^void lv_obj_refresh_style(lv_obj_t * obj, lv_style_selector_t selector, lv_style_prop_t prop)$/;"	f
lv_obj_remove_event_cb	src/core/lv_event.c	/^bool lv_obj_remove_event_cb(lv_obj_t * obj, lv_event_cb_t event_cb)$/;"	f
lv_obj_remove_event_dsc	src/core/lv_event.c	/^bool lv_obj_remove_event_dsc(lv_obj_t * obj, struct _lv_event_dsc_t * event_dsc)$/;"	f
lv_obj_remove_local_style_prop	src/core/lv_obj_style.c	/^bool lv_obj_remove_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector_t selector)$/;"	f
lv_obj_remove_style	src/core/lv_obj_style.c	/^void lv_obj_remove_style(lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector)$/;"	f
lv_obj_remove_style_all	src/core/lv_obj_style.h	/^static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)$/;"	f
lv_obj_report_style_change	src/core/lv_obj_style.c	/^void lv_obj_report_style_change(lv_style_t * style)$/;"	f
lv_obj_scroll_by	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scroll_to	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_to(lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scroll_to_view	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_to_view(lv_obj_t * obj, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scroll_to_view_recursive	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_to_view_recursive(lv_obj_t * obj, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scroll_to_x	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_to_x(lv_obj_t * obj, lv_coord_t x, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scroll_to_y	src/core/lv_obj_scroll.c	/^void lv_obj_scroll_to_y(lv_obj_t * obj, lv_coord_t y, lv_anim_enable_t anim_en)$/;"	f
lv_obj_scrollbar_invalidate	src/core/lv_obj_scroll.c	/^void lv_obj_scrollbar_invalidate(lv_obj_t * obj)$/;"	f
lv_obj_set_align	src/core/lv_obj_pos.c	/^void lv_obj_set_align(lv_obj_t * obj, lv_align_t align)$/;"	f
lv_obj_set_content_height	src/core/lv_obj_pos.c	/^void lv_obj_set_content_height(lv_obj_t * obj, lv_coord_t h)$/;"	f
lv_obj_set_content_width	src/core/lv_obj_pos.c	/^void lv_obj_set_content_width(lv_obj_t * obj, lv_coord_t w)$/;"	f
lv_obj_set_ext_click_area	src/core/lv_obj_pos.c	/^void lv_obj_set_ext_click_area(lv_obj_t * obj, lv_coord_t size)$/;"	f
lv_obj_set_flex_align	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_flex_align(lv_obj_t * obj, lv_flex_align_t main_place, lv_flex_align_t cross_place, lv_flex_align_t track_place)$/;"	f
lv_obj_set_flex_flow	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_flex_flow(lv_obj_t * obj, lv_flex_flow_t flow)$/;"	f
lv_obj_set_flex_grow	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_flex_grow(lv_obj_t * obj, uint8_t grow)$/;"	f
lv_obj_set_grid_align	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_grid_align(lv_obj_t * obj, lv_grid_align_t column_align, lv_grid_align_t row_align)$/;"	f
lv_obj_set_grid_cell	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_grid_cell(lv_obj_t * obj, lv_grid_align_t x_align, uint8_t col_pos, uint8_t col_span,$/;"	f
lv_obj_set_grid_dsc_array	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_grid_dsc_array(lv_obj_t * obj, const lv_coord_t col_dsc[], const lv_coord_t row_dsc[])$/;"	f
lv_obj_set_height	src/core/lv_obj_pos.c	/^void lv_obj_set_height(lv_obj_t * obj, lv_coord_t h)$/;"	f
lv_obj_set_layout	src/core/lv_obj_pos.c	/^void lv_obj_set_layout(lv_obj_t * obj, uint32_t layout)$/;"	f
lv_obj_set_local_style_prop	src/core/lv_obj_style.c	/^void lv_obj_set_local_style_prop(lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_parent	src/core/lv_obj_tree.c	/^void lv_obj_set_parent(lv_obj_t * obj, lv_obj_t * parent)$/;"	f
lv_obj_set_pos	src/core/lv_obj_pos.c	/^void lv_obj_set_pos(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)$/;"	f
lv_obj_set_scroll_dir	src/core/lv_obj_scroll.c	/^void lv_obj_set_scroll_dir(lv_obj_t * obj, lv_dir_t dir)$/;"	f
lv_obj_set_scroll_snap_x	src/core/lv_obj_scroll.c	/^void lv_obj_set_scroll_snap_x(lv_obj_t * obj, lv_scroll_snap_t align)$/;"	f
lv_obj_set_scroll_snap_y	src/core/lv_obj_scroll.c	/^void lv_obj_set_scroll_snap_y(lv_obj_t * obj, lv_scroll_snap_t align)$/;"	f
lv_obj_set_scrollbar_mode	src/core/lv_obj_scroll.c	/^void lv_obj_set_scrollbar_mode(lv_obj_t * obj, lv_scrollbar_mode_t mode)$/;"	f
lv_obj_set_size	src/core/lv_obj_pos.c	/^void lv_obj_set_size(lv_obj_t * obj, lv_coord_t w, lv_coord_t h)$/;"	f
lv_obj_set_state	src/core/lv_obj.c	/^static void lv_obj_set_state(lv_obj_t * obj, lv_state_t new_state)$/;"	f	file:
lv_obj_set_style_align	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_align(struct _lv_obj_t * obj, lv_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_anim_speed	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_anim_speed(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_anim_time	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_anim_time(struct _lv_obj_t * obj, uint32_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_img_src	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_rounded	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_rounded(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_arc_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_arc_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_base_dir	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_base_dir(struct _lv_obj_t * obj, lv_base_dir_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_grad_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_grad_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_grad_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_grad_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_grad_dir	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_grad_dir(struct _lv_obj_t * obj, lv_grad_dir_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_grad_stop	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_grad_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_recolor	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_recolor_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_recolor_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_src	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_src(struct _lv_obj_t * obj, const void * value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_img_tiled	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_img_tiled(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_main_stop	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_main_stop(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_bg_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_bg_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_blend_mode	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_blend_mode(struct _lv_obj_t * obj, lv_blend_mode_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_post	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_post(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_side	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_side(struct _lv_obj_t * obj, lv_border_side_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_border_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_border_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_clip_corner	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_clip_corner(struct _lv_obj_t * obj, bool value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_color_filter_dsc	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_color_filter_dsc(struct _lv_obj_t * obj, const lv_color_filter_dsc_t * value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_color_filter_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_color_filter_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_flex_cross_place	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_style_flex_cross_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_flex_flow	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_style_flex_flow(lv_obj_t * obj, lv_flex_flow_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_flex_grow	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_style_flex_grow(lv_obj_t * obj, uint8_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_flex_main_place	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_style_flex_main_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_flex_track_place	src/extra/layouts/flex/lv_flex.c	/^void lv_obj_set_style_flex_track_place(lv_obj_t * obj, lv_flex_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_column_pos	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_column_pos(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_column_span	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_column_span(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_row_pos	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_row_pos(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_row_span	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_row_span(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_x_align	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_x_align(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_cell_y_align	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_cell_y_align(lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_column_align	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_column_align(lv_obj_t * obj, lv_grid_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_column_dsc_array	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_column_dsc_array(lv_obj_t * obj, const lv_coord_t value[], lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_row_align	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_row_align(lv_obj_t * obj, lv_grid_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_grid_row_dsc_array	src/extra/layouts/grid/lv_grid.c	/^void lv_obj_set_style_grid_row_dsc_array(lv_obj_t * obj, const lv_coord_t value[], lv_style_selector_t selector)$/;"	f
lv_obj_set_style_height	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_img_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_img_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_img_recolor	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_img_recolor(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_img_recolor_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_img_recolor_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_img_recolor_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_img_recolor_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_layout	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_layout(struct _lv_obj_t * obj, uint16_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_dash_gap	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_dash_gap(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_dash_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_dash_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_rounded	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_rounded(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_line_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_line_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_max_height	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_max_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_max_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_max_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_min_height	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_min_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_min_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_min_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_outline_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_outline_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_outline_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_outline_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_outline_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_outline_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_outline_pad	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_outline_pad(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_outline_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_outline_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_all	src/core/lv_obj_style.h	/^static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector) {$/;"	f
lv_obj_set_style_pad_bottom	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_bottom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_column	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_column(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_gap	src/core/lv_obj_style.h	/^static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_selector_t selector) {$/;"	f
lv_obj_set_style_pad_hor	src/core/lv_obj_style.h	/^static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector) {$/;"	f
lv_obj_set_style_pad_left	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_left(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_right	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_right(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_row	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_row(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_top	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_pad_top(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_pad_ver	src/core/lv_obj_style.h	/^static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector) {$/;"	f
lv_obj_set_style_radius	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_radius(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_ofs_x	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_ofs_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_ofs_y	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_ofs_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_spread	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_spread(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_shadow_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_shadow_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_size	src/core/lv_obj_style.h	/^static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_selector_t selector) {$/;"	f
lv_obj_set_style_text_align	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_align(struct _lv_obj_t * obj, lv_text_align_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_color	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_color(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_color_filtered	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_color_filtered(struct _lv_obj_t * obj, lv_color_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_decor	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_decor(struct _lv_obj_t * obj, lv_text_decor_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_font	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_font(struct _lv_obj_t * obj, const lv_font_t * value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_letter_space	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_letter_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_line_space	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_line_space(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_text_opa	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_text_opa(struct _lv_obj_t * obj, lv_opa_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_transform_angle	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_transform_angle(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_transform_height	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_transform_height(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_transform_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_transform_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_transform_zoom	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_transform_zoom(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_transition	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_transition(struct _lv_obj_t * obj, const lv_style_transition_dsc_t * value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_translate_x	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_translate_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_translate_y	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_translate_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_width	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_width(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_x	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_x(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_style_y	src/core/lv_obj_style_gen.c	/^void lv_obj_set_style_y(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selector_t selector)$/;"	f
lv_obj_set_tile	src/extra/widgets/tileview/lv_tileview.c	/^void lv_obj_set_tile(lv_obj_t * obj, lv_obj_t * tile_obj, lv_anim_enable_t anim_en)$/;"	f
lv_obj_set_tile_id	src/extra/widgets/tileview/lv_tileview.c	/^void lv_obj_set_tile_id(lv_obj_t * tv, uint32_t col_id, uint32_t row_id, lv_anim_enable_t anim_en)$/;"	f
lv_obj_set_user_data	src/core/lv_obj.h	/^static inline void lv_obj_set_user_data(lv_obj_t * obj, void * user_data)$/;"	f
lv_obj_set_width	src/core/lv_obj_pos.c	/^void lv_obj_set_width(lv_obj_t * obj, lv_coord_t w)$/;"	f
lv_obj_set_x	src/core/lv_obj_pos.c	/^void lv_obj_set_x(lv_obj_t * obj, lv_coord_t x)$/;"	f
lv_obj_set_y	src/core/lv_obj_pos.c	/^void lv_obj_set_y(lv_obj_t * obj, lv_coord_t y)$/;"	f
lv_obj_style_get_selector_part	src/core/lv_obj_style.c	/^lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector)$/;"	f
lv_obj_style_get_selector_state	src/core/lv_obj_style.c	/^lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector)$/;"	f
lv_obj_t	src/core/lv_obj.h	/^}lv_obj_t;$/;"	t	typeref:struct:_lv_obj_t
lv_obj_tree_walk	src/core/lv_obj_tree.c	/^void lv_obj_tree_walk(lv_obj_t * start_obj, lv_obj_tree_walk_cb_t cb, void * user_data)$/;"	f
lv_obj_tree_walk_cb_t	src/core/lv_obj_tree.h	/^typedef lv_obj_tree_walk_res_t (*lv_obj_tree_walk_cb_t)(struct _lv_obj_t *, void *);$/;"	t
lv_obj_tree_walk_res_t	src/core/lv_obj_tree.h	/^} lv_obj_tree_walk_res_t;$/;"	t	typeref:enum:__anon194
lv_obj_update_layout	src/core/lv_obj_pos.c	/^void lv_obj_update_layout(const lv_obj_t * obj)$/;"	f
lv_obj_update_snap	src/core/lv_obj_scroll.c	/^void lv_obj_update_snap(lv_obj_t * obj, lv_anim_enable_t anim_en)$/;"	f
lv_opa_t	src/misc/lv_color.h	/^typedef uint8_t lv_opa_t;$/;"	t
lv_palette_darken	src/misc/lv_color.c	/^lv_color_t lv_palette_darken(lv_palette_t p, uint8_t lvl)$/;"	f
lv_palette_lighten	src/misc/lv_color.c	/^lv_color_t lv_palette_lighten(lv_palette_t p, uint8_t lvl)$/;"	f
lv_palette_main	src/misc/lv_color.c	/^lv_color_t lv_palette_main(lv_palette_t p)$/;"	f
lv_palette_t	src/misc/lv_color.h	/^}lv_palette_t;$/;"	t	typeref:enum:__anon40
lv_part_t	src/core/lv_obj.h	/^typedef uint32_t lv_part_t;$/;"	t
lv_pct	src/misc/lv_area.h	/^static inline lv_coord_t lv_pct(lv_coord_t x)$/;"	f
lv_point_t	src/misc/lv_area.h	/^} lv_point_t;$/;"	t	typeref:struct:__anon41
lv_point_within_circle	src/misc/lv_area.c	/^static bool lv_point_within_circle(const lv_area_t * area, const lv_point_t * p)$/;"	f	file:
lv_pool_t	src/misc/lv_tlsf.h	/^typedef void* lv_pool_t;$/;"	t
lv_port_disp_init	examples/porting/lv_port_disp_template.c	/^void lv_port_disp_init(void)$/;"	f
lv_port_fs_init	examples/porting/lv_port_fs_template.c	/^void lv_port_fs_init(void)$/;"	f
lv_port_indev_init	examples/porting/lv_port_indev_template.c	/^void lv_port_indev_init(void)$/;"	f
lv_pow	src/misc/lv_math.c	/^int64_t lv_pow(int64_t base, int8_t exp)$/;"	f
lv_rand	src/misc/lv_math.c	/^uint32_t lv_rand(uint32_t min, uint32_t max)$/;"	f
lv_refr_area	src/core/lv_refr.c	/^static void lv_refr_area(const lv_area_t * area_p)$/;"	f	file:
lv_refr_area_part	src/core/lv_refr.c	/^static void lv_refr_area_part(const lv_area_t * area_p)$/;"	f	file:
lv_refr_areas	src/core/lv_refr.c	/^static void lv_refr_areas(void)$/;"	f	file:
lv_refr_get_fps_avg	src/core/lv_refr.c	/^uint32_t lv_refr_get_fps_avg(void)$/;"	f
lv_refr_get_top_obj	src/core/lv_refr.c	/^static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj)$/;"	f	file:
lv_refr_join_area	src/core/lv_refr.c	/^static void lv_refr_join_area(void)$/;"	f	file:
lv_refr_now	src/core/lv_refr.c	/^void lv_refr_now(lv_disp_t * disp)$/;"	f
lv_refr_obj	src/core/lv_refr.c	/^static void lv_refr_obj(lv_obj_t * obj, const lv_area_t * mask_ori_p)$/;"	f	file:
lv_refr_obj_and_children	src/core/lv_refr.c	/^static void lv_refr_obj_and_children(lv_obj_t * top_p, const lv_area_t * mask_p)$/;"	f	file:
lv_res_t	src/misc/lv_types.h	/^typedef uint8_t lv_res_t;$/;"	t
lv_roller_class	src/widgets/lv_roller.c	/^const lv_obj_class_t lv_roller_class = {$/;"	v
lv_roller_constructor	src/widgets/lv_roller.c	/^static void lv_roller_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_roller_create	src/widgets/lv_roller.c	/^lv_obj_t * lv_roller_create(lv_obj_t * parent)$/;"	f
lv_roller_event	src/widgets/lv_roller.c	/^static void lv_roller_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_roller_get_option_cnt	src/widgets/lv_roller.c	/^uint16_t lv_roller_get_option_cnt(const lv_obj_t * obj)$/;"	f
lv_roller_get_options	src/widgets/lv_roller.c	/^const char * lv_roller_get_options(const lv_obj_t * obj)$/;"	f
lv_roller_get_selected	src/widgets/lv_roller.c	/^uint16_t lv_roller_get_selected(const lv_obj_t * obj)$/;"	f
lv_roller_get_selected_str	src/widgets/lv_roller.c	/^void lv_roller_get_selected_str(const lv_obj_t * obj, char * buf, uint32_t buf_size)$/;"	f
lv_roller_label_class	src/widgets/lv_roller.c	/^const lv_obj_class_t lv_roller_label_class  = {$/;"	v
lv_roller_label_event	src/widgets/lv_roller.c	/^static void lv_roller_label_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_roller_mode_t	src/widgets/lv_roller.h	/^typedef uint8_t lv_roller_mode_t;$/;"	t
lv_roller_set_options	src/widgets/lv_roller.c	/^void lv_roller_set_options(lv_obj_t * obj, const char * options, lv_roller_mode_t mode)$/;"	f
lv_roller_set_selected	src/widgets/lv_roller.c	/^void lv_roller_set_selected(lv_obj_t * obj, uint16_t sel_opt, lv_anim_enable_t anim)$/;"	f
lv_roller_set_visible_row_count	src/widgets/lv_roller.c	/^void lv_roller_set_visible_row_count(lv_obj_t * obj, uint8_t row_cnt)$/;"	f
lv_roller_t	src/widgets/lv_roller.h	/^}lv_roller_t;$/;"	t	typeref:struct:__anon154
lv_scr_act	src/core/lv_disp.h	/^static inline lv_obj_t * lv_scr_act(void)$/;"	f
lv_scr_load	src/core/lv_disp.h	/^static inline void lv_scr_load(lv_obj_t * scr)$/;"	f
lv_scr_load_anim	src/core/lv_disp.c	/^void lv_scr_load_anim(lv_obj_t * new_scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, bool auto_del)$/;"	f
lv_scr_load_anim_t	src/core/lv_disp.h	/^} lv_scr_load_anim_t;$/;"	t	typeref:enum:__anon180
lv_scroll_snap_t	src/core/lv_obj_scroll.h	/^typedef uint8_t lv_scroll_snap_t;$/;"	t
lv_scrollbar_mode_t	src/core/lv_obj_scroll.h	/^typedef uint8_t lv_scrollbar_mode_t;$/;"	t
lv_slider_class	src/widgets/lv_slider.c	/^const lv_obj_class_t lv_slider_class = {$/;"	v
lv_slider_constructor	src/widgets/lv_slider.c	/^static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_slider_create	src/widgets/lv_slider.c	/^lv_obj_t * lv_slider_create(lv_obj_t * parent)$/;"	f
lv_slider_event	src/widgets/lv_slider.c	/^static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_slider_get_left_value	src/widgets/lv_slider.h	/^static inline int32_t lv_slider_get_left_value(const lv_obj_t * obj)$/;"	f
lv_slider_get_max_value	src/widgets/lv_slider.h	/^static inline int32_t lv_slider_get_max_value(const lv_obj_t * obj)$/;"	f
lv_slider_get_min_value	src/widgets/lv_slider.h	/^static inline int32_t lv_slider_get_min_value(const lv_obj_t * obj)$/;"	f
lv_slider_get_mode	src/widgets/lv_slider.h	/^static inline lv_slider_mode_t lv_slider_get_mode(lv_obj_t * slider)$/;"	f
lv_slider_get_value	src/widgets/lv_slider.h	/^static inline int32_t lv_slider_get_value(const lv_obj_t * obj)$/;"	f
lv_slider_is_dragged	src/widgets/lv_slider.c	/^bool lv_slider_is_dragged(const lv_obj_t * obj)$/;"	f
lv_slider_mode_t	src/widgets/lv_slider.h	/^typedef uint8_t lv_slider_mode_t;$/;"	t
lv_slider_set_left_value	src/widgets/lv_slider.h	/^static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)$/;"	f
lv_slider_set_mode	src/widgets/lv_slider.h	/^static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)$/;"	f
lv_slider_set_range	src/widgets/lv_slider.h	/^static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)$/;"	f
lv_slider_set_value	src/widgets/lv_slider.h	/^static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)$/;"	f
lv_slider_t	src/widgets/lv_slider.h	/^}lv_slider_t;$/;"	t	typeref:struct:__anon158
lv_snippet_clear	src/extra/widgets/span/lv_span.c	/^static void lv_snippet_clear(void)$/;"	f	file:
lv_snippet_push	src/extra/widgets/span/lv_span.c	/^static void lv_snippet_push(lv_snippet_t * item)$/;"	f	file:
lv_snippet_t	src/extra/widgets/span/lv_span.c	/^} lv_snippet_t;$/;"	t	typeref:struct:__anon136	file:
lv_snprintf	src/lv_conf_internal.h	539;"	d
lv_snprintf	src/lv_conf_internal.h	541;"	d
lv_snprintf	src/misc/lv_printf.c	/^int lv_snprintf(char * buffer, size_t count, const char * format, ...)$/;"	f
lv_span_get_style_text_blend_mode	src/extra/widgets/span/lv_span.c	/^static lv_blend_mode_t lv_span_get_style_text_blend_mode(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_get_style_text_color	src/extra/widgets/span/lv_span.c	/^static lv_color_t lv_span_get_style_text_color(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_get_style_text_decor	src/extra/widgets/span/lv_span.c	/^static int32_t lv_span_get_style_text_decor(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_get_style_text_font	src/extra/widgets/span/lv_span.c	/^static const lv_font_t * lv_span_get_style_text_font(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_get_style_text_letter_space	src/extra/widgets/span/lv_span.c	/^static lv_coord_t lv_span_get_style_text_letter_space(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_get_style_text_opa	src/extra/widgets/span/lv_span.c	/^static lv_opa_t lv_span_get_style_text_opa(lv_obj_t * par, lv_span_t * span)$/;"	f	file:
lv_span_mode_t	src/extra/widgets/span/lv_span.h	/^typedef uint8_t lv_span_mode_t;$/;"	t
lv_span_overflow_t	src/extra/widgets/span/lv_span.h	/^typedef uint8_t lv_span_overflow_t;$/;"	t
lv_span_set_text	src/extra/widgets/span/lv_span.c	/^void lv_span_set_text(lv_span_t * span, const char * text)$/;"	f
lv_span_set_text_static	src/extra/widgets/span/lv_span.c	/^void lv_span_set_text_static(lv_span_t * span, const char * text)$/;"	f
lv_span_t	src/extra/widgets/span/lv_span.h	/^} lv_span_t;$/;"	t	typeref:struct:__anon134
lv_spangroup_class	src/extra/widgets/span/lv_span.c	/^const lv_obj_class_t lv_spangroup_class  = {$/;"	v
lv_spangroup_constructor	src/extra/widgets/span/lv_span.c	/^static void lv_spangroup_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_spangroup_create	src/extra/widgets/span/lv_span.c	/^lv_obj_t * lv_spangroup_create(lv_obj_t * par)$/;"	f
lv_spangroup_del_span	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_del_span(lv_obj_t * obj, lv_span_t * span)$/;"	f
lv_spangroup_destructor	src/extra/widgets/span/lv_span.c	/^static void lv_spangroup_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_spangroup_event	src/extra/widgets/span/lv_span.c	/^static void lv_spangroup_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_spangroup_get_align	src/extra/widgets/span/lv_span.c	/^lv_text_align_t lv_spangroup_get_align(lv_obj_t * obj)$/;"	f
lv_spangroup_get_expand_height	src/extra/widgets/span/lv_span.c	/^lv_coord_t lv_spangroup_get_expand_height(lv_obj_t * obj, lv_coord_t width)$/;"	f
lv_spangroup_get_expand_width	src/extra/widgets/span/lv_span.c	/^lv_coord_t lv_spangroup_get_expand_width(lv_obj_t * obj)$/;"	f
lv_spangroup_get_indent	src/extra/widgets/span/lv_span.c	/^lv_coord_t lv_spangroup_get_indent(lv_obj_t * obj)$/;"	f
lv_spangroup_get_max_line_h	src/extra/widgets/span/lv_span.c	/^lv_coord_t lv_spangroup_get_max_line_h(lv_obj_t * obj)$/;"	f
lv_spangroup_get_mode	src/extra/widgets/span/lv_span.c	/^lv_span_mode_t lv_spangroup_get_mode(lv_obj_t * obj)$/;"	f
lv_spangroup_get_overflow	src/extra/widgets/span/lv_span.c	/^lv_span_overflow_t lv_spangroup_get_overflow(lv_obj_t * obj)$/;"	f
lv_spangroup_new_span	src/extra/widgets/span/lv_span.c	/^lv_span_t * lv_spangroup_new_span(lv_obj_t * obj)$/;"	f
lv_spangroup_refr_mode	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_refr_mode(lv_obj_t * obj)$/;"	f
lv_spangroup_set_align	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_set_align(lv_obj_t * obj, lv_text_align_t align)$/;"	f
lv_spangroup_set_indent	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_set_indent(lv_obj_t * obj, lv_coord_t indent)$/;"	f
lv_spangroup_set_mode	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_set_mode(lv_obj_t * obj, lv_span_mode_t mode)$/;"	f
lv_spangroup_set_overflow	src/extra/widgets/span/lv_span.c	/^void lv_spangroup_set_overflow(lv_obj_t * obj, lv_span_overflow_t overflow)$/;"	f
lv_spangroup_t	src/extra/widgets/span/lv_span.h	/^} lv_spangroup_t;$/;"	t	typeref:struct:__anon135
lv_spinbox_class	src/extra/widgets/spinbox/lv_spinbox.c	/^const lv_obj_class_t lv_spinbox_class = {$/;"	v
lv_spinbox_constructor	src/extra/widgets/spinbox/lv_spinbox.c	/^static void lv_spinbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_spinbox_create	src/extra/widgets/spinbox/lv_spinbox.c	/^lv_obj_t * lv_spinbox_create(lv_obj_t * parent)$/;"	f
lv_spinbox_decrement	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_decrement(lv_obj_t * obj)$/;"	f
lv_spinbox_decrement_event_cb	examples/widgets/spinbox/lv_example_spinbox_1.c	/^static void lv_spinbox_decrement_event_cb(lv_event_t * e)$/;"	f	file:
lv_spinbox_event	src/extra/widgets/spinbox/lv_spinbox.c	/^static void lv_spinbox_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_spinbox_get_rollover	src/extra/widgets/spinbox/lv_spinbox.c	/^bool lv_spinbox_get_rollover(lv_obj_t * obj)$/;"	f
lv_spinbox_get_step	src/extra/widgets/spinbox/lv_spinbox.c	/^int32_t lv_spinbox_get_step(lv_obj_t * obj)$/;"	f
lv_spinbox_get_value	src/extra/widgets/spinbox/lv_spinbox.c	/^int32_t lv_spinbox_get_value(lv_obj_t * obj)$/;"	f
lv_spinbox_increment	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_increment(lv_obj_t * obj)$/;"	f
lv_spinbox_increment_event_cb	examples/widgets/spinbox/lv_example_spinbox_1.c	/^static void lv_spinbox_increment_event_cb(lv_event_t * e)$/;"	f	file:
lv_spinbox_set_digit_format	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_set_digit_format(lv_obj_t * obj, uint8_t digit_count, uint8_t separator_position)$/;"	f
lv_spinbox_set_range	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_set_range(lv_obj_t * obj, int32_t range_min, int32_t range_max)$/;"	f
lv_spinbox_set_rollover	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_set_rollover(lv_obj_t * obj, bool b)$/;"	f
lv_spinbox_set_step	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_set_step(lv_obj_t * obj, uint32_t step)$/;"	f
lv_spinbox_set_value	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_set_value(lv_obj_t * obj, int32_t i)$/;"	f
lv_spinbox_step_next	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_step_next(lv_obj_t * obj)$/;"	f
lv_spinbox_step_prev	src/extra/widgets/spinbox/lv_spinbox.c	/^void lv_spinbox_step_prev(lv_obj_t * obj)$/;"	f
lv_spinbox_t	src/extra/widgets/spinbox/lv_spinbox.h	/^} lv_spinbox_t;$/;"	t	typeref:struct:__anon139
lv_spinbox_updatevalue	src/extra/widgets/spinbox/lv_spinbox.c	/^static void lv_spinbox_updatevalue(lv_obj_t * obj)$/;"	f	file:
lv_spinner_create	src/extra/widgets/spinner/lv_spinner.c	/^lv_obj_t * lv_spinner_create(lv_obj_t * parent, uint32_t time, uint32_t arc_length)$/;"	f
lv_sqrt	src/misc/lv_math.c	/^LV_ATTRIBUTE_FAST_MEM void lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)$/;"	f
lv_sqrt_res_t	src/misc/lv_math.h	/^} lv_sqrt_res_t;$/;"	t	typeref:struct:__anon11
lv_state_t	src/core/lv_obj.h	/^typedef uint16_t lv_state_t;$/;"	t
lv_style_const_prop_t	src/misc/lv_style.h	/^} lv_style_const_prop_t;$/;"	t	typeref:struct:__anon19
lv_style_get_prop	src/misc/lv_style.c	/^lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value)$/;"	f
lv_style_get_prop_inlined	src/misc/lv_style.h	/^static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value)$/;"	f
lv_style_init	src/misc/lv_style.c	/^void lv_style_init(lv_style_t * style)$/;"	f
lv_style_is_empty	src/misc/lv_style.c	/^bool lv_style_is_empty(const lv_style_t * style)$/;"	f
lv_style_prop_get_default	src/misc/lv_style.c	/^lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop)$/;"	f
lv_style_prop_t	src/misc/lv_style.h	/^}lv_style_prop_t;$/;"	t	typeref:enum:__anon17
lv_style_register_prop	src/misc/lv_style.c	/^lv_style_prop_t lv_style_register_prop(void)$/;"	f
lv_style_remove_prop	src/misc/lv_style.c	/^bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop)$/;"	f
lv_style_reset	src/misc/lv_style.c	/^void lv_style_reset(lv_style_t * style)$/;"	f
lv_style_selector_t	src/core/lv_obj_style.h	/^typedef uint32_t lv_style_selector_t;$/;"	t
lv_style_set_align	src/misc/lv_style_gen.c	/^void lv_style_set_align(lv_style_t * style, lv_align_t value)$/;"	f
lv_style_set_anim_speed	src/misc/lv_style_gen.c	/^void lv_style_set_anim_speed(lv_style_t * style, uint32_t value)$/;"	f
lv_style_set_anim_time	src/misc/lv_style_gen.c	/^void lv_style_set_anim_time(lv_style_t * style, uint32_t value)$/;"	f
lv_style_set_arc_color	src/misc/lv_style_gen.c	/^void lv_style_set_arc_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_arc_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_arc_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_arc_img_src	src/misc/lv_style_gen.c	/^void lv_style_set_arc_img_src(lv_style_t * style, const void * value)$/;"	f
lv_style_set_arc_opa	src/misc/lv_style_gen.c	/^void lv_style_set_arc_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_arc_rounded	src/misc/lv_style_gen.c	/^void lv_style_set_arc_rounded(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_arc_width	src/misc/lv_style_gen.c	/^void lv_style_set_arc_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_base_dir	src/misc/lv_style_gen.c	/^void lv_style_set_base_dir(lv_style_t * style, lv_base_dir_t value)$/;"	f
lv_style_set_bg_color	src/misc/lv_style_gen.c	/^void lv_style_set_bg_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_bg_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_grad_color	src/misc/lv_style_gen.c	/^void lv_style_set_bg_grad_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_grad_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_bg_grad_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_grad_dir	src/misc/lv_style_gen.c	/^void lv_style_set_bg_grad_dir(lv_style_t * style, lv_grad_dir_t value)$/;"	f
lv_style_set_bg_grad_stop	src/misc/lv_style_gen.c	/^void lv_style_set_bg_grad_stop(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_bg_img_opa	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_bg_img_recolor	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_recolor(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_img_recolor_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_recolor_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_bg_img_recolor_opa	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_recolor_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_bg_img_src	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_src(lv_style_t * style, const void * value)$/;"	f
lv_style_set_bg_img_tiled	src/misc/lv_style_gen.c	/^void lv_style_set_bg_img_tiled(lv_style_t * style, bool value)$/;"	f
lv_style_set_bg_main_stop	src/misc/lv_style_gen.c	/^void lv_style_set_bg_main_stop(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_bg_opa	src/misc/lv_style_gen.c	/^void lv_style_set_bg_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_blend_mode	src/misc/lv_style_gen.c	/^void lv_style_set_blend_mode(lv_style_t * style, lv_blend_mode_t value)$/;"	f
lv_style_set_border_color	src/misc/lv_style_gen.c	/^void lv_style_set_border_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_border_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_border_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_border_opa	src/misc/lv_style_gen.c	/^void lv_style_set_border_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_border_post	src/misc/lv_style_gen.c	/^void lv_style_set_border_post(lv_style_t * style, bool value)$/;"	f
lv_style_set_border_side	src/misc/lv_style_gen.c	/^void lv_style_set_border_side(lv_style_t * style, lv_border_side_t value)$/;"	f
lv_style_set_border_width	src/misc/lv_style_gen.c	/^void lv_style_set_border_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_clip_corner	src/misc/lv_style_gen.c	/^void lv_style_set_clip_corner(lv_style_t * style, bool value)$/;"	f
lv_style_set_color_filter_dsc	src/misc/lv_style_gen.c	/^void lv_style_set_color_filter_dsc(lv_style_t * style, const lv_color_filter_dsc_t * value)$/;"	f
lv_style_set_color_filter_opa	src/misc/lv_style_gen.c	/^void lv_style_set_color_filter_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_flex_cross_place	src/extra/layouts/flex/lv_flex.c	/^void lv_style_set_flex_cross_place(lv_style_t * style, lv_flex_align_t value)$/;"	f
lv_style_set_flex_flow	src/extra/layouts/flex/lv_flex.c	/^void lv_style_set_flex_flow(lv_style_t * style, lv_flex_flow_t value)$/;"	f
lv_style_set_flex_grow	src/extra/layouts/flex/lv_flex.c	/^void lv_style_set_flex_grow(lv_style_t * style, uint8_t value)$/;"	f
lv_style_set_flex_main_place	src/extra/layouts/flex/lv_flex.c	/^void lv_style_set_flex_main_place(lv_style_t * style, lv_flex_align_t value)$/;"	f
lv_style_set_flex_track_place	src/extra/layouts/flex/lv_flex.c	/^void lv_style_set_flex_track_place(lv_style_t * style, lv_flex_align_t value)$/;"	f
lv_style_set_grid_cell_column_pos	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_column_pos(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_cell_column_span	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_column_span(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_cell_row_pos	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_row_pos(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_cell_row_span	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_row_span(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_cell_x_align	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_x_align(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_cell_y_align	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_cell_y_align(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_grid_column_align	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_column_align(lv_style_t * style, lv_grid_align_t value)$/;"	f
lv_style_set_grid_column_dsc_array	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_column_dsc_array(lv_style_t * style, const lv_coord_t value[])$/;"	f
lv_style_set_grid_row_align	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_row_align(lv_style_t * style, lv_grid_align_t value)$/;"	f
lv_style_set_grid_row_dsc_array	src/extra/layouts/grid/lv_grid.c	/^void lv_style_set_grid_row_dsc_array(lv_style_t * style, const lv_coord_t value[])$/;"	f
lv_style_set_height	src/misc/lv_style_gen.c	/^void lv_style_set_height(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_img_opa	src/misc/lv_style_gen.c	/^void lv_style_set_img_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_img_recolor	src/misc/lv_style_gen.c	/^void lv_style_set_img_recolor(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_img_recolor_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_img_recolor_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_img_recolor_opa	src/misc/lv_style_gen.c	/^void lv_style_set_img_recolor_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_layout	src/misc/lv_style_gen.c	/^void lv_style_set_layout(lv_style_t * style, uint16_t value)$/;"	f
lv_style_set_line_color	src/misc/lv_style_gen.c	/^void lv_style_set_line_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_line_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_line_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_line_dash_gap	src/misc/lv_style_gen.c	/^void lv_style_set_line_dash_gap(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_line_dash_width	src/misc/lv_style_gen.c	/^void lv_style_set_line_dash_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_line_opa	src/misc/lv_style_gen.c	/^void lv_style_set_line_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_line_rounded	src/misc/lv_style_gen.c	/^void lv_style_set_line_rounded(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_line_width	src/misc/lv_style_gen.c	/^void lv_style_set_line_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_max_height	src/misc/lv_style_gen.c	/^void lv_style_set_max_height(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_max_width	src/misc/lv_style_gen.c	/^void lv_style_set_max_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_min_height	src/misc/lv_style_gen.c	/^void lv_style_set_min_height(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_min_width	src/misc/lv_style_gen.c	/^void lv_style_set_min_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_opa	src/misc/lv_style_gen.c	/^void lv_style_set_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_outline_color	src/misc/lv_style_gen.c	/^void lv_style_set_outline_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_outline_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_outline_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_outline_opa	src/misc/lv_style_gen.c	/^void lv_style_set_outline_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_outline_pad	src/misc/lv_style_gen.c	/^void lv_style_set_outline_pad(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_outline_width	src/misc/lv_style_gen.c	/^void lv_style_set_outline_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_all	src/misc/lv_style.h	/^static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value) {$/;"	f
lv_style_set_pad_bottom	src/misc/lv_style_gen.c	/^void lv_style_set_pad_bottom(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_column	src/misc/lv_style_gen.c	/^void lv_style_set_pad_column(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_gap	src/misc/lv_style.h	/^static inline void lv_style_set_pad_gap(lv_style_t * style, lv_coord_t value) {$/;"	f
lv_style_set_pad_hor	src/misc/lv_style.h	/^static inline void lv_style_set_pad_hor(lv_style_t * style, lv_coord_t value) {$/;"	f
lv_style_set_pad_left	src/misc/lv_style_gen.c	/^void lv_style_set_pad_left(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_right	src/misc/lv_style_gen.c	/^void lv_style_set_pad_right(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_row	src/misc/lv_style_gen.c	/^void lv_style_set_pad_row(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_top	src/misc/lv_style_gen.c	/^void lv_style_set_pad_top(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_pad_ver	src/misc/lv_style.h	/^static inline void lv_style_set_pad_ver(lv_style_t * style, lv_coord_t value) {$/;"	f
lv_style_set_prop	src/misc/lv_style.c	/^void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value)$/;"	f
lv_style_set_radius	src/misc/lv_style_gen.c	/^void lv_style_set_radius(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_shadow_color	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_shadow_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_shadow_ofs_x	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_ofs_x(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_shadow_ofs_y	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_ofs_y(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_shadow_opa	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_shadow_spread	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_spread(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_shadow_width	src/misc/lv_style_gen.c	/^void lv_style_set_shadow_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_size	src/misc/lv_style.h	/^static inline void lv_style_set_size(lv_style_t * style, lv_coord_t value) {$/;"	f
lv_style_set_text_align	src/misc/lv_style_gen.c	/^void lv_style_set_text_align(lv_style_t * style, lv_text_align_t value)$/;"	f
lv_style_set_text_color	src/misc/lv_style_gen.c	/^void lv_style_set_text_color(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_text_color_filtered	src/misc/lv_style_gen.c	/^void lv_style_set_text_color_filtered(lv_style_t * style, lv_color_t value)$/;"	f
lv_style_set_text_decor	src/misc/lv_style_gen.c	/^void lv_style_set_text_decor(lv_style_t * style, lv_text_decor_t value)$/;"	f
lv_style_set_text_font	src/misc/lv_style_gen.c	/^void lv_style_set_text_font(lv_style_t * style, const lv_font_t * value)$/;"	f
lv_style_set_text_letter_space	src/misc/lv_style_gen.c	/^void lv_style_set_text_letter_space(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_text_line_space	src/misc/lv_style_gen.c	/^void lv_style_set_text_line_space(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_text_opa	src/misc/lv_style_gen.c	/^void lv_style_set_text_opa(lv_style_t * style, lv_opa_t value)$/;"	f
lv_style_set_transform_angle	src/misc/lv_style_gen.c	/^void lv_style_set_transform_angle(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_transform_height	src/misc/lv_style_gen.c	/^void lv_style_set_transform_height(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_transform_width	src/misc/lv_style_gen.c	/^void lv_style_set_transform_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_transform_zoom	src/misc/lv_style_gen.c	/^void lv_style_set_transform_zoom(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_transition	src/misc/lv_style_gen.c	/^void lv_style_set_transition(lv_style_t * style, const lv_style_transition_dsc_t * value)$/;"	f
lv_style_set_translate_x	src/misc/lv_style_gen.c	/^void lv_style_set_translate_x(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_translate_y	src/misc/lv_style_gen.c	/^void lv_style_set_translate_y(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_width	src/misc/lv_style_gen.c	/^void lv_style_set_width(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_x	src/misc/lv_style_gen.c	/^void lv_style_set_x(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_set_y	src/misc/lv_style_gen.c	/^void lv_style_set_y(lv_style_t * style, lv_coord_t value)$/;"	f
lv_style_t	src/misc/lv_style.h	/^} lv_style_t;$/;"	t	typeref:struct:__anon20
lv_style_transition_dsc_init	src/misc/lv_style.c	/^void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv_anim_path_cb_t path_cb, uint32_t time, uint32_t delay, void * user_data)$/;"	f
lv_style_transition_dsc_t	src/misc/lv_style.h	/^}lv_style_transition_dsc_t;$/;"	t	typeref:struct:__anon18
lv_style_value_t	src/misc/lv_style.h	/^}lv_style_value_t;$/;"	t	typeref:union:__anon16
lv_switch_class	src/widgets/lv_switch.c	/^const lv_obj_class_t lv_switch_class = {$/;"	v
lv_switch_constructor	src/widgets/lv_switch.c	/^static void lv_switch_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_switch_create	src/widgets/lv_switch.c	/^lv_obj_t * lv_switch_create(lv_obj_t * parent)$/;"	f
lv_switch_event	src/widgets/lv_switch.c	/^static void lv_switch_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_switch_t	src/widgets/lv_switch.h	/^}lv_switch_t;$/;"	t	typeref:struct:__anon163
lv_table_add_cell_ctrl	src/widgets/lv_table.c	/^void lv_table_add_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)$/;"	f
lv_table_cell_ctrl_t	src/widgets/lv_table.h	/^typedef uint8_t  lv_table_cell_ctrl_t;$/;"	t
lv_table_class	src/widgets/lv_table.c	/^const lv_obj_class_t lv_table_class  = {$/;"	v
lv_table_clear_cell_ctrl	src/widgets/lv_table.c	/^void lv_table_clear_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)$/;"	f
lv_table_constructor	src/widgets/lv_table.c	/^static void lv_table_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_table_create	src/widgets/lv_table.c	/^lv_obj_t * lv_table_create(lv_obj_t * parent)$/;"	f
lv_table_destructor	src/widgets/lv_table.c	/^static void lv_table_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_table_event	src/widgets/lv_table.c	/^static void lv_table_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_table_get_cell_value	src/widgets/lv_table.c	/^const char * lv_table_get_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col)$/;"	f
lv_table_get_col_cnt	src/widgets/lv_table.c	/^uint16_t lv_table_get_col_cnt(lv_obj_t * obj)$/;"	f
lv_table_get_col_width	src/widgets/lv_table.c	/^lv_coord_t lv_table_get_col_width(lv_obj_t * obj, uint16_t col)$/;"	f
lv_table_get_row_cnt	src/widgets/lv_table.c	/^uint16_t lv_table_get_row_cnt(lv_obj_t * obj)$/;"	f
lv_table_get_selected_cell	src/widgets/lv_table.c	/^void lv_table_get_selected_cell(lv_obj_t * obj, uint16_t * row, uint16_t * col)$/;"	f
lv_table_has_cell_ctrl	src/widgets/lv_table.c	/^bool lv_table_has_cell_ctrl(lv_obj_t * obj, uint16_t row, uint16_t col, lv_table_cell_ctrl_t ctrl)$/;"	f
lv_table_set_cell_value	src/widgets/lv_table.c	/^void lv_table_set_cell_value(lv_obj_t * obj, uint16_t row, uint16_t col, const char * txt)$/;"	f
lv_table_set_cell_value_fmt	src/widgets/lv_table.c	/^void lv_table_set_cell_value_fmt(lv_obj_t * obj, uint16_t row, uint16_t col, const char * fmt, ...)$/;"	f
lv_table_set_col_cnt	src/widgets/lv_table.c	/^void lv_table_set_col_cnt(lv_obj_t * obj, uint16_t col_cnt)$/;"	f
lv_table_set_col_width	src/widgets/lv_table.c	/^void lv_table_set_col_width(lv_obj_t * obj, uint16_t col_id, lv_coord_t w)$/;"	f
lv_table_set_row_cnt	src/widgets/lv_table.c	/^void lv_table_set_row_cnt(lv_obj_t * obj, uint16_t row_cnt)$/;"	f
lv_table_t	src/widgets/lv_table.h	/^} lv_table_t;$/;"	t	typeref:struct:__anon151
lv_tabview_add_tab	src/extra/widgets/tabview/lv_tabview.c	/^lv_obj_t * lv_tabview_add_tab(lv_obj_t * obj, const char * name)$/;"	f
lv_tabview_class	src/extra/widgets/tabview/lv_tabview.c	/^const lv_obj_class_t lv_tabview_class = {$/;"	v
lv_tabview_constructor	src/extra/widgets/tabview/lv_tabview.c	/^static void lv_tabview_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_tabview_create	src/extra/widgets/tabview/lv_tabview.c	/^lv_obj_t * lv_tabview_create(lv_obj_t * parent, lv_dir_t tab_pos, lv_coord_t tab_size)$/;"	f
lv_tabview_destructor	src/extra/widgets/tabview/lv_tabview.c	/^static void lv_tabview_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_tabview_event	src/extra/widgets/tabview/lv_tabview.c	/^static void lv_tabview_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_tabview_get_content	src/extra/widgets/tabview/lv_tabview.c	/^lv_obj_t * lv_tabview_get_content(lv_obj_t * tv)$/;"	f
lv_tabview_get_tab_act	src/extra/widgets/tabview/lv_tabview.c	/^uint16_t lv_tabview_get_tab_act(lv_obj_t * obj)$/;"	f
lv_tabview_get_tab_btns	src/extra/widgets/tabview/lv_tabview.c	/^lv_obj_t * lv_tabview_get_tab_btns(lv_obj_t * tv)$/;"	f
lv_tabview_set_act	src/extra/widgets/tabview/lv_tabview.c	/^void lv_tabview_set_act(lv_obj_t * obj, uint32_t id, lv_anim_enable_t anim_en)$/;"	f
lv_tabview_t	src/extra/widgets/tabview/lv_tabview.h	/^}lv_tabview_t;$/;"	t	typeref:struct:__anon117
lv_task_handler	src/lv_api_map.h	/^static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)$/;"	f
lv_templ_class	src/widgets/lv_objx_templ.c	/^const lv_obj_class_t lv_templ_class = {$/;"	v
lv_templ_constructor	src/widgets/lv_objx_templ.c	/^static void lv_templ_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_templ_create	src/widgets/lv_objx_templ.c	/^lv_obj_t * lv_templ_create(lv_obj_t * parent)$/;"	f
lv_templ_destructor	src/widgets/lv_objx_templ.c	/^static void lv_templ_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_templ_event	src/widgets/lv_objx_templ.c	/^static void lv_templ_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_templ_t	src/widgets/lv_objx_templ.h	/^} lv_templ_t;$/;"	t	typeref:struct:__anon164
lv_test_assert_array_eq	tests/lv_test_assert.c	/^void lv_test_assert_array_eq(const uint8_t *p_ref, const uint8_t *p_act, int32_t size, const char * s)$/;"	f
lv_test_assert_color_eq	tests/lv_test_assert.c	/^void lv_test_assert_color_eq(lv_color_t c_ref, lv_color_t c_act, const char * s)$/;"	f
lv_test_assert_img_eq	tests/lv_test_assert.c	/^void lv_test_assert_img_eq(const char * fn_ref, const char * s)$/;"	f
lv_test_assert_int_eq	tests/lv_test_assert.c	/^void lv_test_assert_int_eq(int32_t n_ref, int32_t n_act, const char * s)$/;"	f
lv_test_assert_int_gt	tests/lv_test_assert.c	/^void lv_test_assert_int_gt(int32_t n_ref, int32_t n_act, const char * s)$/;"	f
lv_test_assert_int_lt	tests/lv_test_assert.c	/^void lv_test_assert_int_lt(int32_t n_ref, int32_t n_act, const char * s)$/;"	f
lv_test_assert_ptr_eq	tests/lv_test_assert.c	/^void lv_test_assert_ptr_eq(const void * p_ref, const void * p_act, const char * s)$/;"	f
lv_test_assert_str_eq	tests/lv_test_assert.c	/^void lv_test_assert_str_eq(const char * s_ref, const char * s_act, const char * s)$/;"	f
lv_test_assert_true	tests/lv_test_assert.c	/^void lv_test_assert_true(int32_t expression, const char * s)$/;"	f
lv_test_core	tests/lv_test_core/lv_test_core.c	/^void lv_test_core(void)$/;"	f
lv_test_error	tests/lv_test_assert.c	/^void lv_test_error(const char * s, ...)$/;"	f
lv_test_exit	tests/lv_test_assert.c	/^void lv_test_exit(const char * s, ...)$/;"	f
lv_test_font_loader	tests/lv_test_core/lv_test_font_loader.c	/^void lv_test_font_loader(void)$/;"	f
lv_test_obj	tests/lv_test_core/lv_test_obj.c	/^void lv_test_obj(void)$/;"	f
lv_test_print	tests/lv_test_assert.c	/^void lv_test_print(const char * s, ...)$/;"	f
lv_text_align_t	src/misc/lv_txt.h	/^typedef uint8_t lv_text_align_t;$/;"	t
lv_text_cmd_state_t	src/misc/lv_txt.h	/^typedef uint8_t lv_text_cmd_state_t;$/;"	t
lv_text_decor_t	src/misc/lv_style.h	/^typedef uint8_t lv_text_decor_t;$/;"	t
lv_text_flag_t	src/misc/lv_txt.h	/^typedef uint8_t lv_text_flag_t;$/;"	t
lv_textarea_add_char	src/widgets/lv_textarea.c	/^void lv_textarea_add_char(lv_obj_t * obj, uint32_t c)$/;"	f
lv_textarea_add_text	src/widgets/lv_textarea.c	/^void lv_textarea_add_text(lv_obj_t * obj, const char * txt)$/;"	f
lv_textarea_class	src/widgets/lv_textarea.c	/^const lv_obj_class_t lv_textarea_class = {$/;"	v
lv_textarea_clear_selection	src/widgets/lv_textarea.c	/^void lv_textarea_clear_selection(lv_obj_t * obj)$/;"	f
lv_textarea_constructor	src/widgets/lv_textarea.c	/^static void lv_textarea_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_textarea_create	src/widgets/lv_textarea.c	/^lv_obj_t * lv_textarea_create(lv_obj_t * parent)$/;"	f
lv_textarea_cursor_down	src/widgets/lv_textarea.c	/^void lv_textarea_cursor_down(lv_obj_t * obj)$/;"	f
lv_textarea_cursor_left	src/widgets/lv_textarea.c	/^void lv_textarea_cursor_left(lv_obj_t * obj)$/;"	f
lv_textarea_cursor_right	src/widgets/lv_textarea.c	/^void lv_textarea_cursor_right(lv_obj_t * obj)$/;"	f
lv_textarea_cursor_up	src/widgets/lv_textarea.c	/^void lv_textarea_cursor_up(lv_obj_t * obj)$/;"	f
lv_textarea_del_char	src/widgets/lv_textarea.c	/^void lv_textarea_del_char(lv_obj_t * obj)$/;"	f
lv_textarea_del_char_forward	src/widgets/lv_textarea.c	/^void lv_textarea_del_char_forward(lv_obj_t * obj)$/;"	f
lv_textarea_destructor	src/widgets/lv_textarea.c	/^static void lv_textarea_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_textarea_event	src/widgets/lv_textarea.c	/^static void lv_textarea_event(const lv_obj_class_t * class_p, lv_event_t * e)$/;"	f	file:
lv_textarea_get_accepted_chars	src/widgets/lv_textarea.c	/^const char * lv_textarea_get_accepted_chars(lv_obj_t * obj)$/;"	f
lv_textarea_get_cursor_click_pos	src/widgets/lv_textarea.c	/^bool lv_textarea_get_cursor_click_pos(lv_obj_t * obj)$/;"	f
lv_textarea_get_cursor_pos	src/widgets/lv_textarea.c	/^uint32_t lv_textarea_get_cursor_pos(const lv_obj_t * obj)$/;"	f
lv_textarea_get_label	src/widgets/lv_textarea.c	/^lv_obj_t * lv_textarea_get_label(const lv_obj_t * obj)$/;"	f
lv_textarea_get_max_length	src/widgets/lv_textarea.c	/^uint32_t lv_textarea_get_max_length(lv_obj_t * obj)$/;"	f
lv_textarea_get_one_line	src/widgets/lv_textarea.c	/^bool lv_textarea_get_one_line(const lv_obj_t * obj)$/;"	f
lv_textarea_get_password_mode	src/widgets/lv_textarea.c	/^bool lv_textarea_get_password_mode(const lv_obj_t * obj)$/;"	f
lv_textarea_get_password_show_time	src/widgets/lv_textarea.c	/^uint16_t lv_textarea_get_password_show_time(lv_obj_t * obj)$/;"	f
lv_textarea_get_placeholder_text	src/widgets/lv_textarea.c	/^const char * lv_textarea_get_placeholder_text(lv_obj_t * obj)$/;"	f
lv_textarea_get_text	src/widgets/lv_textarea.c	/^const char * lv_textarea_get_text(const lv_obj_t * obj)$/;"	f
lv_textarea_get_text_selection	src/widgets/lv_textarea.c	/^bool lv_textarea_get_text_selection(lv_obj_t * obj)$/;"	f
lv_textarea_set_accepted_chars	src/widgets/lv_textarea.c	/^void lv_textarea_set_accepted_chars(lv_obj_t * obj, const char * list)$/;"	f
lv_textarea_set_align	src/widgets/lv_textarea.c	/^void lv_textarea_set_align(lv_obj_t * obj, lv_text_align_t align)$/;"	f
lv_textarea_set_cursor_click_pos	src/widgets/lv_textarea.c	/^void lv_textarea_set_cursor_click_pos(lv_obj_t * obj, bool en)$/;"	f
lv_textarea_set_cursor_pos	src/widgets/lv_textarea.c	/^void lv_textarea_set_cursor_pos(lv_obj_t * obj, int32_t pos)$/;"	f
lv_textarea_set_insert_replace	src/widgets/lv_textarea.c	/^void lv_textarea_set_insert_replace(lv_obj_t * obj, const char * txt)$/;"	f
lv_textarea_set_max_length	src/widgets/lv_textarea.c	/^void lv_textarea_set_max_length(lv_obj_t * obj, uint32_t num)$/;"	f
lv_textarea_set_one_line	src/widgets/lv_textarea.c	/^void lv_textarea_set_one_line(lv_obj_t * obj, bool en)$/;"	f
lv_textarea_set_password_mode	src/widgets/lv_textarea.c	/^void lv_textarea_set_password_mode(lv_obj_t * obj, bool en)$/;"	f
lv_textarea_set_password_show_time	src/widgets/lv_textarea.c	/^void lv_textarea_set_password_show_time(lv_obj_t * obj, uint16_t time)$/;"	f
lv_textarea_set_placeholder_text	src/widgets/lv_textarea.c	/^void lv_textarea_set_placeholder_text(lv_obj_t * obj, const char * txt)$/;"	f
lv_textarea_set_text	src/widgets/lv_textarea.c	/^void lv_textarea_set_text(lv_obj_t * obj, const char * txt)$/;"	f
lv_textarea_set_text_selection	src/widgets/lv_textarea.c	/^void lv_textarea_set_text_selection(lv_obj_t * obj, bool en)$/;"	f
lv_textarea_t	src/widgets/lv_textarea.h	/^} lv_textarea_t;$/;"	t	typeref:struct:__anon160
lv_textarea_text_is_selected	src/widgets/lv_textarea.c	/^bool lv_textarea_text_is_selected(const lv_obj_t * obj)$/;"	f
lv_theme_apply	src/core/lv_theme.c	/^void lv_theme_apply(lv_obj_t * obj)$/;"	f
lv_theme_apply_cb_t	src/core/lv_theme.h	/^typedef void (*lv_theme_apply_cb_t)(struct _lv_theme_t *, lv_obj_t *);$/;"	t
lv_theme_basic_init	src/extra/themes/basic/lv_theme_basic.c	/^lv_theme_t * lv_theme_basic_init(lv_disp_t * disp)$/;"	f
lv_theme_default_init	src/extra/themes/default/lv_theme_default.c	/^lv_theme_t * lv_theme_default_init(lv_disp_t * disp, lv_color_t color_primary, lv_color_t color_secondary, bool dark, const lv_font_t * font)$/;"	f
lv_theme_default_is_inited	src/extra/themes/default/lv_theme_default.c	/^bool lv_theme_default_is_inited(void)$/;"	f
lv_theme_get_color_primary	src/core/lv_theme.c	/^lv_color_t lv_theme_get_color_primary(lv_obj_t * obj)$/;"	f
lv_theme_get_color_secondary	src/core/lv_theme.c	/^lv_color_t lv_theme_get_color_secondary(lv_obj_t * obj)$/;"	f
lv_theme_get_font_large	src/core/lv_theme.c	/^const lv_font_t * lv_theme_get_font_large(lv_obj_t * obj)$/;"	f
lv_theme_get_font_normal	src/core/lv_theme.c	/^const lv_font_t * lv_theme_get_font_normal(lv_obj_t * obj)$/;"	f
lv_theme_get_font_small	src/core/lv_theme.c	/^const lv_font_t * lv_theme_get_font_small(lv_obj_t * obj)$/;"	f
lv_theme_get_from_obj	src/core/lv_theme.c	/^lv_theme_t *  lv_theme_get_from_obj(lv_obj_t * obj)$/;"	f
lv_theme_mono_init	src/extra/themes/mono/lv_theme_mono.c	/^lv_theme_t * lv_theme_mono_init(lv_disp_t * disp, bool dark_bg, const lv_font_t * font)$/;"	f
lv_theme_set_apply_cb	src/core/lv_theme.c	/^void lv_theme_set_apply_cb(lv_theme_t * theme, lv_theme_apply_cb_t apply_cb)$/;"	f
lv_theme_set_parent	src/core/lv_theme.c	/^void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * base)$/;"	f
lv_theme_t	src/core/lv_theme.h	/^} lv_theme_t;$/;"	t	typeref:struct:_lv_theme_t
lv_tick_elaps	src/hal/lv_hal_tick.c	/^uint32_t lv_tick_elaps(uint32_t prev_tick)$/;"	f
lv_tick_get	src/hal/lv_hal_tick.c	/^uint32_t lv_tick_get(void)$/;"	f
lv_tick_inc	src/hal/lv_hal_tick.c	/^LV_ATTRIBUTE_TICK_INC void lv_tick_inc(uint32_t tick_period)$/;"	f
lv_tileview_add_tile	src/extra/widgets/tileview/lv_tileview.c	/^lv_obj_t * lv_tileview_add_tile(lv_obj_t * tv, uint8_t col_id, uint8_t row_id, lv_dir_t dir)$/;"	f
lv_tileview_class	src/extra/widgets/tileview/lv_tileview.c	/^const lv_obj_class_t lv_tileview_class = {.constructor_cb = lv_tileview_constructor,$/;"	v
lv_tileview_constructor	src/extra/widgets/tileview/lv_tileview.c	/^static void lv_tileview_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_tileview_create	src/extra/widgets/tileview/lv_tileview.c	/^lv_obj_t * lv_tileview_create(lv_obj_t * parent)$/;"	f
lv_tileview_get_tile_act	src/extra/widgets/tileview/lv_tileview.c	/^lv_obj_t * lv_tileview_get_tile_act(lv_obj_t * obj)$/;"	f
lv_tileview_t	src/extra/widgets/tileview/lv_tileview.h	/^}lv_tileview_t;$/;"	t	typeref:struct:__anon115
lv_tileview_tile_class	src/extra/widgets/tileview/lv_tileview.c	/^const lv_obj_class_t lv_tileview_tile_class = {.constructor_cb = lv_tileview_tile_constructor,$/;"	v
lv_tileview_tile_constructor	src/extra/widgets/tileview/lv_tileview.c	/^static void lv_tileview_tile_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_tileview_tile_t	src/extra/widgets/tileview/lv_tileview.h	/^}lv_tileview_tile_t;$/;"	t	typeref:struct:__anon116
lv_timer_cb_t	src/misc/lv_timer.h	/^typedef void (*lv_timer_cb_t)(struct _lv_timer_t *);$/;"	t
lv_timer_create	src/misc/lv_timer.c	/^lv_timer_t * lv_timer_create(lv_timer_cb_t timer_xcb, uint32_t period, void * user_data)$/;"	f
lv_timer_create_basic	src/misc/lv_timer.c	/^lv_timer_t * lv_timer_create_basic(void)$/;"	f
lv_timer_del	src/misc/lv_timer.c	/^void lv_timer_del(lv_timer_t * timer)$/;"	f
lv_timer_enable	src/misc/lv_timer.c	/^void lv_timer_enable(bool en)$/;"	f
lv_timer_exec	src/misc/lv_timer.c	/^static bool lv_timer_exec(lv_timer_t * timer)$/;"	f	file:
lv_timer_get_idle	src/misc/lv_timer.c	/^uint8_t lv_timer_get_idle(void)$/;"	f
lv_timer_get_next	src/misc/lv_timer.c	/^lv_timer_t * lv_timer_get_next(lv_timer_t * timer)$/;"	f
lv_timer_handler	src/misc/lv_timer.c	/^LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_timer_handler(void)$/;"	f
lv_timer_pause	src/misc/lv_timer.c	/^void lv_timer_pause(lv_timer_t * timer)$/;"	f
lv_timer_ready	src/misc/lv_timer.c	/^void lv_timer_ready(lv_timer_t * timer)$/;"	f
lv_timer_reset	src/misc/lv_timer.c	/^void lv_timer_reset(lv_timer_t * timer)$/;"	f
lv_timer_resume	src/misc/lv_timer.c	/^void lv_timer_resume(lv_timer_t * timer)$/;"	f
lv_timer_run	src/misc/lv_timer.c	/^static bool lv_timer_run = false;$/;"	v	file:
lv_timer_set_cb	src/misc/lv_timer.c	/^void lv_timer_set_cb(lv_timer_t * timer, lv_timer_cb_t timer_cb)$/;"	f
lv_timer_set_period	src/misc/lv_timer.c	/^void lv_timer_set_period(lv_timer_t * timer, uint32_t period)$/;"	f
lv_timer_set_repeat_count	src/misc/lv_timer.c	/^void lv_timer_set_repeat_count(lv_timer_t * timer, int32_t repeat_count)$/;"	f
lv_timer_t	src/misc/lv_timer.h	/^} lv_timer_t;$/;"	t	typeref:struct:_lv_timer_t
lv_timer_time_remaining	src/misc/lv_timer.c	/^static uint32_t lv_timer_time_remaining(lv_timer_t * timer)$/;"	f	file:
lv_tlsf_add_pool	src/misc/lv_tlsf.c	/^lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)$/;"	f
lv_tlsf_align_size	src/misc/lv_tlsf.c	/^size_t lv_tlsf_align_size(void)$/;"	f
lv_tlsf_alloc_overhead	src/misc/lv_tlsf.c	/^size_t lv_tlsf_alloc_overhead(void)$/;"	f
lv_tlsf_block_size	src/misc/lv_tlsf.c	/^size_t lv_tlsf_block_size(void* ptr)$/;"	f
lv_tlsf_block_size_max	src/misc/lv_tlsf.c	/^size_t lv_tlsf_block_size_max(void)$/;"	f
lv_tlsf_block_size_min	src/misc/lv_tlsf.c	/^size_t lv_tlsf_block_size_min(void)$/;"	f
lv_tlsf_check	src/misc/lv_tlsf.c	/^int lv_tlsf_check(lv_tlsf_t tlsf)$/;"	f
lv_tlsf_check_pool	src/misc/lv_tlsf.c	/^int lv_tlsf_check_pool(lv_pool_t pool)$/;"	f
lv_tlsf_create	src/misc/lv_tlsf.c	/^lv_tlsf_t lv_tlsf_create(void* mem)$/;"	f
lv_tlsf_create_with_pool	src/misc/lv_tlsf.c	/^lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)$/;"	f
lv_tlsf_destroy	src/misc/lv_tlsf.c	/^void lv_tlsf_destroy(lv_tlsf_t tlsf)$/;"	f
lv_tlsf_free	src/misc/lv_tlsf.c	/^void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)$/;"	f
lv_tlsf_get_pool	src/misc/lv_tlsf.c	/^lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)$/;"	f
lv_tlsf_malloc	src/misc/lv_tlsf.c	/^void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)$/;"	f
lv_tlsf_memalign	src/misc/lv_tlsf.c	/^void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)$/;"	f
lv_tlsf_pool_overhead	src/misc/lv_tlsf.c	/^size_t lv_tlsf_pool_overhead(void)$/;"	f
lv_tlsf_realloc	src/misc/lv_tlsf.c	/^void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)$/;"	f
lv_tlsf_remove_pool	src/misc/lv_tlsf.c	/^void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)$/;"	f
lv_tlsf_size	src/misc/lv_tlsf.c	/^size_t lv_tlsf_size(void)$/;"	f
lv_tlsf_t	src/misc/lv_tlsf.h	/^typedef void* lv_tlsf_t;$/;"	t
lv_tlsf_walk_pool	src/misc/lv_tlsf.c	/^void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)$/;"	f
lv_tlsf_walker	src/misc/lv_tlsf.h	/^typedef void (*lv_tlsf_walker)(void* ptr, size_t size, int used, void* user);$/;"	t
lv_trigo_cos	src/misc/lv_math.h	/^static inline LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_cos(int16_t angle)$/;"	f
lv_trigo_sin	src/misc/lv_math.c	/^LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_sin(int16_t angle)$/;"	f
lv_txt_get_next_word	src/misc/lv_txt.c	/^static uint32_t lv_txt_get_next_word(const char * txt, const lv_font_t * font,$/;"	f	file:
lv_txt_get_size	src/misc/lv_txt.c	/^void lv_txt_get_size(lv_point_t * size_res, const char * text, const lv_font_t * font, lv_coord_t letter_space,$/;"	f
lv_txt_get_snippet	src/extra/widgets/span/lv_span.c	/^static bool lv_txt_get_snippet(const char * txt, const lv_font_t * font,$/;"	f	file:
lv_txt_get_width	src/misc/lv_txt.c	/^lv_coord_t lv_txt_get_width(const char * txt, uint32_t length, const lv_font_t * font, lv_coord_t letter_space,$/;"	f
lv_txt_iso8859_1_conv_wc	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_conv_wc(uint32_t c)$/;"	f	file:
lv_txt_iso8859_1_get_byte_id	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_get_byte_id(const char * txt, uint32_t utf8_id)$/;"	f	file:
lv_txt_iso8859_1_get_char_id	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_get_char_id(const char * txt, uint32_t byte_id)$/;"	f	file:
lv_txt_iso8859_1_get_length	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_get_length(const char * txt)$/;"	f	file:
lv_txt_iso8859_1_next	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_next(const char * txt, uint32_t * i)$/;"	f	file:
lv_txt_iso8859_1_prev	src/misc/lv_txt.c	/^static uint32_t lv_txt_iso8859_1_prev(const char * txt, uint32_t * i)$/;"	f	file:
lv_txt_iso8859_1_size	src/misc/lv_txt.c	/^static uint8_t lv_txt_iso8859_1_size(const char * str)$/;"	f	file:
lv_txt_lam_alef	src/misc/lv_txt_ap.c	/^static uint32_t lv_txt_lam_alef(uint32_t ch_curr, uint32_t ch_next)$/;"	f	file:
lv_txt_unicode_to_iso8859_1	src/misc/lv_txt.c	/^static uint32_t lv_txt_unicode_to_iso8859_1(uint32_t letter_uni)$/;"	f	file:
lv_txt_unicode_to_utf8	src/misc/lv_txt.c	/^static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni)$/;"	f	file:
lv_txt_utf8_conv_wc	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_conv_wc(uint32_t c)$/;"	f	file:
lv_txt_utf8_get_byte_id	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id)$/;"	f	file:
lv_txt_utf8_get_char_id	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id)$/;"	f	file:
lv_txt_utf8_get_length	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_get_length(const char * txt)$/;"	f	file:
lv_txt_utf8_next	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i)$/;"	f	file:
lv_txt_utf8_prev	src/misc/lv_txt.c	/^static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)$/;"	f	file:
lv_txt_utf8_size	src/misc/lv_txt.c	/^static uint8_t lv_txt_utf8_size(const char * str)$/;"	f	file:
lv_uintptr_t	src/misc/lv_types.h	/^typedef uint32_t lv_uintptr_t;$/;"	t
lv_uintptr_t	src/misc/lv_types.h	/^typedef uint64_t lv_uintptr_t;$/;"	t
lv_uintptr_t	src/misc/lv_types.h	/^typedef uintptr_t lv_uintptr_t;$/;"	t
lv_user_data_t	tests/lv_test_conf.h	/^typedef void * lv_user_data_t;$/;"	t
lv_version_info	lvgl.h	/^static inline const char *lv_version_info(void)$/;"	f
lv_version_major	lvgl.h	/^static inline int lv_version_major(void)$/;"	f
lv_version_minor	lvgl.h	/^static inline int lv_version_minor(void)$/;"	f
lv_version_patch	lvgl.h	/^static inline int lv_version_patch(void)$/;"	f
lv_vsnprintf	src/lv_conf_internal.h	546;"	d
lv_vsnprintf	src/lv_conf_internal.h	548;"	d
lv_vsnprintf	src/misc/lv_printf.c	/^int lv_vsnprintf(char * buffer, size_t count, const char * format, va_list va)$/;"	f
lv_win_add_btn	src/extra/widgets/win/lv_win.c	/^lv_obj_t * lv_win_add_btn(lv_obj_t * win, const void * icon, lv_coord_t btn_w)$/;"	f
lv_win_add_title	src/extra/widgets/win/lv_win.c	/^lv_obj_t * lv_win_add_title(lv_obj_t * win, const char * txt)$/;"	f
lv_win_class	src/extra/widgets/win/lv_win.c	/^const lv_obj_class_t lv_win_class = {$/;"	v
lv_win_constructor	src/extra/widgets/win/lv_win.c	/^static void lv_win_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)$/;"	f	file:
lv_win_create	src/extra/widgets/win/lv_win.c	/^lv_obj_t * lv_win_create(lv_obj_t * parent, lv_coord_t header_height)$/;"	f
lv_win_get_content	src/extra/widgets/win/lv_win.c	/^lv_obj_t * lv_win_get_content(lv_obj_t * win)$/;"	f
lv_win_get_header	src/extra/widgets/win/lv_win.c	/^lv_obj_t * lv_win_get_header(lv_obj_t * win)$/;"	f
lv_win_t	src/extra/widgets/win/lv_win.h	/^}lv_win_t;$/;"	t	typeref:struct:__anon114
lvgl_load_font	src/font/lv_font_loader.c	/^static bool lvgl_load_font(lv_fs_file_t * fp, lv_font_t * font)$/;"	f	file:
main	tests/lv_test_main.c	/^int main(void)$/;"	f
main_place	src/extra/layouts/flex/lv_flex.c	/^    lv_flex_align_t main_place;$/;"	m	struct:__anon140	file:
major_cnt	src/extra/widgets/chart/lv_chart.h	/^    uint32_t major_cnt :15;$/;"	m	struct:__anon109
major_len	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t major_len;$/;"	m	struct:__anon109
make_one_button_checked	src/widgets/lv_btnmatrix.c	/^static void make_one_button_checked(lv_obj_t * obj, uint16_t btn_idx)$/;"	f	file:
map	src/draw/lv_draw_mask.h	/^        const lv_opa_t * map;$/;"	m	struct:_lv_draw_mask_map_param_t::__anon85
map	src/extra/widgets/calendar/lv_calendar.h	/^    const char * map[8 * 7];$/;"	m	struct:__anon121
map	src/extra/widgets/tabview/lv_tabview.h	/^    char ** map;$/;"	m	struct:__anon117
map_blended	src/draw/lv_draw_blend.c	/^static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,$/;"	f	file:
map_normal	src/draw/lv_draw_blend.c	/^LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,$/;"	f	file:
map_p	src/widgets/lv_btnmatrix.h	/^    const char ** map_p;                              \/*Pointer to the current map*\/$/;"	m	struct:__anon156
map_set_px	src/draw/lv_draw_blend.c	/^static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_area,$/;"	f	file:
mapping_insert	src/misc/lv_tlsf.c	/^static void mapping_insert(size_t size, int* fli, int* sli)$/;"	f	file:
mapping_search	src/misc/lv_tlsf.c	/^static void mapping_search(size_t size, int* fli, int* sli)$/;"	f	file:
mask_event_cb	examples/widgets/roller/lv_example_roller_3.c	/^static void mask_event_cb(lv_event_t * e)$/;"	f	file:
mask_mix	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new)$/;"	f	file:
max	src/extra/widgets/meter/lv_meter.h	/^    int32_t max;$/;"	m	struct:__anon123
max_length	src/widgets/lv_textarea.h	/^    uint32_t max_length;         \/*The max. number of characters. 0: no limit*\/$/;"	m	struct:__anon160
max_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t max_size;$/;"	m	struct:__anon141	file:
max_used	src/misc/lv_mem.h	/^    uint32_t max_used; \/**< Max size of Heap memory used*\/$/;"	m	struct:__anon23
max_value	src/widgets/lv_arc.h	/^    int16_t max_value; 			\/*Maximum value of the arc*\/$/;"	m	struct:__anon166
max_value	src/widgets/lv_bar.h	/^    int32_t max_value;          \/**< Maximum value of the bar*\/$/;"	m	struct:__anon176
max_y	src/font/lv_font_loader.c	/^    int16_t max_y;$/;"	m	struct:font_header_bin	file:
meter	examples/widgets/meter/lv_example_meter_1.c	/^static lv_obj_t * meter;$/;"	v	file:
meter	examples/widgets/meter/lv_example_meter_2.c	/^static lv_obj_t * meter;$/;"	v	file:
meter	examples/widgets/meter/lv_example_meter_3.c	/^static lv_obj_t * meter;$/;"	v	file:
meter_indic	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t meter_marker, meter_indic;$/;"	m	struct:__anon98	file:
meter_marker	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t meter_marker, meter_indic;$/;"	m	struct:__anon98	file:
min	src/extra/widgets/meter/lv_meter.h	/^    int32_t min;$/;"	m	struct:__anon123
min_close	src/widgets/lv_arc.h	/^    uint16_t min_close   : 1;  	\/*1: the last pressed angle was closer to minimum end*\/$/;"	m	struct:__anon166
min_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t min_size;$/;"	m	struct:__anon141	file:
min_value	src/widgets/lv_arc.h	/^    int16_t min_value; 			\/*Minimum value of the arc*\/$/;"	m	struct:__anon166
min_value	src/widgets/lv_bar.h	/^    int32_t min_value;          \/**< Minimum value of the bar*\/$/;"	m	struct:__anon176
min_y	src/font/lv_font_loader.c	/^    int16_t min_y;$/;"	m	struct:font_header_bin	file:
minor_cnt	src/extra/widgets/chart/lv_chart.h	/^    uint32_t minor_cnt :15;$/;"	m	struct:__anon109
minor_len	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t minor_len;$/;"	m	struct:__anon109
mode	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    lv_colorwheel_mode_t mode  : 2;$/;"	m	struct:__anon112
mode	src/extra/widgets/keyboard/lv_keyboard.h	/^    lv_keyboard_mode_t mode;    \/*Key map type*\/$/;"	m	struct:__anon138
mode	src/extra/widgets/span/lv_span.h	/^    uint8_t mode : 2;$/;"	m	struct:__anon135
mode	src/widgets/lv_bar.h	/^    lv_bar_mode_t mode : 2;     \/**< Type of bar*\/$/;"	m	struct:__anon176
mode	src/widgets/lv_roller.h	/^  lv_roller_mode_t mode : 1;$/;"	m	struct:__anon154
mode_fixed	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    uint8_t mode_fixed            : 1;$/;"	m	struct:__anon112
monitor_cb	src/hal/lv_hal_disp.h	/^    void (*monitor_cb)(struct _lv_disp_drv_t * disp_drv, uint32_t time, uint32_t px);$/;"	m	struct:_lv_disp_drv_t
month	src/extra/widgets/calendar/lv_calendar.h	/^    int8_t month;  \/** 1..12*\/$/;"	m	struct:__anon120
month_event_cb	src/extra/widgets/calendar/lv_calendar_header_arrow.c	/^static void month_event_cb(lv_event_t * e)$/;"	f	file:
month_event_cb	src/extra/widgets/calendar/lv_calendar_header_dropdown.c	/^static void month_event_cb(lv_event_t * e)$/;"	f	file:
month_list	src/extra/widgets/calendar/lv_calendar_header_dropdown.c	/^static const char * month_list = "01\\n02\\n03\\n04\\n05\\n06\\n07\\n08\\n09\\n10\\n11\\n12";$/;"	v	file:
month_names_def	src/extra/widgets/calendar/lv_calendar_header_arrow.c	/^static const char * month_names_def[12] = LV_CALENDAR_DEFAULT_MONTH_NAMES;$/;"	v	file:
mouse_get_xy	examples/porting/lv_port_indev_template.c	/^static void mouse_get_xy(lv_coord_t * x, lv_coord_t * y)$/;"	f	file:
mouse_init	examples/porting/lv_port_indev_template.c	/^static void mouse_init(void)$/;"	f	file:
mouse_is_pressed	examples/porting/lv_port_indev_template.c	/^static bool mouse_is_pressed(void)$/;"	f	file:
mouse_read	examples/porting/lv_port_indev_template.c	/^static void mouse_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)$/;"	f	file:
moved	src/widgets/lv_roller.h	/^  uint32_t moved : 1;$/;"	m	struct:__anon154
msgbox_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t msgbox_bg, msgbox_btn_bg;$/;"	m	struct:__anon98	file:
msgbox_btn_bg	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t msgbox_bg, msgbox_btn_bg;$/;"	m	struct:__anon98	file:
msgbox_close_click_event_cb	src/extra/widgets/msgbox/lv_msgbox.c	/^static void msgbox_close_click_event_cb(lv_event_t * e)$/;"	f	file:
my_theme_styles_t	src/extra/themes/basic/lv_theme_basic.c	/^} my_theme_styles_t;$/;"	t	typeref:struct:__anon97	file:
my_theme_styles_t	src/extra/themes/default/lv_theme_default.c	/^} my_theme_styles_t;$/;"	t	typeref:struct:__anon98	file:
my_theme_styles_t	src/extra/themes/mono/lv_theme_mono.c	/^} my_theme_styles_t;$/;"	t	typeref:struct:__anon101	file:
my_theme_t	src/extra/themes/default/lv_theme_default.c	/^}my_theme_t;$/;"	t	typeref:struct:__anon99	file:
n_size	src/misc/lv_ll.h	/^    uint32_t n_size;$/;"	m	struct:__anon10
native_color	src/draw/lv_img_buf.h	/^        uint8_t native_color : 1;$/;"	m	struct:__anon66::__anon69
needle_img	src/extra/widgets/meter/lv_meter.h	/^        }needle_img;$/;"	m	union:__anon125::__anon126	typeref:struct:__anon125::__anon126::__anon127
needle_line	src/extra/widgets/meter/lv_meter.h	/^        }needle_line;$/;"	m	union:__anon125::__anon126	typeref:struct:__anon125::__anon126::__anon128
new_points_alloc	src/extra/widgets/chart/lv_chart.c	/^static void new_points_alloc(lv_obj_t * obj, lv_chart_series_t * ser, uint32_t cnt, lv_coord_t ** a)$/;"	f	file:
new_theme_apply_cb	examples/styles/lv_example_style_14.c	/^static void new_theme_apply_cb(lv_theme_t * th, lv_obj_t * obj)$/;"	f	file:
new_theme_init_and_set	examples/styles/lv_example_style_14.c	/^static void new_theme_init_and_set(void)$/;"	f	file:
next_color_mode	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void next_color_mode(lv_obj_t * obj)$/;"	f	file:
next_free	src/misc/lv_tlsf.c	/^	struct block_header_t* next_free;$/;"	m	struct:block_header_t	typeref:struct:block_header_t::block_header_t	file:
no_radius	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t no_radius;$/;"	m	struct:__anon98	file:
no_radius	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t no_radius;$/;"	m	struct:__anon101	file:
node_set_next	src/misc/lv_ll.c	/^static void node_set_next(lv_ll_t * ll_p, lv_ll_node_t * act, lv_ll_node_t * next)$/;"	f	file:
node_set_prev	src/misc/lv_ll.c	/^static void node_set_prev(lv_ll_t * ll_p, lv_ll_node_t * act, lv_ll_node_t * prev)$/;"	f	file:
num	src/misc/lv_style.h	/^    int32_t num;         \/**< Number integer number (opacity, enums, booleans or "normal" numbers)*\/$/;"	m	union:__anon16
number_of_passes	tests/lv_test_assert.c	/^    int number_of_passes;$/;"	m	struct:__anon201	file:
nums	src/extra/widgets/calendar/lv_calendar.h	/^    char nums [7 * 6][4];$/;"	m	struct:__anon121
obj	src/core/lv_obj_style.c	/^    lv_obj_t * obj;$/;"	m	struct:__anon187	file:
obj	src/extra/widgets/chart/lv_chart.h	/^    lv_obj_t obj;$/;"	m	struct:__anon110
obj	src/extra/widgets/colorwheel/lv_colorwheel.h	/^    lv_obj_t obj;$/;"	m	struct:__anon112
obj	src/extra/widgets/imgbtn/lv_imgbtn.h	/^    lv_obj_t obj;$/;"	m	struct:__anon103
obj	src/extra/widgets/led/lv_led.h	/^    lv_obj_t obj;$/;"	m	struct:__anon122
obj	src/extra/widgets/meter/lv_meter.h	/^    lv_obj_t obj;$/;"	m	struct:__anon131
obj	src/extra/widgets/span/lv_span.h	/^    lv_obj_t obj;$/;"	m	struct:__anon135
obj	src/extra/widgets/tabview/lv_tabview.h	/^    lv_obj_t obj;$/;"	m	struct:__anon117
obj	src/extra/widgets/tileview/lv_tileview.h	/^    lv_obj_t obj;$/;"	m	struct:__anon115
obj	src/extra/widgets/tileview/lv_tileview.h	/^    lv_obj_t obj;$/;"	m	struct:__anon116
obj	src/extra/widgets/win/lv_win.h	/^    lv_obj_t obj;$/;"	m	struct:__anon114
obj	src/widgets/lv_arc.h	/^    lv_obj_t obj;$/;"	m	struct:__anon166
obj	src/widgets/lv_bar.h	/^    lv_obj_t obj;$/;"	m	struct:__anon176
obj	src/widgets/lv_btn.h	/^    lv_obj_t obj;$/;"	m	struct:__anon170
obj	src/widgets/lv_btnmatrix.h	/^    lv_obj_t obj;$/;"	m	struct:__anon156
obj	src/widgets/lv_checkbox.h	/^    lv_obj_t obj;$/;"	m	struct:__anon152
obj	src/widgets/lv_dropdown.h	/^    lv_obj_t obj;$/;"	m	struct:__anon172
obj	src/widgets/lv_dropdown.h	/^  lv_obj_t obj;$/;"	m	struct:__anon173
obj	src/widgets/lv_img.h	/^    lv_obj_t obj;$/;"	m	struct:__anon177
obj	src/widgets/lv_label.h	/^    lv_obj_t obj;$/;"	m	struct:__anon168
obj	src/widgets/lv_line.h	/^    lv_obj_t obj;$/;"	m	struct:__anon171
obj	src/widgets/lv_roller.h	/^  lv_obj_t obj;$/;"	m	struct:__anon154
obj	src/widgets/lv_switch.h	/^    lv_obj_t obj;$/;"	m	struct:__anon163
obj	src/widgets/lv_table.h	/^    lv_obj_t obj;$/;"	m	struct:__anon151
obj	src/widgets/lv_textarea.h	/^    lv_obj_t obj;$/;"	m	struct:__anon160
obj_del_core	src/core/lv_obj_tree.c	/^static void obj_del_core(lv_obj_t * obj)$/;"	f	file:
obj_focus	src/core/lv_group.h	/^    struct _lv_obj_t ** obj_focus; \/**< The object in focus*\/$/;"	m	struct:_lv_group_t	typeref:struct:_lv_group_t::_lv_obj_t
obj_ll	src/core/lv_group.h	/^    lv_ll_t obj_ll;        \/**< Linked list to store the objects in the group*\/$/;"	m	struct:_lv_group_t
obj_valid_child	src/core/lv_obj.c	/^static bool obj_valid_child(const lv_obj_t * parent, const lv_obj_t * obj_to_find)$/;"	f	file:
offset	src/widgets/lv_img.h	/^    lv_point_t offset;$/;"	m	struct:__anon177
offset	src/widgets/lv_label.h	/^    lv_point_t offset; \/*Text draw position offset*\/$/;"	m	struct:__anon168
offset_to_block	src/misc/lv_tlsf.c	/^static block_header_t* offset_to_block(const void* ptr, size_t size)$/;"	f	file:
ofs_x	src/draw/lv_draw_label.h	/^    lv_coord_t ofs_x;$/;"	m	struct:__anon58
ofs_x	src/font/lv_font.h	/^    int16_t ofs_x;   \/**< x offset of the bounding box*\/$/;"	m	struct:__anon56
ofs_x	src/font/lv_font_fmt_txt.h	/^    int8_t ofs_x;                   \/**< x offset of the bounding box*\/$/;"	m	struct:__anon46
ofs_y	src/draw/lv_draw_label.h	/^    lv_coord_t ofs_y;$/;"	m	struct:__anon58
ofs_y	src/font/lv_font.h	/^    int16_t ofs_y;  \/**< y offset of the bounding box*\/$/;"	m	struct:__anon56
ofs_y	src/font/lv_font_fmt_txt.h	/^    int8_t ofs_y;                   \/**< y offset of the bounding box. Measured from the top of the line*\/$/;"	m	struct:__anon46
ofs_y_anim	examples/widgets/img/lv_example_img_4.c	/^static void ofs_y_anim(void * img, int32_t v)$/;"	f	file:
one_check	src/widgets/lv_btnmatrix.h	/^    uint8_t one_check : 1;  \/*Single button toggled at once*\/$/;"	m	struct:__anon156
one_line	src/widgets/lv_textarea.h	/^    uint8_t one_line : 1; \/*One line mode (ignore line breaks)*\/$/;"	m	struct:__anon160
opa	src/draw/lv_draw_arc.h	/^    lv_opa_t opa;$/;"	m	struct:__anon61
opa	src/draw/lv_draw_img.h	/^    lv_opa_t opa;$/;"	m	struct:__anon87
opa	src/draw/lv_draw_label.h	/^    lv_opa_t opa;$/;"	m	struct:__anon58
opa	src/draw/lv_draw_line.h	/^    lv_opa_t opa;$/;"	m	struct:__anon71
opa	src/draw/lv_img_buf.h	/^        lv_opa_t opa;$/;"	m	struct:__anon66::__anon68
opa	src/draw/lv_img_decoder.c	/^    lv_opa_t * opa;$/;"	m	struct:__anon70	file:
opa	src/extra/widgets/meter/lv_meter.h	/^    lv_opa_t opa;$/;"	m	struct:__anon125
opa	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_opa_t opa;            \/**< Opacity - alpha mix (0 = source not copied, 255 = 100% opaque)*\/$/;"	m	struct:__anon149
opa_bottom	src/draw/lv_draw_mask.h	/^        lv_opa_t opa_bottom;$/;"	m	struct:__anon83::__anon84
opa_scale_anim	src/core/lv_disp.c	/^static void opa_scale_anim(void * obj, int32_t v)$/;"	f	file:
opa_top	src/draw/lv_draw_mask.h	/^        lv_opa_t opa_top;$/;"	m	struct:__anon83::__anon84
open_cb	src/draw/lv_img_decoder.h	/^    lv_img_decoder_open_f_t open_cb;$/;"	m	struct:_lv_img_decoder_t
open_cb	src/misc/lv_fs.h	/^    void * (*open_cb)(struct _lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode);$/;"	m	struct:_lv_fs_drv_t
open_cb	tests/lv_test_main.c	/^static void * open_cb(lv_fs_drv_t * drv, const char * path, lv_fs_mode_t mode)$/;"	f	file:
option_cnt	src/widgets/lv_dropdown.h	/^    uint16_t option_cnt;            \/**< Number of options*\/$/;"	m	struct:__anon172
option_cnt	src/widgets/lv_roller.h	/^  uint16_t option_cnt;          \/**< Number of options*\/$/;"	m	struct:__anon154
options	src/widgets/lv_dropdown.h	/^    char * options;                 \/**< Options in a a '\\n' separated list*\/$/;"	m	struct:__anon172
origo	src/draw/lv_draw_mask.h	/^    lv_point_t origo;$/;"	m	struct:__anon77
out_fct_type	src/misc/lv_printf.c	/^typedef void (*out_fct_type)(char character, void * buffer, size_t idx, size_t maxlen);$/;"	t	file:
out_fct_wrap_type	src/misc/lv_printf.c	/^} out_fct_wrap_type;$/;"	t	typeref:struct:__anon3	file:
outer	src/draw/lv_draw_mask.h	/^        uint8_t outer: 1;$/;"	m	struct:__anon81::__anon82
outline_color	src/draw/lv_draw_rect.h	/^    lv_color_t outline_color;$/;"	m	struct:__anon86
outline_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t outline_opa;$/;"	m	struct:__anon86
outline_pad	src/draw/lv_draw_rect.h	/^    lv_coord_t outline_pad;$/;"	m	struct:__anon86
outline_primary	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t outline_primary;$/;"	m	struct:__anon98	file:
outline_secondary	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t outline_secondary;$/;"	m	struct:__anon98	file:
outline_width	src/draw/lv_draw_rect.h	/^    lv_coord_t outline_width;$/;"	m	struct:__anon86
overflow	src/extra/widgets/span/lv_span.h	/^    uint8_t overflow : 1;$/;"	m	struct:__anon135
p	src/misc/lv_mem.h	/^    void * p;$/;"	m	struct:__anon24
p1	src/core/lv_obj_draw.h	/^    const lv_point_t * p1;              \/**< A point calculated during drawing. E.g. a point of chart or the center of an arc.*\/$/;"	m	struct:__anon199
p1	src/draw/lv_draw_mask.h	/^        lv_point_t p1;$/;"	m	struct:__anon77::__anon78
p2	src/core/lv_obj_draw.h	/^    const lv_point_t * p2;              \/**< A point calculated during drawing. E.g. a point of chart.*\/$/;"	m	struct:__anon199
p2	src/draw/lv_draw_mask.h	/^        lv_point_t p2;$/;"	m	struct:__anon77::__anon78
pad_gap	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pad_gap;$/;"	m	struct:__anon98	file:
pad_gap	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t pad_gap;$/;"	m	struct:__anon101	file:
pad_normal	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pad_normal;$/;"	m	struct:__anon98	file:
pad_small	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pad_small;$/;"	m	struct:__anon98	file:
pad_tiny	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pad_tiny;$/;"	m	struct:__anon98	file:
pad_zero	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t pad_zero;$/;"	m	struct:__anon97	file:
pad_zero	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pad_zero;$/;"	m	struct:__anon98	file:
pad_zero	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t pad_zero;$/;"	m	struct:__anon101	file:
padding	src/font/lv_font_loader.c	/^    uint8_t padding;$/;"	m	struct:cmap_table_bin	file:
padding	src/font/lv_font_loader.c	/^    uint8_t padding;$/;"	m	struct:font_header_bin	file:
page_press_handler	src/widgets/lv_dropdown.c	/^static void page_press_handler(lv_obj_t * list_obj)$/;"	f	file:
pair_cnt	src/font/lv_font_fmt_txt.h	/^    uint32_t pair_cnt   : 30;$/;"	m	struct:__anon49
palette	src/draw/lv_img_decoder.c	/^    lv_color_t * palette;$/;"	m	struct:__anon70	file:
param	src/core/lv_event.h	/^    void * param;$/;"	m	struct:_lv_event_t
param	src/draw/lv_draw_mask.h	/^    void * param;$/;"	m	struct:__anon73
parent	src/core/lv_obj.h	/^    struct _lv_obj_t * parent;$/;"	m	struct:_lv_obj_t	typeref:struct:_lv_obj_t::_lv_obj_t
parent	src/core/lv_theme.h	/^    struct _lv_theme_t * parent;    \/**< Apply the current theme's style on top of this theme.*\/$/;"	m	struct:_lv_theme_t	typeref:struct:_lv_theme_t::_lv_theme_t
part	src/core/lv_obj_draw.h	/^    uint32_t part;                      \/**< The current part for which the event is sent*\/$/;"	m	struct:__anon199
path_cb	src/core/lv_obj_style.h	/^    lv_anim_path_cb_t path_cb;$/;"	m	struct:__anon197
path_cb	src/misc/lv_anim.h	/^    lv_anim_path_cb_t path_cb;         \/**< Describe the path (curve) of animations*\/$/;"	m	struct:_lv_anim_t
path_xcb	src/misc/lv_style.h	/^    lv_anim_path_cb_t path_xcb;     \/**< A path for the animation.*\/$/;"	m	struct:__anon18
paused	src/misc/lv_timer.h	/^    uint32_t paused :1;$/;"	m	struct:_lv_timer_t
period	src/misc/lv_timer.h	/^    uint32_t period; \/**< How often the timer should run*\/$/;"	m	struct:_lv_timer_t
pic_count	src/extra/widgets/animimg/lv_animimg.h	/^    int8_t	pic_count;$/;"	m	struct:__anon118
pivot	src/draw/lv_draw_img.h	/^    lv_point_t pivot;$/;"	m	struct:__anon87
pivot	src/extra/widgets/meter/lv_meter.h	/^            lv_point_t pivot;$/;"	m	struct:__anon125::__anon126::__anon127
pivot	src/widgets/lv_img.h	/^    lv_point_t pivot;     \/*rotation center of the image*\/$/;"	m	struct:__anon177
pivot_x	src/draw/lv_img_buf.h	/^        lv_coord_t pivot_x;         \/*pivot x*\/$/;"	m	struct:__anon66::__anon67
pivot_x_256	src/draw/lv_img_buf.h	/^        int32_t pivot_x_256;$/;"	m	struct:__anon66::__anon69
pivot_y	src/draw/lv_img_buf.h	/^        lv_coord_t pivot_y;         \/*pivot y*\/$/;"	m	struct:__anon66::__anon67
pivot_y_256	src/draw/lv_img_buf.h	/^        int32_t pivot_y_256;$/;"	m	struct:__anon66::__anon69
place_content	src/extra/layouts/flex/lv_flex.c	/^static void place_content(lv_flex_align_t place, lv_coord_t max_size, lv_coord_t content_size, lv_coord_t item_cnt, lv_coord_t * start_pos, lv_coord_t * gap)$/;"	f	file:
placeholder_txt	src/widgets/lv_textarea.h	/^    char * placeholder_txt;      \/*Place holder label. only visible if text is an empty string*\/$/;"	m	struct:__anon160
playback_delay	src/misc/lv_anim.h	/^    uint32_t playback_delay;     \/**< Wait before play back*\/$/;"	m	struct:_lv_anim_t
playback_now	src/misc/lv_anim.h	/^    uint8_t playback_now : 1; \/**< Play back is in progress*\/$/;"	m	struct:_lv_anim_t
playback_time	src/misc/lv_anim.h	/^    uint32_t playback_time;      \/**< Duration of playback animation*\/$/;"	m	struct:_lv_anim_t
png_img_t	tests/lv_test_assert.c	/^}png_img_t;$/;"	t	typeref:struct:__anon201	file:
png_ptr	tests/lv_test_assert.c	/^    png_structp png_ptr;$/;"	m	struct:__anon201	file:
png_release	tests/lv_test_assert.c	/^static void png_release(png_img_t * p)$/;"	f	file:
point	src/core/lv_event.h	/^    const lv_point_t * point;   \/**< A point relative to screen to check if it can click the object or not*\/$/;"	m	struct:__anon192
point	src/hal/lv_hal_indev.h	/^    lv_point_t point; \/**< For LV_INDEV_TYPE_POINTER the currently pressed point*\/$/;"	m	struct:__anon92
point_array	src/widgets/lv_line.h	/^    const lv_point_t * point_array;     \/**< Pointer to an array with the points of the line*\/$/;"	m	struct:__anon171
point_cnt	src/extra/widgets/chart/lv_chart.h	/^    uint16_t point_cnt;    \/**< Point number in a data line*\/$/;"	m	struct:__anon110
point_id	src/extra/widgets/chart/lv_chart.h	/^    uint16_t point_id;$/;"	m	struct:__anon108
point_num	src/widgets/lv_line.h	/^    uint16_t point_num;                 \/**< Number of points in 'point_array'*\/$/;"	m	struct:__anon171
pointer	src/hal/lv_hal_indev.h	/^        } pointer;$/;"	m	union:_lv_indev_proc_t::__anon93	typeref:struct:_lv_indev_proc_t::__anon93::__anon94
pos	src/extra/widgets/chart/lv_chart.h	/^    lv_point_t pos;$/;"	m	struct:__anon108
pos	src/extra/widgets/colorwheel/lv_colorwheel.h	/^        lv_point_t pos;$/;"	m	struct:__anon112::__anon113
pos	src/widgets/lv_textarea.h	/^        uint32_t pos;              \/*The current cursor position$/;"	m	struct:__anon160::__anon161
pos_set	src/extra/widgets/chart/lv_chart.h	/^    uint8_t pos_set:1;  \/*1: pos is set; 0: point_id is set*\/$/;"	m	struct:__anon108
position_knob	src/widgets/lv_slider.c	/^static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, lv_coord_t knob_size, bool hor)$/;"	f	file:
position_to_selected	src/widgets/lv_dropdown.c	/^static void position_to_selected(lv_obj_t * dropdown_obj)$/;"	f	file:
pr	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t pr;$/;"	m	struct:__anon101	file:
pr_opt_id	src/widgets/lv_dropdown.h	/^    uint16_t pr_opt_id;             \/**< Index of the currently pressed option*\/$/;"	m	struct:__anon172
pr_timestamp	src/hal/lv_hal_indev.h	/^    uint32_t pr_timestamp;         \/**< Pressed time stamp*\/$/;"	m	struct:_lv_indev_proc_t
pressed	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t pressed;$/;"	m	struct:__anon97	file:
pressed	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t pressed;$/;"	m	struct:__anon98	file:
pressed_point_id	src/extra/widgets/chart/lv_chart.h	/^    uint16_t pressed_point_id;$/;"	m	struct:__anon110
prev	src/core/lv_event.h	/^    struct _lv_event_t * prev;$/;"	m	struct:_lv_event_t	typeref:struct:_lv_event_t::_lv_event_t
prev_free	src/misc/lv_tlsf.c	/^	struct block_header_t* prev_free;$/;"	m	struct:block_header_t	typeref:struct:block_header_t::block_header_t	file:
prev_phys_block	src/misc/lv_tlsf.c	/^	struct block_header_t* prev_phys_block;$/;"	m	struct:block_header_t	typeref:struct:block_header_t::block_header_t	file:
prev_scr	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t * prev_scr;    \/**< Previous screen. Used during screen animations*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
prev_status	src/misc/lv_tlsf.c	/^	int prev_status;$/;"	m	struct:integrity_t	file:
printf	src/misc/lv_tlsf.c	10;"	d	file:
proc	src/hal/lv_hal_indev.h	/^    _lv_indev_proc_t proc;$/;"	m	struct:_lv_indev_t
prop	src/core/lv_obj_style.c	/^    lv_style_prop_t prop;$/;"	m	struct:__anon187	file:
prop	src/core/lv_obj_style.h	/^    lv_style_prop_t prop;$/;"	m	struct:__anon197
prop	src/misc/lv_style.h	/^    lv_style_prop_t prop;$/;"	m	struct:__anon19
prop1	src/misc/lv_style.h	/^    uint16_t prop1 :15;$/;"	m	struct:__anon20
prop_cnt	src/misc/lv_style.h	/^    uint8_t prop_cnt;$/;"	m	struct:__anon20
props	src/misc/lv_style.h	/^    const lv_style_prop_t * props; \/**< An array with the properties to animate.*\/$/;"	m	struct:__anon18
ptr	src/misc/lv_style.h	/^    const void * ptr;    \/**< Constant pointers  (font, cone text, etc)*\/$/;"	m	union:__anon16
pwd_char_hider	src/widgets/lv_textarea.c	/^static void pwd_char_hider(lv_obj_t * obj)$/;"	f	file:
pwd_char_hider_anim	src/widgets/lv_textarea.c	/^static void pwd_char_hider_anim(void * obj, int32_t x)$/;"	f	file:
pwd_char_hider_anim_ready	src/widgets/lv_textarea.c	/^static void pwd_char_hider_anim_ready(lv_anim_t * a)$/;"	f	file:
pwd_mode	src/widgets/lv_textarea.h	/^    uint8_t pwd_mode : 1; \/*Replace characters with '*'*\/$/;"	m	struct:__anon160
pwd_show_time	src/widgets/lv_textarea.h	/^    uint16_t pwd_show_time;      \/*Time to show characters in password mode before change them to '*'*\/$/;"	m	struct:__anon160
pwd_tmp	src/widgets/lv_textarea.h	/^    char * pwd_tmp;              \/*Used to store the original text in password mode*\/$/;"	m	struct:__anon160
px_num	src/core/lv_refr.c	/^static uint32_t px_num;$/;"	v	file:
px_size	src/draw/lv_img_buf.h	/^        uint8_t px_size;$/;"	m	struct:__anon66::__anon69
pxi	src/draw/lv_img_buf.h	/^        uint32_t pxi;$/;"	m	struct:__anon66::__anon69
pxp_cfg	src/gpu/lv_gpu_nxp_pxp.c	/^static lv_nxp_pxp_cfg_t pxp_cfg;$/;"	v	file:
pxp_default_cfg	src/gpu/lv_gpu_nxp_pxp_osa.c	/^lv_nxp_pxp_cfg_t pxp_default_cfg = {$/;"	v
pxp_interrupt_deinit	src/gpu/lv_gpu_nxp_pxp.h	/^    void (*pxp_interrupt_deinit)(void);$/;"	m	struct:__anon148
pxp_interrupt_init	src/gpu/lv_gpu_nxp_pxp.h	/^    lv_res_t (*pxp_interrupt_init)(void);$/;"	m	struct:__anon148
pxp_run	src/gpu/lv_gpu_nxp_pxp.h	/^    void (*pxp_run)(void);$/;"	m	struct:__anon148
quarter_draw_dsc_t	src/draw/lv_draw_arc.c	/^} quarter_draw_dsc_t;$/;"	t	typeref:struct:__anon60	file:
r_mod	src/extra/widgets/meter/lv_meter.h	/^            int16_t r_mod;$/;"	m	struct:__anon125::__anon126::__anon128
r_mod	src/extra/widgets/meter/lv_meter.h	/^            int16_t r_mod;$/;"	m	struct:__anon125::__anon126::__anon129
r_mod	src/extra/widgets/meter/lv_meter.h	/^    int16_t r_mod;$/;"	m	struct:__anon123
radius	src/core/lv_obj_draw.h	/^    lv_coord_t radius;                  \/**< E.g. the radius of an arc (not the corner radius).*\/$/;"	m	struct:__anon199
radius	src/draw/lv_draw_arc.c	/^    lv_coord_t radius;$/;"	m	struct:__anon60	file:
radius	src/draw/lv_draw_mask.h	/^        lv_coord_t radius;$/;"	m	struct:__anon81::__anon82
radius	src/draw/lv_draw_rect.h	/^    lv_coord_t radius;$/;"	m	struct:__anon86
radius_circle	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t radius_circle;$/;"	m	struct:__anon101	file:
range_length	src/font/lv_font_fmt_txt.h	/^    uint16_t range_length;$/;"	m	struct:__anon48
range_length	src/font/lv_font_loader.c	/^    uint16_t range_length;$/;"	m	struct:cmap_table_bin	file:
range_max	src/extra/widgets/spinbox/lv_spinbox.h	/^    int32_t range_max;$/;"	m	struct:__anon139
range_min	src/extra/widgets/spinbox/lv_spinbox.h	/^    int32_t range_min;$/;"	m	struct:__anon139
range_start	src/font/lv_font_fmt_txt.h	/^    uint32_t range_start;$/;"	m	struct:__anon48
range_start	src/font/lv_font_loader.c	/^    uint32_t range_start;$/;"	m	struct:cmap_table_bin	file:
raw_end	src/draw/lv_draw_line.h	/^    uint8_t raw_end     : 1;    \/*Do not bother with perpendicular line ending is it's not visible for any reason*\/$/;"	m	struct:__anon71
read_bits	src/font/lv_font_loader.c	/^static unsigned int read_bits(bit_iterator_t * it, int n_bits, lv_fs_res_t * res)$/;"	f	file:
read_bits_signed	src/font/lv_font_loader.c	/^static int read_bits_signed(bit_iterator_t * it, int n_bits, lv_fs_res_t * res)$/;"	f	file:
read_cb	src/hal/lv_hal_indev.h	/^    void (*read_cb)(struct _lv_indev_drv_t * indev_drv, lv_indev_data_t * data);$/;"	m	struct:_lv_indev_drv_t
read_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*read_cb)(struct _lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br);$/;"	m	struct:_lv_fs_drv_t
read_cb	tests/lv_test_main.c	/^static lv_fs_res_t read_cb(lv_fs_drv_t * drv, void * file_p, void * buf, uint32_t btr, uint32_t * br)$/;"	f	file:
read_label	src/font/lv_font_loader.c	/^static int read_label(lv_fs_file_t * fp, int start, const char * label)$/;"	f	file:
read_line_cb	src/draw/lv_img_decoder.h	/^    lv_img_decoder_read_line_f_t read_line_cb;$/;"	m	struct:_lv_img_decoder_t
read_png_file	tests/lv_test_assert.c	/^static void read_png_file(png_img_t * p, const char* file_name)$/;"	f	file:
read_timer	src/hal/lv_hal_indev.h	/^    lv_timer_t * read_timer;$/;"	m	struct:_lv_indev_drv_t
ready_cb	src/misc/lv_anim.h	/^    lv_anim_ready_cb_t ready_cb;         \/**< Call it when the animation is ready*\/$/;"	m	struct:_lv_anim_t
ready_cb	src/misc/lv_fs.h	/^    bool (*ready_cb)(struct _lv_fs_drv_t * drv);$/;"	m	struct:_lv_fs_drv_t
recolor	src/draw/lv_draw_img.h	/^    lv_color_t recolor;$/;"	m	struct:__anon87
recolor	src/extra/widgets/colorwheel/lv_colorwheel.h	/^        uint8_t recolor     : 1;$/;"	m	struct:__anon112::__anon113
recolor	src/gpu/lv_gpu_nxp_pxp.c	/^static lv_color_t recolor = {.full = 0x0};$/;"	v	file:
recolor	src/widgets/lv_label.h	/^    uint8_t recolor : 1;                \/*Enable in-line letter re-coloring*\/$/;"	m	struct:__anon168
recolorEnabled	src/gpu/lv_gpu_nxp_pxp.c	/^static bool recolorEnabled = false;$/;"	v	file:
recolorOpa	src/gpu/lv_gpu_nxp_pxp.c	/^static lv_opa_t recolorOpa = 0x0;$/;"	v	file:
recolor_opa	src/draw/lv_draw_img.h	/^    lv_opa_t recolor_opa;$/;"	m	struct:__anon87
rect	src/draw/lv_draw_mask.h	/^        lv_area_t rect;$/;"	m	struct:__anon81::__anon82
rect_dsc	src/core/lv_obj_draw.h	/^    lv_draw_rect_dsc_t * rect_dsc;      \/**< A draw descriptor that can be modified to changed what LVGL will draw. Set only for rectangle-like parts*\/$/;"	m	struct:__anon199
red	src/misc/lv_color.h	/^        uint16_t red : 5;$/;"	m	struct:__anon35::__anon36
red	src/misc/lv_color.h	/^        uint8_t red : 3;$/;"	m	struct:__anon33::__anon34
red	src/misc/lv_color.h	/^        uint8_t red;$/;"	m	struct:__anon37::__anon38
red_slider	examples/widgets/img/lv_example_img_2.c	/^static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;$/;"	v	file:
refocus_policy	src/core/lv_group.h	/^    uint8_t refocus_policy : 1; \/**< 1: Focus prev if focused on deletion. 0: Focus next if focused on$/;"	m	struct:_lv_group_t
refr_cursor_area	src/widgets/lv_textarea.c	/^static void refr_cursor_area(lv_obj_t * obj)$/;"	f	file:
refr_img	src/extra/widgets/imgbtn/lv_imgbtn.c	/^static void refr_img(lv_obj_t * obj)$/;"	f	file:
refr_knob_pos	src/extra/widgets/colorwheel/lv_colorwheel.c	/^static void refr_knob_pos(lv_obj_t * obj)$/;"	f	file:
refr_position	src/widgets/lv_roller.c	/^static void refr_position(lv_obj_t * obj, lv_anim_enable_t anim_en)$/;"	f	file:
refr_size	src/widgets/lv_table.c	/^static void refr_size(lv_obj_t * obj, uint32_t strat_row)$/;"	f	file:
refr_timer	src/hal/lv_hal_disp.h	/^    lv_timer_t * refr_timer;$/;"	m	struct:_lv_disp_t
refresh_children_style	src/core/lv_obj_style.c	/^static void refresh_children_style(lv_obj_t * obj)$/;"	f	file:
release_handler	src/widgets/lv_roller.c	/^static lv_res_t release_handler(lv_obj_t * obj)$/;"	f	file:
remove_free_block	src/misc/lv_tlsf.c	/^static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)$/;"	f	file:
repeat_cnt	src/misc/lv_anim.h	/^    uint16_t repeat_cnt;         \/**< Repeat count for the animation*\/$/;"	m	struct:_lv_anim_t
repeat_count	src/misc/lv_timer.h	/^    int32_t repeat_count; \/**< 1: One time;  -1 : infinity;  n>0: residual times*\/$/;"	m	struct:_lv_timer_t
repeat_delay	src/misc/lv_anim.h	/^    uint32_t repeat_delay;       \/**< Wait before repeat*\/$/;"	m	struct:_lv_anim_t
report_style_change_core	src/core/lv_obj_style.c	/^static void report_style_change_core(void * style, lv_obj_t * obj)$/;"	f	file:
res	src/core/lv_event.h	/^    bool res;                   \/**< true: `point` can click the object; false: it cannot*\/$/;"	m	struct:__anon192
res	src/core/lv_event.h	/^    lv_cover_res_t res;$/;"	m	struct:__anon193
res	src/draw/lv_img_buf.h	/^    } res;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon68
reserved	src/draw/lv_img_buf.h	/^    uint32_t reserved : 2; \/*Reserved to be used later*\/$/;"	m	struct:__anon63
reserved	src/draw/lv_img_buf.h	/^    uint32_t reserved : 2; \/*Reserved to be used later*\/$/;"	m	struct:__anon64
reset_query	src/hal/lv_hal_indev.h	/^    uint8_t reset_query : 1;$/;"	m	struct:_lv_indev_proc_t
rev	src/extra/layouts/flex/lv_flex.c	/^    uint8_t rev :1;$/;"	m	struct:__anon140	file:
right_class_cnt	src/font/lv_font_fmt_txt.h	/^    uint8_t right_class_cnt;$/;"	m	struct:__anon50
right_class_mapping	src/font/lv_font_fmt_txt.h	/^    const uint8_t * right_class_mapping;  \/*Map the glyph_ids to classes: index -> glyph_id -> class_id*\/$/;"	m	struct:__anon50
right_knob_area	src/widgets/lv_slider.h	/^    lv_area_t right_knob_area;$/;"	m	struct:__anon158
rle_bpp	src/font/lv_font_fmt_txt.c	/^    static uint8_t rle_bpp;$/;"	v	file:
rle_cnt	src/font/lv_font_fmt_txt.c	/^    static uint8_t rle_cnt;$/;"	v	file:
rle_in	src/font/lv_font_fmt_txt.c	/^    static const uint8_t * rle_in;$/;"	v	file:
rle_init	src/font/lv_font_fmt_txt.c	/^static inline void rle_init(const uint8_t * in,  uint8_t bpp)$/;"	f	file:
rle_next	src/font/lv_font_fmt_txt.c	/^static inline uint8_t rle_next(void)$/;"	f	file:
rle_prev_v	src/font/lv_font_fmt_txt.c	/^    static uint8_t rle_prev_v;$/;"	v	file:
rle_rdp	src/font/lv_font_fmt_txt.c	/^    static uint32_t rle_rdp;$/;"	v	file:
rle_state	src/font/lv_font_fmt_txt.c	/^    static rle_state_t rle_state;$/;"	v	file:
rle_state_t	src/font/lv_font_fmt_txt.c	/^} rle_state_t;$/;"	t	typeref:enum:__anon55	file:
rollover	src/extra/widgets/spinbox/lv_spinbox.h	/^    uint16_t rollover : 1;   \/\/ Set to true for rollover functionality$/;"	m	struct:__anon139
rotated	src/hal/lv_hal_disp.h	/^    uint32_t rotated : 2;            \/**< 1: turn the display by 90 degree. @warning Does not update coordinates for you!*\/$/;"	m	struct:_lv_disp_drv_t
rotation	src/extra/widgets/meter/lv_meter.h	/^    int16_t rotation;$/;"	m	struct:__anon123
rotation	src/widgets/lv_arc.h	/^    uint16_t rotation;$/;"	m	struct:__anon166
round_end	src/draw/lv_draw_line.h	/^    uint8_t round_end   : 1;$/;"	m	struct:__anon71
round_start	src/draw/lv_draw_line.h	/^    uint8_t round_start : 1;$/;"	m	struct:__anon71
rounded	src/draw/lv_draw_arc.h	/^    uint8_t rounded : 1;$/;"	m	struct:__anon61
rounder_cb	src/hal/lv_hal_disp.h	/^    void (*rounder_cb)(struct _lv_disp_drv_t * disp_drv, lv_area_t * area);$/;"	m	struct:_lv_disp_drv_t
row	src/extra/layouts/flex/lv_flex.c	/^    uint8_t row :1;$/;"	m	struct:__anon140	file:
row	src/extra/layouts/grid/lv_grid.c	/^    uint32_t row;$/;"	m	struct:__anon145	file:
row_act	src/widgets/lv_table.h	/^    uint16_t row_act;$/;"	m	struct:__anon151
row_cnt	src/widgets/lv_table.h	/^    uint16_t row_cnt;$/;"	m	struct:__anon151
row_gap_anim	examples/layouts/flex/lv_example_flex_5.c	/^static void row_gap_anim(void * obj, int32_t v)$/;"	f	file:
row_gap_anim	examples/layouts/grid/lv_example_grid_5.c	/^static void row_gap_anim(void * obj, int32_t v)$/;"	f	file:
row_h	src/widgets/lv_table.h	/^    lv_coord_t * row_h;$/;"	m	struct:__anon151
row_num	src/extra/layouts/grid/lv_grid.c	/^    uint32_t row_num;$/;"	m	struct:__anon146	file:
row_pointers	tests/lv_test_assert.c	/^    png_bytep * row_pointers;$/;"	m	struct:__anon201	file:
rtl_reverse	src/misc/lv_bidi.c	/^static void rtl_reverse(char * dest, const char * src, uint32_t len, uint16_t * pos_conv_out, uint16_t pos_conv_rd_base,$/;"	f	file:
run_round	src/misc/lv_anim.h	/^    uint8_t run_round : 1;    \/**< Indicates the animation has run in this round*\/$/;"	m	struct:_lv_anim_t
s	src/misc/lv_color.h	/^    uint8_t s;$/;"	m	struct:__anon39
s_pxpIdle	src/gpu/lv_gpu_nxp_pxp_osa.c	/^    static SemaphoreHandle_t s_pxpIdle;$/;"	v	file:
s_pxpIdle	src/gpu/lv_gpu_nxp_pxp_osa.c	/^    static volatile bool s_pxpIdle;$/;"	v	file:
scale	src/extra/widgets/meter/lv_meter.h	/^    lv_meter_scale_t * scale;$/;"	m	struct:__anon125
scale_lines	src/extra/widgets/meter/lv_meter.h	/^        }scale_lines;$/;"	m	union:__anon125::__anon126	typeref:struct:__anon125::__anon126::__anon130
scale_ll	src/extra/widgets/meter/lv_meter.h	/^    lv_ll_t scale_ll;$/;"	m	struct:__anon131
scr	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t scr;$/;"	m	struct:__anon97	file:
scr	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t scr;$/;"	m	struct:__anon98	file:
scr	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t scr;$/;"	m	struct:__anon101	file:
scr_anim_ready	src/core/lv_disp.c	/^static void scr_anim_ready(lv_anim_t * a)$/;"	f	file:
scr_layout_inv	src/core/lv_obj.h	/^    uint16_t scr_layout_inv :1;$/;"	m	struct:_lv_obj_t
scr_load_anim_start	src/core/lv_disp.c	/^static void scr_load_anim_start(lv_anim_t * a)$/;"	f	file:
scr_to_load	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t * scr_to_load; \/**< The screen prepared to load in lv_scr_load_anim*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
screen_cnt	src/hal/lv_hal_disp.h	/^    uint32_t screen_cnt;$/;"	m	struct:_lv_disp_t
screen_transp	src/hal/lv_hal_disp.h	/^    uint32_t screen_transp : 1;      \/**Handle if the screen doesn't have a solid (opa == LV_OPA_COVER) background.$/;"	m	struct:_lv_disp_drv_t
screens	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t ** screens;    \/**< Array of screen objects.*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
scroll	src/core/lv_obj.h	/^    lv_point_t scroll;                      \/**< The current X\/Y scroll offset*\/$/;"	m	struct:__anon186
scroll_anim_ready_cb	src/core/lv_obj_scroll.c	/^static void scroll_anim_ready_cb(lv_anim_t * a)$/;"	f	file:
scroll_anim_ready_cb	src/widgets/lv_roller.c	/^static void scroll_anim_ready_cb(lv_anim_t * a)$/;"	f	file:
scroll_area	src/hal/lv_hal_indev.h	/^            lv_area_t scroll_area;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
scroll_area_into_view	src/core/lv_obj_scroll.c	/^static void scroll_area_into_view(const lv_area_t * area, lv_obj_t * child, lv_point_t * scroll_value, lv_anim_enable_t anim_en)$/;"	f	file:
scroll_begin_event	examples/widgets/tabview/lv_example_tabview_2.c	/^static void scroll_begin_event(lv_event_t * e)$/;"	f	file:
scroll_by_raw	src/core/lv_obj_scroll.c	/^static void scroll_by_raw(lv_obj_t * obj, lv_coord_t x, lv_coord_t y)$/;"	f	file:
scroll_dir	src/core/lv_obj.h	/^    lv_dir_t scroll_dir :4;                \/**< The allowed scroll direction(s)*\/$/;"	m	struct:__anon186
scroll_dir	src/hal/lv_hal_indev.h	/^            lv_dir_t scroll_dir : 4;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
scroll_event_cb	examples/scroll/lv_example_scroll_6.c	/^static void scroll_event_cb(lv_event_t * e)$/;"	f	file:
scroll_limit	src/hal/lv_hal_indev.h	/^    uint8_t scroll_limit;$/;"	m	struct:_lv_indev_drv_t
scroll_limit_diff	src/core/lv_indev_scroll.c	/^static void scroll_limit_diff(_lv_indev_proc_t * proc, lv_coord_t * diff_x, lv_coord_t * diff_y)$/;"	f	file:
scroll_obj	src/hal/lv_hal_indev.h	/^            struct _lv_obj_t * scroll_obj;   \/*The object being scrolled*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94	typeref:struct:_lv_indev_proc_t::__anon93::__anon94::_lv_obj_t
scroll_snap_x	src/core/lv_obj.h	/^    lv_scroll_snap_t scroll_snap_x : 2;      \/**< Where to align the snapable children horizontally*\/$/;"	m	struct:__anon186
scroll_snap_y	src/core/lv_obj.h	/^    lv_scroll_snap_t scroll_snap_y : 2;      \/**< Where to align the snapable children horizontally*\/$/;"	m	struct:__anon186
scroll_sum	src/hal/lv_hal_indev.h	/^            lv_point_t scroll_sum; \/*Count the dragged pixels to check LV_INDEV_DEF_SCROLL_LIMIT*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
scroll_throw	src/hal/lv_hal_indev.h	/^    uint8_t scroll_throw;$/;"	m	struct:_lv_indev_drv_t
scroll_throw_predict_x	src/core/lv_indev_scroll.c	/^static lv_coord_t scroll_throw_predict_x(_lv_indev_proc_t * proc)$/;"	f	file:
scroll_throw_predict_y	src/core/lv_indev_scroll.c	/^static lv_coord_t scroll_throw_predict_y(_lv_indev_proc_t * proc)$/;"	f	file:
scroll_throw_vect	src/hal/lv_hal_indev.h	/^            lv_point_t scroll_throw_vect;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
scroll_throw_vect_ori	src/hal/lv_hal_indev.h	/^            lv_point_t scroll_throw_vect_ori;$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
scroll_x_anim	src/core/lv_obj_scroll.c	/^static void scroll_x_anim(void * obj, int32_t v)$/;"	f	file:
scroll_y_anim	src/core/lv_obj_scroll.c	/^static void scroll_y_anim(void * obj, int32_t v)$/;"	f	file:
scrollbar	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t scrollbar;$/;"	m	struct:__anon97	file:
scrollbar	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t scrollbar;$/;"	m	struct:__anon98	file:
scrollbar	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t scrollbar;$/;"	m	struct:__anon101	file:
scrollbar_init_draw_dsc	src/core/lv_obj.c	/^static lv_res_t scrollbar_init_draw_dsc(lv_obj_t * obj, lv_draw_rect_dsc_t * dsc)$/;"	f	file:
scrollbar_mode	src/core/lv_obj.h	/^    lv_scrollbar_mode_t scrollbar_mode :2; \/**< How to display scrollbars*\/$/;"	m	struct:__anon186
scrollbar_scrolled	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t scrollbar_scrolled;$/;"	m	struct:__anon98	file:
search_suitable_block	src/misc/lv_tlsf.c	/^static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)$/;"	f	file:
seek_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*seek_cb)(struct _lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t whence);$/;"	m	struct:_lv_fs_drv_t
seek_cb	tests/lv_test_main.c	/^static lv_fs_res_t seek_cb(lv_fs_drv_t * drv, void * file_p, uint32_t pos, lv_fs_whence_t w)$/;"	f	file:
sel_bg_color	src/draw/lv_draw_label.h	/^    lv_color_t sel_bg_color;$/;"	m	struct:__anon58
sel_color	src/draw/lv_draw_label.h	/^    lv_color_t sel_color;$/;"	m	struct:__anon58
sel_end	src/draw/lv_draw_label.h	/^    uint32_t sel_end;$/;"	m	struct:__anon58
sel_end	src/widgets/lv_label.h	/^    uint32_t sel_start; uint32_t sel_end;$/;"	m	struct:__anon168
sel_end	src/widgets/lv_textarea.h	/^    uint32_t sel_end;$/;"	m	struct:__anon160
sel_opt_id	src/widgets/lv_dropdown.h	/^    uint16_t sel_opt_id;            \/**< Index of the currently selected option*\/$/;"	m	struct:__anon172
sel_opt_id	src/widgets/lv_roller.h	/^  uint16_t sel_opt_id;          \/**< Index of the current option*\/$/;"	m	struct:__anon154
sel_opt_id_ori	src/widgets/lv_roller.h	/^  uint16_t sel_opt_id_ori;      \/**< Store the original index on focus*\/$/;"	m	struct:__anon154
sel_opt_id_orig	src/widgets/lv_dropdown.h	/^    uint16_t sel_opt_id_orig;       \/**< Store the original index on focus*\/$/;"	m	struct:__anon172
sel_start	src/draw/lv_draw_label.h	/^    uint32_t sel_start;$/;"	m	struct:__anon58
sel_start	src/widgets/lv_label.h	/^    uint32_t sel_start; uint32_t sel_end;$/;"	m	struct:__anon168
sel_start	src/widgets/lv_textarea.h	/^    uint32_t sel_start;  \/*Temporary values for text selection*\/$/;"	m	struct:__anon160
selected_highlight	src/widgets/lv_dropdown.h	/^    uint8_t selected_highlight:1;   \/**< 1: Make the selected option highlighted in the list*\/$/;"	m	struct:__anon172
selector	src/core/lv_obj_style.c	/^    lv_style_selector_t selector;$/;"	m	struct:__anon187	file:
selector	src/core/lv_obj_style.h	/^    lv_style_selector_t selector;$/;"	m	struct:__anon197
selector	src/core/lv_obj_style.h	/^    uint32_t selector :24;$/;"	m	struct:__anon196
sentinel	src/misc/lv_style.h	/^    uint32_t sentinel;$/;"	m	struct:__anon20
ser	examples/widgets/chart/lv_example_chart_6.c	/^static lv_chart_series_t * ser;$/;"	v	file:
ser	src/extra/widgets/chart/lv_chart.h	/^    lv_chart_series_t * ser;$/;"	m	struct:__anon108
ser1	examples/widgets/chart/lv_example_chart_2.c	/^static lv_chart_series_t * ser1;$/;"	v	file:
ser2	examples/widgets/chart/lv_example_chart_2.c	/^static lv_chart_series_t * ser2;$/;"	v	file:
series_ll	src/extra/widgets/chart/lv_chart.h	/^    lv_ll_t series_ll;     \/**< Linked list for the series (stores lv_chart_series_t)*\/$/;"	m	struct:__anon110
set_angle	examples/widgets/arc/lv_example_arc_2.c	/^static void set_angle(void * obj, int32_t v)$/;"	f	file:
set_angle	examples/widgets/img/lv_example_img_3.c	/^static void set_angle(void * img, int32_t v)$/;"	f	file:
set_ofs_x_anim	src/widgets/lv_label.c	/^static void set_ofs_x_anim(void * obj, int32_t v)$/;"	f	file:
set_ofs_y_anim	src/widgets/lv_label.c	/^static void set_ofs_y_anim(void * obj, int32_t v)$/;"	f	file:
set_px_alpha_generic	src/widgets/lv_canvas.c	/^static void set_px_alpha_generic(lv_img_dsc_t * d, lv_coord_t x, lv_coord_t y, lv_color_t color, lv_opa_t opa)$/;"	f	file:
set_px_cb	src/hal/lv_hal_disp.h	/^    void (*set_px_cb)(struct _lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,$/;"	m	struct:_lv_disp_drv_t
set_px_cb_alpha1	src/widgets/lv_canvas.c	/^static void set_px_cb_alpha1(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,$/;"	f	file:
set_px_cb_alpha2	src/widgets/lv_canvas.c	/^static void set_px_cb_alpha2(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,$/;"	f	file:
set_px_cb_alpha4	src/widgets/lv_canvas.c	/^static void set_px_cb_alpha4(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,$/;"	f	file:
set_px_cb_alpha8	src/widgets/lv_canvas.c	/^static void set_px_cb_alpha8(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x, lv_coord_t y,$/;"	f	file:
set_px_true_color_alpha	src/widgets/lv_canvas.c	/^static void set_px_true_color_alpha(lv_disp_drv_t * disp_drv, uint8_t * buf, lv_coord_t buf_w, lv_coord_t x,$/;"	f	file:
set_set_px_cb	src/widgets/lv_canvas.c	/^static void set_set_px_cb(lv_disp_drv_t * disp_drv, lv_img_cf_t cf)$/;"	f	file:
set_temp	examples/widgets/bar/lv_example_bar_3.c	/^static void set_temp(void * bar, int32_t temp)$/;"	f	file:
set_value	examples/widgets/bar/lv_example_bar_6.c	/^static void set_value(void *bar, int32_t v)$/;"	f	file:
set_value	examples/widgets/meter/lv_example_meter_1.c	/^static void set_value(void * indic, int32_t v)$/;"	f	file:
set_value	examples/widgets/meter/lv_example_meter_2.c	/^static void set_value(void * indic, int32_t v)$/;"	f	file:
set_value	examples/widgets/meter/lv_example_meter_3.c	/^static void set_value(void * indic, int32_t v)$/;"	f	file:
set_x_anim	src/core/lv_disp.c	/^static void set_x_anim(void * obj, int32_t v)$/;"	f	file:
set_y_anim	src/core/lv_disp.c	/^static void set_y_anim(void * obj, int32_t v)$/;"	f	file:
set_y_anim	src/widgets/lv_roller.c	/^static void set_y_anim(void * obj, int32_t v)$/;"	f	file:
set_zoom	examples/widgets/img/lv_example_img_3.c	/^static void set_zoom(void * img, int32_t v)$/;"	f	file:
sh_cache	src/draw/lv_draw_rect.c	/^    static uint8_t sh_cache[LV_SHADOW_CACHE_SIZE * LV_SHADOW_CACHE_SIZE];$/;"	v	file:
sh_cache_r	src/draw/lv_draw_rect.c	/^    static int32_t sh_cache_r = -1;$/;"	v	file:
sh_cache_size	src/draw/lv_draw_rect.c	/^    static int32_t sh_cache_size = -1;$/;"	v	file:
shadow_blur_corner	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void shadow_blur_corner(lv_coord_t size, lv_coord_t sw, uint16_t * sh_ups_buf)$/;"	f	file:
shadow_color	src/draw/lv_draw_rect.h	/^    lv_color_t shadow_color;$/;"	m	struct:__anon86
shadow_draw_corner_buf	src/draw/lv_draw_rect.c	/^LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t sw,$/;"	f	file:
shadow_ofs_x	src/draw/lv_draw_rect.h	/^    lv_coord_t shadow_ofs_x;$/;"	m	struct:__anon86
shadow_ofs_y	src/draw/lv_draw_rect.h	/^    lv_coord_t shadow_ofs_y;$/;"	m	struct:__anon86
shadow_opa	src/draw/lv_draw_rect.h	/^    lv_opa_t shadow_opa;$/;"	m	struct:__anon86
shadow_spread	src/draw/lv_draw_rect.h	/^    lv_coord_t shadow_spread;$/;"	m	struct:__anon86
shadow_width	src/draw/lv_draw_rect.h	/^    lv_coord_t shadow_width;$/;"	m	struct:__anon86
show	src/widgets/lv_textarea.h	/^        uint8_t show : 1;          \/*Cursor is visible now or not (Handled by the library)*\/$/;"	m	struct:__anon160::__anon161
show_error	src/draw/lv_draw_img.c	/^static void show_error(const lv_area_t * coords, const lv_area_t * clip_area, const char * msg)$/;"	f	file:
showed_date	src/extra/widgets/calendar/lv_calendar.h	/^    lv_calendar_date_t showed_date;         \/*Currently visible month (day is ignored)*\/$/;"	m	struct:__anon121
side	src/draw/lv_draw_mask.h	/^        lv_draw_mask_line_side_t side : 2;$/;"	m	struct:__anon77::__anon78
sin0_90_table	src/misc/lv_math.c	/^static const int16_t sin0_90_table[] = {$/;"	v	file:
sinma	src/draw/lv_img_buf.h	/^        int32_t sinma;$/;"	m	struct:__anon66::__anon69
size	src/hal/lv_hal_disp.h	/^    uint32_t size; \/*In pixel count*\/$/;"	m	struct:_lv_disp_draw_buf_t
size	src/misc/lv_mem.h	/^    uint16_t size;$/;"	m	struct:__anon24
size	src/misc/lv_tlsf.c	/^	size_t size;$/;"	m	struct:block_header_t	file:
skip_trans	src/core/lv_obj.h	/^    uint16_t skip_trans :1;$/;"	m	struct:_lv_obj_t
sl_bitmap	src/misc/lv_tlsf.c	/^	unsigned int sl_bitmap[FL_INDEX_COUNT];$/;"	m	struct:control_t	file:
slider_event_cb	examples/get_started/lv_example_get_started_3.c	/^static void slider_event_cb(lv_event_t * e)$/;"	f	file:
slider_event_cb	examples/widgets/img/lv_example_img_2.c	/^static void slider_event_cb(lv_event_t * e)$/;"	f	file:
slider_event_cb	examples/widgets/slider/lv_example_slider_1.c	/^static void slider_event_cb(lv_event_t * e)$/;"	f	file:
slider_event_cb	examples/widgets/slider/lv_example_slider_3.c	/^static void slider_event_cb(lv_event_t * e)$/;"	f	file:
slider_label	examples/widgets/slider/lv_example_slider_1.c	/^static lv_obj_t * slider_label;$/;"	v	file:
slider_x_event_cb	examples/widgets/chart/lv_example_chart_5.c	/^static void slider_x_event_cb(lv_event_t * e)$/;"	f	file:
slider_y_event_cb	examples/widgets/chart/lv_example_chart_5.c	/^static void slider_y_event_cb(lv_event_t * e)$/;"	f	file:
snippet_stack	src/extra/widgets/span/lv_span.c	/^static struct _snippet_stack snippet_stack;$/;"	v	typeref:struct:_snippet_stack	file:
span	src/extra/widgets/span/lv_span.c	/^    lv_span_t * span;$/;"	m	struct:__anon136	file:
span_text_check	src/extra/widgets/span/lv_span.c	/^static inline void span_text_check(const char ** text)$/;"	f	file:
spec_attr	src/core/lv_obj.h	/^    _lv_obj_spec_attr_t * spec_attr;$/;"	m	struct:_lv_obj_t
spinbox	examples/widgets/spinbox/lv_example_spinbox_1.c	/^static lv_obj_t * spinbox;$/;"	v	file:
spx	src/draw/lv_draw_mask.h	/^    int32_t spx;$/;"	m	struct:__anon77
sqrt_approx	src/draw/lv_draw_mask.c	/^LV_ATTRIBUTE_FAST_MEM static inline void sqrt_approx(lv_sqrt_res_t * q, lv_sqrt_res_t * ref, uint32_t x)$/;"	f	file:
src	src/draw/lv_img_buf.h	/^        const void * src;           \/*image source (array of pixels)*\/$/;"	m	struct:__anon66::__anon67
src	src/draw/lv_img_decoder.h	/^    const void * src;$/;"	m	struct:_lv_img_decoder_dsc_t
src	src/extra/widgets/meter/lv_meter.h	/^            const void * src;$/;"	m	struct:__anon125::__anon126::__anon127
src	src/extra/widgets/meter/lv_meter.h	/^            const void * src;$/;"	m	struct:__anon125::__anon126::__anon129
src	src/gpu/lv_gpu_nxp_vglite.h	/^    const lv_color_t * src;  \/**< Source buffer pointer (must be aligned on 32 bytes)*\/$/;"	m	struct:__anon149
src	src/widgets/lv_img.h	/^    const void * src; \/*Image source: Pointer to an array or a file or a symbol*\/$/;"	m	struct:__anon177
src_area	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_area_t src_area;      \/**< Area to be copied from source*\/$/;"	m	struct:__anon149
src_h	src/draw/lv_img_buf.h	/^        lv_coord_t src_h;           \/*height of the image source*\/$/;"	m	struct:__anon66::__anon67
src_height	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_coord_t src_height;   \/**< Source buffer height*\/$/;"	m	struct:__anon149
src_stride	src/gpu/lv_gpu_nxp_vglite.h	/^    uint32_t src_stride;     \/**< Source buffer stride in bytes (must be aligned on 16 px)*\/$/;"	m	struct:__anon149
src_type	src/draw/lv_img_decoder.h	/^    lv_img_src_t src_type;$/;"	m	struct:_lv_img_decoder_dsc_t
src_type	src/widgets/lv_img.h	/^    uint8_t src_type : 2;  \/*See: lv_img_src_t*\/$/;"	m	struct:__anon177
src_w	src/draw/lv_img_buf.h	/^        lv_coord_t src_w;           \/*width of the image source*\/$/;"	m	struct:__anon66::__anon67
src_width	src/gpu/lv_gpu_nxp_vglite.h	/^    lv_coord_t src_width;    \/**< Source buffer width*\/$/;"	m	struct:__anon149
stack	src/extra/widgets/span/lv_span.c	/^    lv_snippet_t    stack[LV_SPAN_SNIPPET_STACK_SIZE];$/;"	m	struct:_snippet_stack	file:
start_angle	src/draw/lv_draw_arc.c	/^    uint16_t start_angle;$/;"	m	struct:__anon60	file:
start_angle	src/draw/lv_draw_mask.h	/^        lv_coord_t start_angle;$/;"	m	struct:__anon79::__anon80
start_cb	src/misc/lv_anim.h	/^    lv_anim_start_cb_t start_cb;         \/**< Call it when the animation is starts (considering `delay`)*\/$/;"	m	struct:_lv_anim_t
start_cb_called	src/misc/lv_anim.h	/^    uint8_t start_cb_called : 1;    \/**< Indicates that the `start_cb` was already called*\/$/;"	m	struct:_lv_anim_t
start_cursor_blink	src/widgets/lv_textarea.c	/^static void start_cursor_blink(lv_obj_t * obj)$/;"	f	file:
start_line	src/draw/lv_draw_mask.h	/^    lv_draw_mask_line_param_t start_line;$/;"	m	struct:__anon79
start_point	src/extra/widgets/chart/lv_chart.h	/^    uint16_t start_point;$/;"	m	struct:__anon107
start_quarter	src/draw/lv_draw_arc.c	/^    uint16_t start_quarter;$/;"	m	struct:__anon60	file:
start_value	src/core/lv_obj_style.c	/^    lv_style_value_t start_value;$/;"	m	struct:__anon187	file:
start_value	src/extra/widgets/meter/lv_meter.h	/^    int32_t start_value;$/;"	m	struct:__anon125
start_value	src/misc/lv_anim.h	/^    int32_t start_value;               \/**< Start value*\/$/;"	m	struct:_lv_anim_t
start_value	src/widgets/lv_bar.h	/^    int32_t start_value;        \/**< Start value of the bar*\/$/;"	m	struct:__anon176
start_value_anim	src/widgets/lv_bar.h	/^    _lv_bar_anim_t start_value_anim;$/;"	m	struct:__anon176
state	src/core/lv_obj.h	/^    lv_state_t state;$/;"	m	struct:_lv_obj_t
state	src/hal/lv_hal_indev.h	/^    lv_indev_state_t state; \/**< Current state of the input device.*\/$/;"	m	struct:_lv_indev_proc_t
state	src/hal/lv_hal_indev.h	/^    lv_indev_state_t state; \/**< LV_INDEV_STATE_REL or LV_INDEV_STATE_PR*\/$/;"	m	struct:__anon92
static_flag	src/extra/widgets/span/lv_span.h	/^    uint8_t static_flag : 1;$/;"	m	struct:__anon134
static_txt	src/widgets/lv_checkbox.h	/^    uint32_t static_txt :1;$/;"	m	struct:__anon152
static_txt	src/widgets/lv_dropdown.h	/^    uint8_t static_txt        :1;   \/**< 1: Only a pointer is saved in `options`*\/$/;"	m	struct:__anon172
static_txt	src/widgets/lv_label.h	/^    uint8_t static_txt : 1;             \/*Flag to indicate the text is static*\/$/;"	m	struct:__anon168
status	src/misc/lv_tlsf.c	/^	int status;$/;"	m	struct:integrity_t	file:
steep	src/draw/lv_draw_mask.h	/^    int32_t steep;$/;"	m	struct:__anon77
step	src/extra/widgets/spinbox/lv_spinbox.h	/^    int32_t step;$/;"	m	struct:__anon139
style	src/core/lv_obj_style.h	/^    lv_style_t * style;$/;"	m	struct:__anon196
style	src/extra/widgets/span/lv_span.h	/^    lv_style_t style;$/;"	m	struct:__anon134
style_btn	examples/get_started/lv_example_get_started_2.c	/^static lv_style_t style_btn;$/;"	v	file:
style_btn	examples/styles/lv_example_style_14.c	/^static lv_style_t style_btn;$/;"	v	file:
style_btn_pressed	examples/get_started/lv_example_get_started_2.c	/^static lv_style_t style_btn_pressed;$/;"	v	file:
style_btn_red	examples/get_started/lv_example_get_started_2.c	/^static lv_style_t style_btn_red;$/;"	v	file:
style_cnt	src/core/lv_obj.h	/^    uint16_t style_cnt  :6;$/;"	m	struct:_lv_obj_t
style_init	examples/get_started/lv_example_get_started_2.c	/^static void style_init(void)$/;"	f	file:
style_init	src/extra/themes/basic/lv_theme_basic.c	/^static void style_init(void)$/;"	f	file:
style_init	src/extra/themes/default/lv_theme_default.c	/^static void style_init(void)$/;"	f	file:
style_init	src/extra/themes/mono/lv_theme_mono.c	/^static void style_init(bool dark_bg, const lv_font_t * font)$/;"	f	file:
style_init_reset	src/extra/themes/basic/lv_theme_basic.c	/^static void style_init_reset(lv_style_t * style)$/;"	f	file:
style_init_reset	src/extra/themes/default/lv_theme_default.c	/^static void style_init_reset(lv_style_t * style)$/;"	f	file:
style_init_reset	src/extra/themes/mono/lv_theme_mono.c	/^static void style_init_reset(lv_style_t * style)$/;"	f	file:
style_refr	src/core/lv_obj_style.c	/^static bool style_refr = true;$/;"	v	file:
styles	src/core/lv_obj.h	/^    _lv_obj_style_t * styles;$/;"	m	struct:_lv_obj_t
styles	src/extra/themes/basic/lv_theme_basic.c	/^static my_theme_styles_t * styles;$/;"	v	file:
styles	src/extra/themes/default/lv_theme_default.c	/^static my_theme_styles_t * styles;$/;"	v	file:
styles	src/extra/themes/mono/lv_theme_mono.c	/^static my_theme_styles_t * styles;$/;"	v	file:
sub_part_ptr	src/core/lv_obj_draw.h	/^    const void * sub_part_ptr;          \/**< A pointer the identifies something in the part. E.g. chart series. *\/$/;"	m	struct:__anon199
subpixels_mode	src/font/lv_font_loader.c	/^    uint8_t subpixels_mode;$/;"	m	struct:font_header_bin	file:
subpx	src/font/lv_font.h	/^    uint8_t subpx  : 2;             \/**< An element of `lv_font_subpx_t`*\/$/;"	m	struct:_lv_font_t
suggest_state	src/extra/widgets/imgbtn/lv_imgbtn.c	/^static lv_imgbtn_state_t suggest_state(lv_obj_t * obj, lv_imgbtn_state_t state)$/;"	f	file:
sw_event_cb	examples/anim/lv_example_anim_1.c	/^static void sw_event_cb(lv_event_t * e)$/;"	f	file:
sw_event_cb	examples/scroll/lv_example_scroll_2.c	/^static void sw_event_cb(lv_event_t * e)$/;"	f	file:
sw_rotate	src/hal/lv_hal_disp.h	/^    uint32_t sw_rotate : 1;          \/**< 1: use software rotation (slower)*\/$/;"	m	struct:_lv_disp_drv_t
switch_knob	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t switch_knob;$/;"	m	struct:__anon98	file:
symbol	src/widgets/lv_dropdown.h	/^    const void * symbol;            \/**< Arrow or other icon when the drop-down list is closed*\/$/;"	m	struct:__anon172
sys_layer	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t * sys_layer;   \/**< @see lv_disp_get_layer_sys*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
sys_time	src/hal/lv_hal_tick.c	/^static uint32_t sys_time = 0;$/;"	v	file:
ta	src/extra/widgets/keyboard/lv_keyboard.h	/^    lv_obj_t * ta;              \/*Pointer to the assigned text area*\/$/;"	m	struct:__anon138
ta	src/extra/widgets/spinbox/lv_spinbox.h	/^    lv_textarea_t ta;   \/*Ext. of ancestor*\/$/;"	m	struct:__anon139
ta_cursor	src/extra/themes/basic/lv_theme_basic.c	/^    lv_style_t ta_cursor;$/;"	m	struct:__anon97	file:
ta_cursor	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t ta_cursor, ta_placeholder;$/;"	m	struct:__anon98	file:
ta_cursor	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t ta_cursor;$/;"	m	struct:__anon101	file:
ta_event_cb	examples/widgets/keyboard/lv_example_keyboard_1.c	/^static void ta_event_cb(lv_event_t * e)$/;"	f	file:
ta_event_cb	examples/widgets/textarea/lv_example_textarea_2.c	/^static void ta_event_cb(lv_event_t * e)$/;"	f	file:
ta_event_cb	examples/widgets/textarea/lv_example_textarea_3.c	/^static void ta_event_cb(lv_event_t * e)$/;"	f	file:
ta_insert_replace	src/widgets/lv_textarea.c	/^static const char * ta_insert_replace;$/;"	v	file:
ta_placeholder	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t ta_cursor, ta_placeholder;$/;"	m	struct:__anon98	file:
tab_bg_focus	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t tab_bg_focus, tab_btn;$/;"	m	struct:__anon98	file:
tab_btn	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t tab_bg_focus, tab_btn;$/;"	m	struct:__anon98	file:
tab_cnt	src/extra/widgets/tabview/lv_tabview.h	/^    uint16_t tab_cnt;$/;"	m	struct:__anon117
tab_cur	src/extra/widgets/tabview/lv_tabview.h	/^    uint16_t tab_cur;$/;"	m	struct:__anon117
tab_pos	src/extra/widgets/tabview/lv_tabview.h	/^    lv_dir_t tab_pos;$/;"	m	struct:__anon117
table_cell	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t table_cell;$/;"	m	struct:__anon98	file:
tables_count	src/font/lv_font_loader.c	/^    uint16_t tables_count;$/;"	m	struct:font_header_bin	file:
tabpos_create	src/extra/widgets/tabview/lv_tabview.c	/^static lv_dir_t tabpos_create;$/;"	v	file:
tabsize_create	src/extra/widgets/tabview/lv_tabview.c	/^static lv_coord_t tabsize_create;$/;"	v	file:
tail	src/misc/lv_ll.h	/^    lv_ll_node_t * tail;$/;"	m	struct:__anon10
target	src/core/lv_event.h	/^    struct _lv_obj_t * target;$/;"	m	struct:_lv_event_t	typeref:struct:_lv_event_t::_lv_obj_t
tell_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*tell_cb)(struct _lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p);$/;"	m	struct:_lv_fs_drv_t
tell_cb	tests/lv_test_main.c	/^static lv_fs_res_t tell_cb(lv_fs_drv_t * drv, void * file_p, uint32_t * pos_p)$/;"	f	file:
test_fb	tests/lv_test_main.c	/^lv_color_t test_fb[HOR_RES * VER_RES];$/;"	v
test_ffs_fls	src/misc/lv_tlsf.c	/^int test_ffs_fls()$/;"	f
text	src/core/lv_obj_draw.h	/^    char text[16];                      \/**< A text calculated during drawing. Can be modified. E.g. tick labels on a chart axis.*\/$/;"	m	struct:__anon199
text	src/widgets/lv_dropdown.h	/^    const char * text;              \/**< Text to display on the dropdown's button*\/$/;"	m	struct:__anon172
text	src/widgets/lv_label.h	/^    char * text;$/;"	m	struct:__anon168
text_align_center	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t text_align_center;$/;"	m	struct:__anon98	file:
text_sel_en	src/widgets/lv_textarea.h	/^    uint8_t text_sel_en : 1;      \/*Text can be selected on this text area*\/$/;"	m	struct:__anon160
text_sel_in_prog	src/widgets/lv_textarea.h	/^    uint8_t text_sel_in_prog : 1; \/*User is in process of selecting*\/$/;"	m	struct:__anon160
textarea_event_handler	examples/widgets/textarea/lv_example_textarea_1.c	/^static void textarea_event_handler(lv_event_t * e)$/;"	f	file:
theme	src/extra/themes/basic/lv_theme_basic.c	/^static lv_theme_t theme;$/;"	v	file:
theme	src/extra/themes/default/lv_theme_default.c	/^static lv_theme_t theme;$/;"	v	file:
theme	src/extra/themes/mono/lv_theme_mono.c	/^static lv_theme_t theme;$/;"	v	file:
theme	src/hal/lv_hal_disp.h	/^    struct _lv_theme_t * theme;$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_theme_t
theme_apply	src/extra/themes/basic/lv_theme_basic.c	/^static void theme_apply(lv_theme_t * th, lv_obj_t * obj)$/;"	f	file:
theme_apply	src/extra/themes/default/lv_theme_default.c	/^static void theme_apply(lv_theme_t * th, lv_obj_t * obj)$/;"	f	file:
theme_apply	src/extra/themes/mono/lv_theme_mono.c	/^static void theme_apply(lv_theme_t * th, lv_obj_t * obj)$/;"	f	file:
tick	src/extra/widgets/chart/lv_chart.h	/^    lv_chart_tick_dsc_t tick[4];$/;"	m	struct:__anon110
tick_cnt	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_cnt;$/;"	m	struct:__anon123
tick_color	src/extra/widgets/meter/lv_meter.h	/^    lv_color_t tick_color;$/;"	m	struct:__anon123
tick_irq_flag	src/hal/lv_hal_tick.c	/^static volatile uint8_t tick_irq_flag;$/;"	v	file:
tick_length	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_length;$/;"	m	struct:__anon123
tick_major_color	src/extra/widgets/meter/lv_meter.h	/^    lv_color_t tick_major_color;$/;"	m	struct:__anon123
tick_major_length	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_major_length;$/;"	m	struct:__anon123
tick_major_nth	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_major_nth;$/;"	m	struct:__anon123
tick_major_width	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_major_width;$/;"	m	struct:__anon123
tick_width	src/extra/widgets/meter/lv_meter.h	/^    uint16_t tick_width;$/;"	m	struct:__anon123
tile_act	src/extra/widgets/tileview/lv_tileview.h	/^    lv_obj_t * tile_act;$/;"	m	struct:__anon115
tileview_event_cb	src/extra/widgets/tileview/lv_tileview.c	/^static void tileview_event_cb(lv_event_t * e)$/;"	f	file:
time	src/core/lv_obj_style.h	/^    uint16_t time;$/;"	m	struct:__anon197
time	src/misc/lv_anim.h	/^    int32_t time;                \/**< Animation time in ms*\/$/;"	m	struct:_lv_anim_t
time	src/misc/lv_style.h	/^    uint32_t time;                 \/**< Duration of the transition in [ms]*\/$/;"	m	struct:__anon18
time_orig	src/misc/lv_anim.h	/^    uint32_t time_orig;$/;"	m	struct:_lv_anim_t
time_to_open	src/draw/lv_img_decoder.h	/^    uint32_t time_to_open;$/;"	m	struct:_lv_img_decoder_dsc_t
timer_cb	src/misc/lv_timer.h	/^    lv_timer_cb_t timer_cb; \/**< Timer function*\/$/;"	m	struct:_lv_timer_t
timer_created	src/misc/lv_timer.c	/^static bool timer_created;$/;"	v	file:
timer_deleted	src/misc/lv_timer.c	/^static bool timer_deleted;$/;"	v	file:
tlsf	src/misc/lv_mem.c	/^    static lv_tlsf_t tlsf;$/;"	v	file:
tlsf_assert	src/misc/lv_tlsf.c	285;"	d	file:
tlsf_cast	src/misc/lv_tlsf.c	277;"	d	file:
tlsf_decl	src/misc/lv_tlsf.c	19;"	d	file:
tlsf_decl	src/misc/lv_tlsf.c	216;"	d	file:
tlsf_decl	src/misc/lv_tlsf.c	21;"	d	file:
tlsf_ffs	src/misc/lv_tlsf.c	/^tlsf_decl int tlsf_ffs(unsigned int word)$/;"	f
tlsf_fls	src/misc/lv_tlsf.c	/^tlsf_decl int tlsf_fls(unsigned int word)$/;"	f
tlsf_fls_sizet	src/misc/lv_tlsf.c	/^tlsf_decl int tlsf_fls_sizet(size_t size)$/;"	f
tlsf_fls_sizet	src/misc/lv_tlsf.c	213;"	d	file:
tlsf_insist	src/misc/lv_tlsf.c	845;"	d	file:
tlsf_insist	src/misc/lv_tlsf.c	916;"	d	file:
tlsf_max	src/misc/lv_tlsf.c	279;"	d	file:
tlsf_min	src/misc/lv_tlsf.c	278;"	d	file:
tlsf_private	src/misc/lv_tlsf.c	/^enum tlsf_private$/;"	g	file:
tlsf_public	src/misc/lv_tlsf.c	/^enum tlsf_public$/;"	g	file:
tlsf_static_assert	src/misc/lv_tlsf.c	294;"	d	file:
tlsfptr_t	src/misc/lv_tlsf.c	/^typedef ptrdiff_t tlsfptr_t;$/;"	t	file:
tmp	src/draw/lv_img_buf.h	/^    } tmp;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon69
tmp	src/widgets/lv_label.h	/^        char tmp[LV_LABEL_DOT_NUM + 1]; \/*Directly store the characters if <=4 characters*\/$/;"	m	union:__anon168::__anon169
tmp_ptr	src/widgets/lv_label.h	/^        char * tmp_ptr; \/*Pointer to the allocated memory containing the character replaced by dots*\/$/;"	m	union:__anon168::__anon169
today	src/extra/widgets/calendar/lv_calendar.h	/^    lv_calendar_date_t today;               \/*Date of today*\/$/;"	m	struct:__anon121
top_layer	src/hal/lv_hal_disp.h	/^    struct _lv_obj_t * top_layer;   \/**< @see lv_disp_get_layer_top*\/$/;"	m	struct:_lv_disp_t	typeref:struct:_lv_disp_t::_lv_obj_t
total_size	src/misc/lv_mem.h	/^    uint32_t total_size; \/**< Total heap size*\/$/;"	m	struct:__anon23
touchpad_get_xy	examples/porting/lv_port_indev_template.c	/^static void touchpad_get_xy(lv_coord_t * x, lv_coord_t * y)$/;"	f	file:
touchpad_init	examples/porting/lv_port_indev_template.c	/^static void touchpad_init(void)$/;"	f	file:
touchpad_is_pressed	examples/porting/lv_port_indev_template.c	/^static bool touchpad_is_pressed(void)$/;"	f	file:
touchpad_read	examples/porting/lv_port_indev_template.c	/^static void touchpad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)$/;"	f	file:
track_cross_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t track_cross_size;$/;"	m	struct:__anon142	file:
track_fix_main_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t track_fix_main_size;     \/*For non grow items*\/$/;"	m	struct:__anon142	file:
track_main_size	src/extra/layouts/flex/lv_flex.c	/^    lv_coord_t track_main_size;         \/*For all items*\/$/;"	m	struct:__anon142	file:
track_place	src/extra/layouts/flex/lv_flex.c	/^    lv_flex_align_t track_place;$/;"	m	struct:__anon140	file:
track_t	src/extra/layouts/flex/lv_flex.c	/^}track_t;$/;"	t	typeref:struct:__anon142	file:
trans_anim_cb	src/core/lv_obj_style.c	/^static void trans_anim_cb(void * _tr, int32_t v)$/;"	f	file:
trans_anim_ready_cb	src/core/lv_obj_style.c	/^static void trans_anim_ready_cb(lv_anim_t * a)$/;"	f	file:
trans_anim_start_cb	src/core/lv_obj_style.c	/^static void trans_anim_start_cb(lv_anim_t * a)$/;"	f	file:
trans_del	src/core/lv_obj_style.c	/^static bool trans_del(lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop, trans_t * tr_limit)$/;"	f	file:
trans_t	src/core/lv_obj_style.c	/^} trans_t;$/;"	t	typeref:struct:__anon187	file:
transition_delayed	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t transition_delayed;$/;"	m	struct:__anon98	file:
transition_normal	src/extra/themes/default/lv_theme_default.c	/^    lv_style_t transition_normal;$/;"	m	struct:__anon98	file:
txt	src/extra/widgets/span/lv_span.c	/^    const char * txt;$/;"	m	struct:__anon136	file:
txt	src/extra/widgets/span/lv_span.h	/^    char * txt;$/;"	m	struct:__anon134
txt	src/widgets/lv_checkbox.h	/^    char * txt;$/;"	m	struct:__anon152
txt_byte_pos	src/widgets/lv_textarea.h	/^        uint32_t txt_byte_pos;     \/*Byte index of the letter after (on) the cursor*\/$/;"	m	struct:__anon160::__anon161
txt_w	src/extra/widgets/span/lv_span.c	/^    lv_coord_t txt_w;$/;"	m	struct:__anon136	file:
type	src/draw/lv_draw_mask.h	/^    lv_draw_mask_type_t type;$/;"	m	struct:__anon76
type	src/extra/widgets/chart/lv_chart.h	/^    lv_chart_type_t type  :3; \/**< Line or column chart*\/$/;"	m	struct:__anon110
type	src/extra/widgets/meter/lv_meter.h	/^    lv_meter_indicator_type_t type;$/;"	m	struct:__anon125
type	src/font/lv_font_fmt_txt.h	/^    lv_font_fmt_txt_cmap_type_t type;$/;"	m	struct:__anon48
type	src/hal/lv_hal_indev.h	/^    lv_indev_type_t type;$/;"	m	struct:_lv_indev_drv_t
type	src/widgets/lv_arc.h	/^    uint16_t type        : 2;$/;"	m	struct:__anon166
type_data	src/extra/widgets/meter/lv_meter.h	/^    } type_data;$/;"	m	struct:__anon125	typeref:union:__anon125::__anon126
types	src/hal/lv_hal_indev.h	/^    } types;$/;"	m	struct:_lv_indev_proc_t	typeref:union:_lv_indev_proc_t::__anon93
typo_ascent	src/font/lv_font_loader.c	/^    uint16_t typo_ascent;$/;"	m	struct:font_header_bin	file:
typo_descent	src/font/lv_font_loader.c	/^    int16_t typo_descent;$/;"	m	struct:font_header_bin	file:
typo_line_gap	src/font/lv_font_loader.c	/^    uint16_t typo_line_gap;$/;"	m	struct:font_header_bin	file:
underline	src/extra/themes/mono/lv_theme_mono.c	/^    lv_style_t underline;$/;"	m	struct:__anon101	file:
underline_position	src/font/lv_font.h	/^    int8_t underline_position;      \/**< Distance between the top of the underline and base line (< 0 means below the base line)*\/$/;"	m	struct:_lv_font_t
underline_position	src/font/lv_font_loader.c	/^    int16_t underline_position;$/;"	m	struct:font_header_bin	file:
underline_thickness	src/font/lv_font.h	/^    int8_t underline_thickness;     \/**< Thickness of the underline*\/$/;"	m	struct:_lv_font_t
underline_thickness	src/font/lv_font_loader.c	/^    uint16_t underline_thickness;$/;"	m	struct:font_header_bin	file:
unicode_list	src/font/lv_font_fmt_txt.h	/^    const uint16_t * unicode_list;$/;"	m	struct:__anon48
unicode_list_1	src/font/lv_font_montserrat_10.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_12.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_12_subpx.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_14.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_16.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_18.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_20.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_22.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_24.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_26.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_28.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_28_compressed.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_30.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_32.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_34.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_36.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_38.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_40.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_42.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_44.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_46.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_48.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_montserrat_8.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	src/font/lv_font_simsun_16_cjk.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	tests/lv_test_fonts/font_1.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_1	tests/lv_test_fonts/font_2.c	/^static const uint16_t unicode_list_1[] = {$/;"	v	file:
unicode_list_2	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const uint16_t unicode_list_2[] = {$/;"	v	file:
unicode_list_5	src/font/lv_font_simsun_16_cjk.c	/^static const uint16_t unicode_list_5[] = {$/;"	v	file:
unicode_list_7	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const uint16_t unicode_list_7[] = {$/;"	v	file:
unicode_list_9	src/font/lv_font_dejavu_16_persian_hebrew.c	/^static const uint16_t unicode_list_9[] = {$/;"	v	file:
unicode_list_compare	src/font/lv_font_fmt_txt.c	/^static int32_t unicode_list_compare(const void * ref, const void * element)$/;"	f	file:
update_cursor_position_on_click	src/widgets/lv_textarea.c	/^static void update_cursor_position_on_click(lv_event_t * e)$/;"	f	file:
update_mode	src/extra/widgets/chart/lv_chart.h	/^    lv_chart_update_mode_t update_mode : 1;$/;"	m	struct:__anon110
used	src/misc/lv_mem.h	/^    uint8_t used : 1;$/;"	m	struct:__anon24
used_cnt	src/misc/lv_mem.h	/^    uint32_t used_cnt;$/;"	m	struct:__anon23
used_pct	src/misc/lv_mem.h	/^    uint8_t used_pct; \/**< Percentage used*\/$/;"	m	struct:__anon23
user_data	src/core/lv_event.c	/^    void * user_data;$/;"	m	struct:_lv_event_dsc_t	file:
user_data	src/core/lv_event.h	/^    void * user_data;$/;"	m	struct:_lv_event_t
user_data	src/core/lv_group.h	/^    void * user_data;$/;"	m	struct:_lv_group_t
user_data	src/core/lv_obj.h	/^    void * user_data;$/;"	m	struct:_lv_obj_t
user_data	src/core/lv_obj_class.h	/^    void * user_data;$/;"	m	struct:_lv_obj_class_t
user_data	src/core/lv_obj_pos.h	/^    void * user_data;$/;"	m	struct:__anon200
user_data	src/core/lv_obj_style.h	/^    void * user_data;$/;"	m	struct:__anon197
user_data	src/core/lv_theme.h	/^    void * user_data;$/;"	m	struct:_lv_theme_t
user_data	src/draw/lv_img_decoder.h	/^    void * user_data;$/;"	m	struct:_lv_img_decoder_dsc_t
user_data	src/draw/lv_img_decoder.h	/^    void * user_data;$/;"	m	struct:_lv_img_decoder_t
user_data	src/font/lv_font.h	/^    void * user_data;               \/**< Custom user data for font.*\/$/;"	m	struct:_lv_font_t
user_data	src/hal/lv_hal_disp.h	/^    void * user_data; \/**< Custom display driver user data*\/$/;"	m	struct:_lv_disp_drv_t
user_data	src/hal/lv_hal_indev.h	/^    void * user_data;$/;"	m	struct:_lv_indev_drv_t
user_data	src/misc/lv_anim.h	/^    void * user_data; \/**< Custom user data*\/$/;"	m	struct:_lv_anim_t
user_data	src/misc/lv_async.c	/^    void * user_data;$/;"	m	struct:_lv_async_info_t	file:
user_data	src/misc/lv_color.h	/^    void * user_data;$/;"	m	struct:_lv_color_filter_dsc_t
user_data	src/misc/lv_fs.h	/^    void * user_data; \/**< Custom file user data*\/$/;"	m	struct:_lv_fs_drv_t
user_data	src/misc/lv_style.h	/^    void * user_data;              \/**< A custom user data that will be passed to the animation's user_data *\/$/;"	m	struct:__anon18
user_data	src/misc/lv_timer.h	/^    void * user_data; \/**< Custom user data*\/$/;"	m	struct:_lv_timer_t
v	src/misc/lv_color.h	/^    uint8_t v;$/;"	m	struct:__anon39
v_p	src/misc/lv_style.h	/^    } v_p;$/;"	m	struct:__anon20	typeref:union:__anon20::__anon21
valid_x	src/widgets/lv_textarea.h	/^        lv_coord_t valid_x;        \/*Used when stepping up\/down to a shorter line.$/;"	m	struct:__anon160::__anon161
value	src/core/lv_obj_draw.h	/^    int32_t value;                      \/**< A value calculated during drawing. E.g. Chart's tick line value.*\/$/;"	m	struct:__anon199
value	src/extra/widgets/spinbox/lv_spinbox.h	/^    int32_t value;$/;"	m	struct:__anon139
value	src/misc/lv_style.h	/^    lv_style_value_t value;$/;"	m	struct:__anon19
value	src/widgets/lv_arc.h	/^    int16_t value;			 	\/*Current value of the arc*\/$/;"	m	struct:__anon166
value1	src/misc/lv_style.h	/^        lv_style_value_t value1;$/;"	m	union:__anon20::__anon21
value_to_set	src/widgets/lv_slider.h	/^    int32_t * value_to_set; \/*Which bar value to set*\/$/;"	m	struct:__anon158
value_update	src/widgets/lv_arc.c	/^static void value_update(lv_obj_t * obj)$/;"	f	file:
values	src/font/lv_font_fmt_txt.h	/^    const int8_t * values;$/;"	m	struct:__anon49
values_and_props	src/misc/lv_style.h	/^        uint8_t * values_and_props;$/;"	m	union:__anon20::__anon21
var	src/misc/lv_anim.h	/^    void * var;                          \/**<Variable to animate*\/$/;"	m	struct:_lv_anim_t
vdiv_cnt	src/extra/widgets/chart/lv_chart.h	/^    uint16_t vdiv_cnt;      \/**< Number of vertical division lines*\/$/;"	m	struct:__anon110
vect	src/hal/lv_hal_indev.h	/^            lv_point_t vect; \/**< Difference between `act_point` and `last_point`.*\/$/;"	m	struct:_lv_indev_proc_t::__anon93::__anon94
ver_res	src/hal/lv_hal_disp.h	/^    lv_coord_t ver_res;         \/**< Vertical resolution.*\/$/;"	m	struct:_lv_disp_drv_t
version	src/font/lv_font_loader.c	/^    uint32_t version;$/;"	m	struct:font_header_bin	file:
vertex_p	src/draw/lv_draw_mask.h	/^        lv_point_t vertex_p;$/;"	m	struct:__anon79::__anon80
w	src/draw/lv_img_buf.h	/^    uint32_t w : 11; \/*Width of the image map*\/$/;"	m	struct:__anon63
w	src/draw/lv_img_buf.h	/^    uint32_t w : 11; \/*Width of the image map*\/$/;"	m	struct:__anon64
w	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t * w;$/;"	m	struct:__anon146	file:
w	src/widgets/lv_img.h	/^    lv_coord_t w;          \/*Width of the image (Handled by the library)*\/$/;"	m	struct:__anon177
w_layout	src/core/lv_obj.h	/^    uint16_t w_layout   :1;$/;"	m	struct:_lv_obj_t
wait_cb	src/hal/lv_hal_disp.h	/^    void (*wait_cb)(struct _lv_disp_drv_t * disp_drv);$/;"	m	struct:_lv_disp_drv_t
wait_finish	src/gpu/lv_gpu_stm32_dma2d.c	/^static void wait_finish(void)$/;"	f	file:
wait_until_release	src/hal/lv_hal_indev.h	/^    uint8_t wait_until_release : 1;$/;"	m	struct:_lv_indev_proc_t
walk_core	src/core/lv_obj_tree.c	/^static lv_obj_tree_walk_res_t walk_core(lv_obj_t * obj, lv_obj_tree_walk_cb_t cb, void * user_data)$/;"	f	file:
wh_bits	src/font/lv_font_loader.c	/^    uint8_t wh_bits;$/;"	m	struct:font_header_bin	file:
width	src/draw/lv_draw_arc.c	/^    lv_coord_t width;$/;"	m	struct:__anon60	file:
width	src/draw/lv_draw_arc.h	/^    lv_coord_t width;$/;"	m	struct:__anon61
width	src/draw/lv_draw_line.h	/^    lv_coord_t width;$/;"	m	struct:__anon71
width	src/extra/widgets/meter/lv_meter.h	/^            uint16_t width;$/;"	m	struct:__anon125::__anon126::__anon128
width	src/extra/widgets/meter/lv_meter.h	/^            uint16_t width;$/;"	m	struct:__anon125::__anon126::__anon129
width	tests/lv_test_assert.c	/^    int width, height;$/;"	m	struct:__anon201	file:
width_def	src/core/lv_obj_class.h	/^    lv_coord_t width_def;$/;"	m	struct:_lv_obj_class_t
width_mod	src/extra/widgets/meter/lv_meter.h	/^            int16_t width_mod;$/;"	m	struct:__anon125::__anon126::__anon130
wrap	src/core/lv_group.h	/^    uint8_t wrap : 1;           \/**< 1: Focus next\/prev can wrap at end of list. 0: Focus next\/prev stops at end$/;"	m	struct:_lv_group_t
wrap	src/extra/layouts/flex/lv_flex.c	/^    uint8_t wrap :1;$/;"	m	struct:__anon140	file:
write_cb	src/misc/lv_fs.h	/^    lv_fs_res_t (*write_cb)(struct _lv_fs_drv_t * drv, void * file_p, const void * buf, uint32_t btw, uint32_t * bw);$/;"	m	struct:_lv_fs_drv_t
x	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t * x;$/;"	m	struct:__anon146	file:
x	src/misc/lv_area.h	/^    lv_coord_t x;$/;"	m	struct:__anon41
x1	src/misc/lv_area.h	/^    lv_coord_t x1;$/;"	m	struct:__anon42
x2	src/misc/lv_area.h	/^    lv_coord_t x2;$/;"	m	struct:__anon42
x_axis_sec	src/extra/widgets/chart/lv_chart.h	/^    uint8_t x_axis_sec : 1;$/;"	m	struct:__anon107
x_ext_buf_assigned	src/extra/widgets/chart/lv_chart.h	/^    uint8_t x_ext_buf_assigned : 1;$/;"	m	struct:__anon107
x_points	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t * x_points;$/;"	m	struct:__anon107
xmax	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t xmax[2];$/;"	m	struct:__anon110
xmin	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t xmin[2];$/;"	m	struct:__anon110
xs	src/draw/lv_img_buf.h	/^        lv_coord_t xs;$/;"	m	struct:__anon66::__anon69
xs_int	src/draw/lv_img_buf.h	/^        lv_coord_t xs_int;$/;"	m	struct:__anon66::__anon69
xy_bits	src/font/lv_font_loader.c	/^    uint8_t xy_bits;$/;"	m	struct:font_header_bin	file:
xy_steep	src/draw/lv_draw_mask.h	/^    int32_t xy_steep;$/;"	m	struct:__anon77
y	src/draw/lv_draw_label.h	/^    int32_t y;$/;"	m	struct:_lv_draw_label_hint_t
y	src/extra/layouts/grid/lv_grid.c	/^    lv_coord_t * y;$/;"	m	struct:__anon146	file:
y	src/misc/lv_area.h	/^    lv_coord_t y;$/;"	m	struct:__anon41
y1	src/misc/lv_area.h	/^    lv_coord_t y1;$/;"	m	struct:__anon42
y2	src/misc/lv_area.h	/^    lv_coord_t y2;$/;"	m	struct:__anon42
y_axis_sec	src/extra/widgets/chart/lv_chart.h	/^    uint8_t y_axis_sec : 1;$/;"	m	struct:__anon107
y_bottom	src/draw/lv_draw_mask.h	/^        lv_coord_t y_bottom;$/;"	m	struct:__anon83::__anon84
y_ext_buf_assigned	src/extra/widgets/chart/lv_chart.h	/^    uint8_t y_ext_buf_assigned : 1;$/;"	m	struct:__anon107
y_inv	src/widgets/lv_line.h	/^    uint8_t y_inv : 1;                  \/**< 1: y == 0 will be on the bottom*\/$/;"	m	struct:__anon171
y_points	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t * y_points;$/;"	m	struct:__anon107
y_prev	src/draw/lv_draw_mask.h	/^    int32_t y_prev;$/;"	m	struct:__anon81
y_prev_x	src/draw/lv_draw_mask.h	/^    lv_sqrt_res_t y_prev_x;$/;"	m	struct:__anon81
y_top	src/draw/lv_draw_mask.h	/^        lv_coord_t y_top;$/;"	m	struct:__anon83::__anon84
year	src/extra/widgets/calendar/lv_calendar.h	/^    uint16_t year;$/;"	m	struct:__anon120
year_event_cb	src/extra/widgets/calendar/lv_calendar_header_dropdown.c	/^static void year_event_cb(lv_event_t * e)$/;"	f	file:
year_list	src/extra/widgets/calendar/lv_calendar_header_dropdown.c	/^static const char * year_list = {$/;"	v	file:
ymax	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t ymax[2];$/;"	m	struct:__anon110
ymin	src/extra/widgets/chart/lv_chart.h	/^    lv_coord_t ymin[2];$/;"	m	struct:__anon110
ys	src/draw/lv_img_buf.h	/^        lv_coord_t ys;$/;"	m	struct:__anon66::__anon69
ys_int	src/draw/lv_img_buf.h	/^        lv_coord_t ys_int;$/;"	m	struct:__anon66::__anon69
yx_steep	src/draw/lv_draw_mask.h	/^    int32_t yx_steep;$/;"	m	struct:__anon77
zero_mem	src/misc/lv_mem.c	/^static uint32_t zero_mem = ZERO_MEM_SENTINEL; \/*Give the address of this variable if 0 byte should be allocated*\/$/;"	v	file:
zoom	src/draw/lv_draw_img.h	/^    uint16_t zoom;$/;"	m	struct:__anon87
zoom	src/draw/lv_img_buf.h	/^        uint16_t zoom;              \/*256 no zoom, 128 half size, 512 double size*\/$/;"	m	struct:__anon66::__anon67
zoom	src/widgets/lv_img.h	/^    uint16_t zoom;         \/*256 means no zoom, 512 double size, 128 half size*\/$/;"	m	struct:__anon177
zoom_inv	src/draw/lv_img_buf.h	/^        uint32_t zoom_inv;$/;"	m	struct:__anon66::__anon69
zoom_x	src/extra/widgets/chart/lv_chart.h	/^    uint16_t zoom_x;$/;"	m	struct:__anon110
zoom_y	src/extra/widgets/chart/lv_chart.h	/^    uint16_t zoom_y;$/;"	m	struct:__anon110
